stemmed_classla_tokens
"ovd konacn resenj"
"start funkcij za pocetk igr"
"cist konzol"
"reset vremen vrem sistem za rnd"
"3 unes za prekid igr"
"pun se zastavic za odgovarajuc polj"
"a koj su na nul ostaj imen polj npr. A1 , A2 ."
"zapocinj se igr"
"a = fniz [ 0 ]"
"funkcij koj ka rezulta vrc duzin string"
"pomeranj u desn"
"ov se menj pritisk na dugm c"
"cistim bafer"
"za sad korist ov al svejedn je im promenljiv bitn je da je okej velicin : tod"
"podesi smo funkcij on_timer da sam seb poziv"
"podesav se vidn tack"
"koordinatn sist , ak je fals ne iscrtav se ak je tru iscrtav se"
"skaliram sve za koeficijent , po svim os"
"u ov slucaj ne skaliram , al ipak cu ostavi da mi bud laks kasn da ne razmisjlja"
"iscrtava igrc"
"drawPlayerModel2D ( ) ;"
"iz keyboard . h"
"biram da li zeli 3 d il 2 d"
"radi switch za nas dugmad"
"predefinisan promenljiv za dirk na tastatur"
"inicijalizuj glut"
"promenljiv koj ce nam pomeri malk iscrtavanj ispod y jer ne zeli da vidi prostor izmedj kad se renderuj"
"sprintf ( string , "" % d ! "" , scor ) ;"
"ispisuj scor"
"iscrtava red plan"
"podesava prvobitn ploc , i pozicij igrc u odnos na nju"
"promenljiv koj cuva pozicij igrc"
"parametar za x os crven ravn"
"animation parametar"
"promenljiv koj ce mi rec da li sam u 3 d prikaz il 2 d prikaz"
"koristim ga u on_timer poziv za kontrol frejmov po sekund"
"moj promenljiv"
"duzin ploc"
"bool promenljiv za kretanj"
"cist ogranicenj za visin"
"dodatn skracivanj"
"mog sam da stav i if els konstrukcij al je svejedn jer ce se svakak poziva za jedn od ov dva i nij bitan redosled prover"
"ukolik je visin na koj treba da skocim manj od nek del visin naseg igrc ond necem da skacem , sam da predjem prek tog"
"podesava vektor"
"inicijalizuj osobin svetlost koj zeli i pozicij osvetljenj"
"z os"
"progra ilustruj globaln i lokaln promenljiv"
"if ( b > 0 )"
"progra ilustruj grananj ( switch ) - ispituj se vrst karakter"
"progra ilustruj petlj ( for )"
"prekid petlj"
"progra ilustruj definisanj funkcij - funkcij koj sabir dva broj"
"progra ilustruj rad sa ( statick alociran ) nizov - pronalazenj maksimaln element niz"
"ov ne moz : int a [ ] ; ov moz : int a [ 10 ] ; cak i ov : int a [ 100 ] = { 3 , 4 } ;"
"kvadra broj - ispravljen verzij"
"progra ilustruj c pretrpocesor - direktiv #define"
"raspon"
"aritmetick operator im vec prioritet u odnos na relacijsk , a ov u odnos na logick pa zagrad u prethodn izraz ka ni u naredn izraz nis neophodn"
"ipak , negacij ( ka unarn operator ) im prioritet u odnos na sve binarn operator pa je zagrad u izraz ! ( 3 > 5 ) neophodn"
"petlj sa dva brojc"
"ugnjezdjen petlj - tablic mnozenj"
"proverava obicn cifr"
"bto - konverzij iz dat brojn sistem u dekadn"
"proverava slovn cifr za mal slov"
"kolicnik i ostatk su takv brojev q i r za koj vaz : x = q*y + r , 0 < = r < y"
"euklidov algorita za odredjivanj nzd - prek deljenj - rekurzivn definicij"
"demonstrir zivotn vek i oblast vazenj promenjiv ( scop )"
"statick promenjiv cuva vrednost kroz poziv funkcij . inicijalizacij se odvij sam u okvir prv poziv ."
"printf ( "" % d "" , sum ( 3 )) ;"
"deklaracij i definicij - sum - verzij sa definicij"
"neispravn poziv ne prijavljuj gresk"
"obratit paznj na ov :"
"funkcij ucitav rec sa standardn ulaz i smest je u niz karakter s. ov uspev zbog tog sto se po vrednost prenos adres pocetk niz , a ne ce niz"
"ist je i int * px ;"
"moguc je dodeli niz pokazivac odgovarajuceg tip"
"demonstrir vez izmedj pokazivc i nizov"
"a = pa ;"
"niz je moguc koristit ka pokazivc tj. vaz pravi pokazivack aritmetik"
"pokazivac je na osnov prethodn moguc indeksir ka nizov"
"pronalaz prv pozicij karakter c u string s , odnosn -1 ukolik s ne sadrz c"
"nikak els return -1 ;"
"pronalaz poslednj pozicij karakter c u string s , odnosn -1 ukolik s ne sadrz c"
"kopir karakter po karakter , sve dok nij iskopiran karakter ' \ 0 '"
"nadovezuj string t na kraj string s. pretpostavlj da u s im dovoljn prostor ."
"pronalazim kraj string s"
"vrs se kopiranj , slicn funkcij string_copy"
"vezb rad , implementiran su funkcij bibliotek string . h"
"* s i * t su prv karakter u koj se nisk razlikuj . na osnov njihov odnos , odredjuj se odnos string"
"izracunav duzin string"
"funkcij izracunav sum \ sum_ { i = 1 } ^ n f ( i ) , gde je f dat funkcij prv argument funkcij sumiraj je int ( * f ) ( int ) sto je pokazivc na funkcij koj im jedan argument tip int i vrc vrednost tip int"
"izracunav duzin duz zadat sa dve tack"
"izracunav povrsin trougl heronov obrasc . argument funkcij su tr tack koj predstavlja temen trougl"
"duzin stranic"
"poluobi"
"dodajem duzin stranic koj spaja susedn temen"
"izracunav povsin konveksn poligon . argument funkcij su niz tacak koj predstavlja temen poligon ka i njihov br"
"definisem dve promenljiv tip tack"
"triangl je niz od tr tack - trouga ( 0,0 ) , ( 0,1 ) , ( 1,0 )"
"squar je niz od cetir tack - jedinicn kvadra ."
"definisem promenljiv tip tack . umest struct point mozem koristit point"
"ispisuj velicin struktur tack"
"promenljiv lokaln za funkcij main"
"globaln promenljiv"
"stampanj podatk o zaposlen"
"primer : rad sa struktur . korisnik unos podatk o zaposlen , progra ih tabelarn ispisuj ."
"niz struktur svih aspolvent"
"for petlj koj se krec od prv do poslednjeg apsolvent"
"unos podatk o svak apsolvent"
"prosek inicijalizovan na nul pr unos"
"list predprocesorsk direktiv"
"korisnik odredjuj br timov sto ce odredi duzin niz za tabel"
"upis podrazumevan vrednost u tabel"
"izracunavanj broj svih moguc utakmic"
"popunjavanj rezultat utakmic . iteracij kroz dve petlj dobija br prolaz koj odgovar promenljiv BROJ_UTAKMICA . to znac da se dobijaj parov ( utakmic ) po kriterijum ‘ svak sa svak ’ – kombinacij bez ponavljanj . timov uzima iz tabel timov ."
"dodel id_a svak tim po utakmic . uspostavlj se relacij tim-utakmica . kasn se id_i korist za rekonstrukcij rezultat utakmic ."
"funkcij izracunav max br kombinacij . formul za kombinacij bez ponavljanj je : n ! / ( k ! * ( n – k ) ! )"
"primer : progra za izracunavanj statistik u grup na sp u fudba . grup im 4 tim , u grup igr svak sa svak , na osnov odigran utakmic u grup i uneti rezultat izracunav se : poredak u grup , ekip sa najbolj gol razlik , ekip sa najvis postignut golov ."
"niz struktur za unos rezultat utakmic"
"definisanj promenljiv i sa dodeljivanj vrednost 2"
"definisanj promenljiv"
"izracunavanj ob pravougaonik"
"izracunavanj povrsin pravougaonik"
"simbolick konstant"
"unos prv tack"
"primer : izracuna rastojanj izmed dve tack u prostor ak su zada koordina krajnj tacak"
"unos ugl u radijan"
"konverzij u stepen"
"zaokruzivanj broj stepen"
"prover uslov izraz"
"prv nacin"
"primer : izracunavanj n-tog stepen celog broj a. ob broj se unos sa tastatur"
"izracunavanj sum kvadrat"
"cifr na mest stotic"
"primer : progra za nalazenj svih trocifren brojev koj su jednak zbir kubov svoji cifar , abc = a3 + b3 + c3"
"tabeliranj funkcij"
"primer : progra za tabeliranj funkcij : y = ( 1 + x + x2 ) u opseg od xmin do xmax sa korak dx"
"primer : progra za tabeliranj funkcij ' s ' u opseg od xmin do xmax sa korak dx s =( 1 + x ) * ( 1 + x ^ 2 ) * … * ( 1 + x ^ n )"
"unos granic ispis"
"izracunavanj i stampanj sinus ugl"
"primer : progra za izracunavanj aritmetick sredin prv n brojev . unos broj n vrs se sa tastatur"
"odredjivanj broj pojavljivanj znak"
"zaglavlj"
"pauz koristim za ispis jedn po jedn ekran"
"promen boj"
"poruk press any key …"
"kraj sa null"
"prihvat dekadn br i vrc oktaln niz"
"smest ostatk u niz"
"prv 10 su mogl ic pod default vrednost al je ovak pregledn"
"menjanj boj"
"ispisivanj lin"
"prover i eventualn zamen ukolik je od vec od do"
"funkcij koj vrs izracunavanj i prikaz fib . niz"
"ucitavanj broj m"
"funkcij koj rad izracunavanj"
"doda na sum kvadra neparn broj"
"primer : progra za sortiranj niz u neopadajuc redosled . niz se unos sa tastatur ."
"unos broj sa tastatur"
"izracunavanj srednj temperatur za cel godin"
"primer : progra za izracunavanj i prikazivanj prosecn vrednost clanov niz i daj izvesta koj clanov niz su manj od izracunat prosek . niz brojev se unos sa tastatur"
"zbir se dodaj cifr koj oznacav stotin"
"zbir se dodaj cifr koj oznacav desetic"
"primer : progra za izracunavanj povrsin trougl , ak su unet sve tr stranic ( uz upotreb funkcij )"
"ispis rastojanj izmedj tacak"
"izracunavanj poluob trougl"
"ispis povrsin trougl"
"winap header za promen boj"
"definis vrednost za pi"
"ucitavanj vrednost za korak"
"ispis prozirn lin"
"koriscen je uslov < 90.01 , a ne < 90 zbog racunanj sa doubl vrednost , a ne sa int vrednost"
"uvecanj x za zada korak"
"pomocn promenljiv temp postavljen je na dva"
"ak nij , ond progra nec ni ulazit u whi petlj"
"dodel vrednost odgovarajuc clan niz"
"temp se inkrementir uvek kad je niz [ i ] = niz [ i-1 ] + niz [ i-2 ]"
"poruk korisnik , koj se stamp ak je temp = duzin"
"deklarisanj funkcij , koj vrc celobrojn rezulta"
"alokacij potrebn memorij"
"unos dodatn clan sa tastatur"
"alokacij dodatn memorij"
"unos sa tastatur"
"unos element matric sa tastatur"
"poziv fukcij za izracunavanj broj polozen na ispit"
"poziv fukcij za izracunavanj prosek polozen"
"ak je korisnik une bilo sta osi malog il velik slov y il n"
"promenljiv ' j ' je pomocn i korist se u svim ' for ' petlj"
"selekcij ' if ' odredjuj tok izvrsavanj program u slucaj ispravn odgovor zavisn da li je korisnik odgovori sa y il sa n"
"ispisuj 52 put dat karakter u ist red"
"sad sled niz naredb ' printf ' , namenjen za formiranj i ispisivanj okvir tabel pr tom se korist karakter , koj je u prosiren asci tabel oznacen broj 178"
"u slucaj da je korisnik odgovori sa ' n ' il ' n '"
"ov ' for ' petlj sluz za ispisivanj brojev 128 - 255 i , njim odgovarajuc , karakter im ukupn 32 iteracij , jer tabel treba da im 4 kolon sa po 32 clan 4 * 32 = 128 to je ukupan br dodatn znak ovd se korist pomocn promenljiv ' k ' pr svem ovom , vod se racun i o stampanj granic tabel ( korist se karakter 178 )"
"funkcij za rotiranj za jedn mest"
"prikaz 10 prv znak dat string"
"prikaz 7 poslednj znak dat string"
"stampanj sortiran niz"
"stampanj duzin sortiran niz"
"primer : progra koj iz dat string izdvaj sam slov . funkcij vrc pokazivc na novokreiran niz ."
"trebaju nam dve celobrojn promenljiv , sum je na pocetk jednak nul"
"odredjuj da li su unet brojev u dat opseg"
"alokacij memorij"
"oslobadjanj memorij"
"unos element matric"
"funkcij za izracunavanj broj element , koj su jednak aritmetick sredin svoji sused"
"temp – za racunanj broj trazen element , br – za br sused dat element"
"da li postoj red iznad"
"da li postoj kolon desn"
"primer : progra koj izracunav br i ispisuj pozicij element matric realn brojev ( tip float ) koj su jednak aritmetick sredin svoji sused ( maksimaln 8 sused )"
"upis broj kolon"
"poziv funkcij ispisrezultat ( )"
"ov tr promenljiv sluz za smestanj ukupn dnevn radn vremen za svak pojedinc"
"izracunavanj rezultat prek poziv funkcij racuna ( )"
"s – br sal , st – br student"
"unos broj sal i broj student"
"prover da li je alokacij uspel"
"primer : progra za rasporedjivanj student po sal za polaganj ispit . na pocetk program treba ucita br sal , br student i br mest u svak od sal . sal treba popunjava red , pocev od on sa najvec broj mest . na kraj treba ispisa redn brojev on sal , koj ce se koristit za polaganj ispit ."
"pretpostavk je da ce bar jedan student polaga"
"pravljenj pokazivc f na fajl"
"visestruk selekcij za unet izbor"
"pokazivc f pokazuj na fajl podac . txt za citanj"
"ukolik otvaranj nij uspel , fopen vrc null , prijavljuj gresk i zavrsava progra"
"zatvaram datotek"
"poruk korisnik za unos string"
"poziva funkcij tak sto joj saljem dva broj ( 5 i 2 ) i adres promenljiv div i mod na koj ce se postavi rezulta"
"primer : funkcij vrc dve vrednosti-kolicnik i ostatk dva dat broj . ov se postiz tak sto se funkcij preda vrednost dva broj ( x i y ) koj se del i adres dve promenljiv na koj ce se smestit rezulta ."
"int * pt = & t [ 0 ] ;"
"izracunavanj krajnj isplat penzij na mesecn nivo"
"poziv sistemsk pauz i brisanj prethodn sadrzaj sa ekran"
"primer : progra za izracunavanj penzij prem privatn penzion fond . korisnik unos godin uplat , godin isplat godisnj stop prinos i mesecn sum koj uplacuj . progra za unet vrednost izracunav krajnj akumuliran sum i krajnj sum isplat mesecn penzij ."
"u kolik je unet pogresn vrednost , poruk korisnik o gresc"
"poruk korisnik o unos godisnjeg trajanj isplat penzij"
"maksimaln br artika"
"ucitav podatk o jedn artikl iz dat datotek . vrc da li su podac uspesn procitan"
"otvaram datotek i proverava da li smo uspel"
"ispitavanj da li je dosl do prekoracenj broj radn sat i obracun plat sa povisic u zavisnost od sat dodatn rad"
"inicijalizacij , br trenutn ucitan igrc i br bod"
"najbolj igrc na turnir"
"ucitavanj igrc iz fajl"
"ispis obracun kredit"
"izbor kdedit br. 2"
"ispis obracun podatk"
"poruk korisnik o banc br. 2-RAIFFAEISEN bank"
"stamp"
"progra na koj iz datotek igrac . txt č  it podatk o igrač  im na svetsk prvenstv u fudba , pronalaz igrač  a sa najvećim broj ostvaren poen , na standardn izlaz ispisuj im tog igrač  a i br ostvaren poen . smatr se da datotek igrac . txt postoj ."
"igrc svakak dobij bod"
"igrc dobij dodatn bod ak je igra prek 200 min"
"azuriranj maksimaln broj bod"
"petlj koj ucitav podatk iz fajl i broj njihov ukupan br"
"petlj koj tabelarn ispisuj podatk o igrac"
"unosenj cetir celobrojn vrednost"
"funkcij ceo_br iyracunav manj br od r1 i r2 i smest u promenljiv rezulta"
"primer : progra koj na standardn ulaz pr cetir celobrojn vrednost i vrc najmanj unet vrednost pozivajuc funkcij koj uz dve celobrojn vrednost , pored ih i vrc vrednost manj ."
"uvecavanj clan niz"
"ostatk pr deljenj krajnj sum po modul 11"
"kontroln br je 0"
"poruk korisnik o unos maticn broj"
"prover , ak je kontroln br jednak poslednj cifr jmbg"
"poruk korisnik o tacnost jmbg"
"poruk korisnik o gresc prilik unos jmbg"
"promenljiv ' c ' predstavlj ostatk pr deljenj krajnj sum po modul 10"
"prover , u kolik nem ostatk pr deljenj kontroln br je 0"
"u kolik im ostatk , od broj 10 se oduz br ostatk i dobijen br predstavlj kontroln"
"funkcij koj izracunav kontroln br"
"unos vrednost potrebn za proracun"
"racunanj predjen put prek duplog poziv funkcij"
"upis u izlazn fajl outf"
"primer : progra koj šifrira sadržaj iz fajl test . dat ( formiran od velik slov alfabet ) , šifriran sadržaj upisuj u fajl sifr . dat . znak se šifrira tak što se zamenjuj sledećim asci znak . znak z se zamenjuj sa znak A."
"primer : progra koj iz dat fajl “ ulaz . txt ” čita reči i određuje prosečan br slov u rečima parn dužine ."
"prover uslov da li je n jednak 1"
"prototip funkcij"
"funkcij za unos element niz"
"uvecav se golbaln promenljiv a"
"umanjuj se lokaln promenljiv a. globaln promenljiv zadrzav svoj vrednost"
"racunanj duzin visin bocn stran"
"unos vrednost h"
"racunanj duzin visin bocn stran trostran praviln piramid"
"kraj blok naredb za stepen"
"ispitivanj tacnost unos za trazen vrednost xmin i xmax"
"u promenljiv a stavlja vrednost prv element niz prek pointer * p_fniz"
"ispisivanj znakovn niz prek pointer"
"funkcij , brzin nek tel po formul : v =* a*t + b*sin ( c*t )"
"celobrojn deljenj - rezulta je 2"
"iak je c float , vrs se celobrojn deljenj jer su i a i b cel"
"vec"
"razlicit"
"lenj izracunavanj : kak 3 nij vec od 5 to se vrednost drug poredjenj nec racuna jer je netacn u konjunkcij sa proizvoljn izraz sigurn netacn ."
"ist sto i a = a + korak ;"
"definicij simbolick konstant prek #define direktiv"
"x ce biti jednak tr"
"ekvivalentn prethodn"
"obratit paznj na raspored zagrad"
"korist se int a ne char zat sto zeli da razlikuj kraj ulaz od vazec znak"
"ucitav se prv znak sa ulaz"
"brojc lin"
"brojc horizontaln tabulator"
"for petlj mora da im tel pa makar on bilo przn"
"tekuc znak sa ulaz"
"uocit : blok naredb whi ciklus nij ogradjen viticast zagrad jer postoj sam jedn if naredb !"
"krac nacin da se postign prethodn"
"ispis nisk s koristec funkcij printf"
"prv vrst sadrz brojev od 1 do 10"
"ilustruj vidljivost imen"
"izlaz : zdrav zdrav svim 4 5 0 5 2 -1"
"br bitov tip unsigned"
"pozicij broji ka u sledec primer : poz : . 10 9 8 7 6 5 4 3 2 1 0 bit : . 0 0 0 1 1 1 0 0 1 1 0"
"mask 0.01 - poslednj n jedinic"
"brisem n bitov pocevs od pozicij p"
"upisuj bitov broj y u br x i vraca rezulta"
"mask 01.110 - n jedinic pocevs od pozicij p"
"invertuj koristec ekskluzivn disjunkcij"
"funkcij obrc binarn zapis neoznacen broj x tak sto bitov cit unatrag"
"postupak se ponavlj n put"
"funkcij proverav da li se dat element x nalaz u dat niz cel brojev . funkcij vrc pozicij u niz na koj je x pronadjen odnosn -1 ukolik element nem ."
"binarn pretrag niz cel brojev - iterativn verzij"
"! vazn ! pretpostavk je da je niz a uredjen po velicin"
"pretrazuj interva [ l , d ]"
"element je nadjen"
"ito : konvertuj br n u niz karakter s"
"revers : obrc string , npr string "" 1234 "" postaj "" 4321 """
"izbac cifr iz zapis"
"obradjuj se karakter sve dok su to validn cifr"
"racun se vrednost broj dok se ne naidj na tack"
"racun se vrednost broj iz tack"
"preskac se jedn mest ukolik je bio upisan znak u br"
"deklaracij celog broj"
"jovan krstevsk NRT-86 / 17"
"Izračunavanje dat binomn koeficijent ."
"redn br dan u nedelj ."
"br dan u mesec ."
"dodavanj celog broj ."
"Skraćeno im dan ."
"pisanj datum ."
"transponovan matric"
"zbir matric ."
"razlik matric ."
"proizvod matric ."
"dinniz . h"
"ispisivanj dinamičkog niz ."
"struktur dinamičkog niz ."
"Čitanje dinamičkog niz ."
"Izračunavanje exp ( x ) pomoću tejlorov razvoj ."
"ekspon . c"
"apsolutn greška ."
"fib . c"
"rekurzivn :"
"iterativn :"
"gausov eliminacion metod ."
"memorij :"
"Čitanje red sistem jednačina :"
"kraj ak je dužina imen nul ."
"grafik1 . c"
"grafik3 . c"
"ispitivanj funkcij grafik ."
"izost1 . c"
"izost2 . c"
"Izračunavanje zbir uzastopn prirodn brojev ."
"izraz2 . c"
"Izračunavanje proizvod uzastopn prirodn brojev ."
"Izračunavanje zbir faktorijel ."
"izraz3 . c"
"for ( int i = 1 ; i < = n ; s + =( f * = i ++ )) ;"
"struktur kompleksn broj ."
"krug . c"
"koeficijent jednačine ."
"imaginarn delov koren ."
"Pretraživanje lavirint ."
"korak udesn ."
"ispisivanj lavirint ."
"izostavljanj svak pojavljivanj ."
"ispisivanj list ."
"dodavanj na kraj ."
"definicij paket funkcij za obrad list ( iterativn ) ."
"definicij paket funkcij za obrad list ( rekurzivn ) ."
"dodavanj iz poslednjeg elem ."
"dodavanj ispred tekućeg elem ."
"stvaranj prazn list ."
"pomeranj na prv element ."
"pomeranj na sledeći element ."
"uz čuvanje redosled brojev :"
"Određivanje dužine list :"
"ispisivanj list :"
"glav list ."
"obrad relativn binarn datotek ."
"magacin . c"
"magpis . c"
"stvaranj početne datotek ."
"Uređivanje kolon po veličinama zbirov :"
"matrica2 . c"
"min3 . c"
"min . c"
"minimt2 . c"
"Najveći zajednički delilac i najmanj zajednički sadržalac dva broj ."
"ispitivanj funkcij obrn ."
"funkcij za prigušene oscilacij ."
"iterativn - generiše sam sledeću permutacij ."
"primer obrad jedn permutacij ."
"koeficijent i red polinom ."
"dan"
"premest . c"
"glavn funkcij za prikazivanj rad prethodn funkcij ."
"do kraj red"
"Čitanje brojev za traženje :"
"sekvencijaln pretraživanje . ( neuređen niz )"
". i je nov mest , id dalj ."
"Početno i krajnj mest ."
"razmak1 . c"
"stavljanj broj u red ."
"stvaranj nov red :"
"red2 . c"
"definicij paket za red neograničenog kapacitet ."
"stvaranj red ."
"redosled . c"
"reduk . c"
"deklaracij paket za obrad relativn datotek ."
"br zapis u datotec ."
"stvaranj nov datotek ."
"Dužina zapis ."
"struktur zapis u datotec ="
"brisanj zapis ="
"promen cen artika ="
"promen količine artika u skladištu ="
"ispisivanj poruk o grešci ="
"glavn funkcij ="
"obrad sekvencijaln binarn datotek ."
"rekurzivn funkcij za računanje skalarn proizvod dva vektor ."
"un dva skup :"
"Čitanje podatk :"
"srednj dužina reči u tekstualn datotec"
"srduzrec . c"
"srvred2 . c"
"stabl . c"
"definicij paket za obrad binarn staba ."
"dodavanj u neuređeno stabl ."
"zbir brojev u stabl ."
"Čitanje uređenog stabl ."
"postfiksn ispisivanj ."
"br pojavljivanj u neuređenom stabl :"
"zbir element stabl :"
"primen operacij na stabl za svak pročitani br :"
"stavljanj broj na stek ."
"ispisivanj sadržaja stek ."
"stvaranj nov stek :"
"ispitivanj paket za stek neograničenog kapacitet ."
"stek2t . c"
"Određivanje datum sutrašnjeg dan ."
"obrazovanj datum za sledeći dan :"
"tabela2 . c"
"tabosci . c"
"tabeliranj polinom ."
"tabpol . c"
"tekst . c"
"= Učitavanje sledćeg znak ="
"- pregled potprogram -"
"- globaln promenljiv -"
"izlazn bafer za jedan red ."
"br znak u izlazn red ."
"stek za vraćene znak ."
"sled komand ."
". i salj red na izlaz ."
"Početna dužina jedn red ."
"dodatn br razmak ."
"transponovanj kvadratn matric ."
"transponovanj matric ."
"trouga . c"
"Površina trougl :"
"stvaranj i ispisivanj niz :"
"Uređivanje niz :"
"metod izbor ( selection sort ) ."
"br ponavljanj ."
"duzin nizov ."
"ispitivanj algorit uređivanja ."
"deklaracij paket za obrad velik cel brojev ."
"velce . h"
"tip za logičke podatk ."
"Izračunavanje vrednost verižnog razlomk"
"zbir1 . c"
"zbir2 . c"
"brojanj slov i cifar ."
"srpsk"
"englesk prevod"
"printf ( "" wvalu = % s , rvalu = % s , fvalu = % s , ovalu = % s "" , wvalu , rvalu , fvalu , ovalu ) ;"
"jpeg - jfif compliant ; izlaz konvertovan u png"
"ova progra korist prethodn instaliran freeimag bibliotek . http://freeimage.sourceforge.net/"
"default valu"
"umest da svak put kad otvaram fajl pišemo 5 lin kod :"
"umest da svak put kad otvaram fajl pišemo 5 lin kod : p = fopen ( "" im fajl "" , "" r "" ) ; if ( ! p ) { perror ( "" im fajl "" ) ; exit ( 1 ) ; } možemo u sam jedn lin napisa : assign ( p , "" im fajl "" , "" r "" ) ;"
"ova fscanf čita maks . 30 znak il do prv ] i pamt u ` nam `"
"umest unsigned još bolj size_t iz < stdlib . h >"
"ne treba sizeof ( char ) jer je to uvek 1"
"unos boj se može bolj uradi ovak ( u tom slučaju solv pr 2 × board ) :"
"ne mora se čuvati redn br jer je sam indeks škole u niz redn br"
"stavlj čvor n na glav list L. Vraća pokazivač na glav list"
"pronalaz i vraća čvor stabl u koj je string str. ak ne može naći string str vraća null"
"zatvor datotek"
"deklaracij varijabl"
"otvor datotek "" dat . txt “ za čitanje"
"kraj niz detektir se sa null string"
"a ) unos"
"odred najmanj element u x [ i. . n-1 ] ."
"pretpostav da je to x [ i ]"
"zapamt njegov indeks"
"kopiraj x u string u čvoru"
"br alociran čvorova"
"vra seb ka nov početak list"
"ak list nij prazn ond se nov čvor vezuj na početak list"
"alociraj memorij za string u čvoru"
"vra privremen spremljen drug član list ka glav"
"privremen sprem drug član list , prij dealokacij"
"ak je stabl prazn vra čvor ka nov stabl"
"stav čvor n ka desn gran"
"ak je veći ond uđi u desn gran priručnog čvora i pon petlj"
"petlj koj se ponavlj sve dok se ne dođe do list stabl"
"uz vrijednost člana"
"ak je list prazn izlaz i vraća nul"
"mjenj da je posljednj član u stvar predposljednj"
"dealokacij stabl"
"otvaranj datotek za pisanj , uz provjer ispravnost"
"zatvaranj datotek"
"varijabl prekid služi da se premost višekratno uzastopn ponavljanj znak prekid riječi"
"otvaranj datotek za pisanj"
"ispis string obrnut redoslijed"
"otvaranj datotek uz provjer uspješnosti"
"čitanje vrijednost završava na kraj datotek"
"alokacij memorij za nov člana list - tmplist"
"currlist nam služi za šetanje po list"
"provjer je li pl glav list"
"je li x u ov članu list"
"upisivanj imen u nov član stog"
"ak stog im više članova ond pomoću tmpl prošetaj do kraj stog"
"alokacij string put kojeg će se vratit tekst iz izbrisan čvora"
"pomoću tmpl se šeta do kraj list"
"tekst se kopir u string tmp"
"dealokacij zadnjeg člana"
"ispisuj zadnj član"
"izbacuj član sa tekst "" kraj """
"ispisuj i izbacuj članove"
"ak je ključ manj od ključa x id u liv gran"
"ak je ključ veći od ključa x id u desn gran"
"ponavlj se sve dok string nij "" kraj """
"ak je string "" kraj "" ond izlazak iz program"
"stvaranj glav list i ubacivanj prv string u glav"
"ispis svih vrijednost iz red"
"smještam učitani br na stog"
"ispis vrijednost izbacivanj iz stog"
"tip fajl"
"prav pristup"
"gresk ( unlink ( srcpath ) ! = -1 , "" unlink failed "" ) ;"
"fprintf ( stderr , "" dnam : % s , ind : % d "" , entry -> d_name , ind ) ;"
"pis iz bafer na stdout"
"printf ( "" % d "" , status ) ;"
"da li je drug proces otvori pajp ?"
"citanj je blok operacij"
"3.16 u zbirc //"
"3.20 u zbirc //"
"ucitav br i ispisuj da li je vec , manj il jednak nul"
"od veceg broj oduz manj"
"ucitav tr broj i ispisuj najmanj"
"za ucitan n ispisuj n !"
"ispisuj sum troznamenkast brojev djeljiv sa 17 i njihov br , koristec whi"
"ispisuj sum svak 3. od n ucitan brojev , pomoc whi"
"ucitavanj element polj"
"pretrazivanj polj"
"string4 . cpp"
"string8 . cpp"
"ispisuj rijec u slijedec red"
"provjerav da li je ucitan string palindr"
"izbacuj razmak"
"ucitav dva kompleksn broj i ispisuj njihov sum i razlik"
"formiranj niz bez maks sum"
"autor : danijel jovanovic charset : UTF-8 dat : 21.10.2019."
"break prekid izvrasavanj whi ( )"
"postavlja zavrsn znak"
"26"
"broj se svi karakter !"
"prototup funkcij faktorijel ( )"
"Može se izostavi jer je tip povratn vrednost naše funkcij void"
"glavn ( main ) funkcij"
"n = odredjivanjebrojaelemenataniz ( ) ;"
"dok ov rad , bez problem"
"printf ( "" % d "" , n ) ;"
"funkcij koj ispisuj jedan znak na ekran"
"char string [ 10 ] ;"
"prema veličina za string !"
"progra koj ispisuj brojev od 1 do n Pomoću for petlj"
"Krećemo od k-te pozicij i red vršimo"
"rotiranj element niz ulev za jedn mest"
"deklaracij celobrojn niz od 50 element"
"Zaštita od unos pogrešnog broj"
"definisanj konstant pomoću pretprocesorsk direktiv"
"definisanj konstant pomoću naredb const"
"/ niz za cuvanj najveceg element iz vrst"
"pretpostavlja da je trenutn najmanj element na prv pozicij"
"ak je trenutn element veći od max"
"printf ( "" unesi niz [ % f ] = "" , i ) ;"
"POŠTO je i ce br konverzij je drug"
"neparn indeks . prikaza sum ."
"prikaza novonasta niz ."
"4. inicijalizova celobrojn niz od 7 element . sabra sve element niz ."
"rezulta prikaza na konzol ."
"sabiranj elemenet"
"ucitavanj element niz"
"jer koristim funkcij sqrt (.)"
"Računanje proizvod"
"inicijalizova niz realn brojev od 6 elementar . Izračunati proizvod uneti brojev . rezulta prikaza na konzol ."
"ucitavanj promenljiv br"
"zavrsetk do whi ( ) ; petlj"
"poruk korisnik da unes vrednost za dat element niz"
"dodeljivanj vrednost br u promenljiv na mest k"
"promenljiv u koj čuvamo veličinu niz"
"br element u niz ne može biti negativn il veći od maksimum"
"mora da se inicjalizuj sa nul"
"doda neparan element u sum"
"1. inicijalizova niz y od 3 realn broj , float y [ 3 ] = { 5.55 , 6.66 , 7.77 } ; svak element uvećati za dva put i prikaza taj niz nakon uvećanja na ekran ."
"uvecavanj 2 put"
"ispis uvevcan element"
"mora proizvod = 1 jer je 1 neutraln clan mnozenj"
"15. za unet niz od n element realn tip odredi proizvod element u niz ."
"2. inicijalizova niz koj se sastoj od sledećih vrednost { 1 , 5 , 6 , 9 , 12 , 15 , 7 , 3 } . prikaza sve element niz na ekran ."
"4. za unet niz od n element realn tip float izračunati sum svih element element u niz i prikaza sum na ekran ."
"c = broj1 ;"
"ov naredb neće proći kompajliranj"
"ak je br pronadjen prekid se for petlj tj. dalj pretrag niz !"
"cuva poslednj element u niz jer ce biti prepisan !"
"drug i pretposlednj , i tak red"
"smanjuj velicin niz za 1 manj element koj smo izbaci"
"parametr prosleđujemo po vrednost"
"10 proizvod"
"da li je unet znak mal il velik slov"
"max je 100 proizvod / artika"
"pretprocesorsk direktiv"
"koristim za ponavljanj naredb 5 put"
"ispis na konzol"
"Računanje površine pravougaonik"
"Računanje ob pravougaonik"
"racunanj ob krug"
"racunanj povrsin krugs"
"ispis ob krug na konzol"
"matematick c bibliotek"
"racuna tak sto izracuna kolik na mesecn nivo dobi novc za dat kamatn stop i to sve put 12 mesec"
"ucitava dan u promenljiv"
"naredb Višestrukog granjanj switch ( )"
"Prosleđujemo adres prv pokazivača pomoću operator &"
"znak < il > određuje da li sortiram rastuće il opadajuće"
"funkcij koj spaj 2 string"
"u kom se prsten nalazim"
"kolon desn"
"upis u centraln polj"
"ak su string jednak funkcij strcmp ( ) vraća 0 ak nis jednak vraća br različit od 0"
"bibliotek za rad sa string"
"izmen podatk"
"upis u datotek !"
"kopij original zbog ispis"
"upis"
"niz od 10 nagrad"
"ucitavanj kraj"
"za rotiranj udesn"
"cuvanj matric znak"
"Zašto [ i ] , zat jer brojač for petlj iterir ( uvećava se ) od 0 pa do n - 1 ( u ov slučaju 10 ) a mi moramo da red učitavamo element niz brojev [ 0 ] , brojev [ 1 ] , . , brojev [ 9 ]"
"uvek mora biti int !"
"da li im dovoljn mest u niz za nov element"
"pomeranj element udesn za jedn mest"
"na k-tu pozicij upiši br koj je korisnik une ran u program"
"nijedan od prethodn uslov nij ispunjen i izvršava se els de"
"dimenzij kolc"
"/ prv znak"
"kraj test scenarij za bibliotek formiranjeniz . h"
"test scenari za bibliotek pretrazivanjeniz . h"
"sortiranj element niz"
"test scenari za bibliotek izbacivanjeelementaizniz . h"
"glavn funkcij"
"a c progra which demonstrates string reversering"
"bug : ak se unes nest sto nij br progra puc !"
"pozicij - 1 jer indeks niz id u interva od 0 do n - 1 !!"
"prover"
"kraj igr"
"racunanj racun"
"pekarsk hleb"
"ucitavanj niz b"
"unos niz od 10 element"
"progra koj ucitav dva niz , prv niz se sastoj od 10 element , a drug niz od 5 element . poziv funkcij umetn ( ) ubacuj niz b na K-TI index u niz a i prikazuj niz a sa umetnut niz b"
"progra prikazuj vrednost fibonac ( 10 ) fibonacijev niz pomoc rekurzivn funkcij"
"progra ucitav niz od n element , zat se korisnik pit da unes indeks element koj bi da prikaz . zat pokazivc vezuj za niz [ k ] i prikazuj vrednost element na koj pokazivc pokazuj"
"progra definis jedan realn niz od 6 element . zat vezuj pokazivc na niz [ 5 ] ( poslednj element u niz ) i prikazuj vrednost na koj on pokazuj"
"vezuj pok na poslednj element niz"
"progta ucitav celobrojn niz od 15 element . zat se niz sortir opadajuc . sortiraranj se vrs bez funkcij"
"progra definis jedan realn niz od 6 element . zat vezuj pokazivc na prv element u niz i prikazuj vrednost na koj on pokazuj"
"progra pomoc rekurzivn funkcij ipsisuj jedan ce br po cifram s lev udesn"
"zadatk 40 : napisa funkcij koj računaju obi i površinu pravouganik . parametr ob funkcij su stranic pravougaonik koj unos korisnik i koj se prosleđuju u poziv funkcij ."
"zadatk 42 : napisa funkcij koj računa zapremin kock . parametar funkcij je ivic kock koj unos korisnik i koj se prosleđuje u poziv funkcij ."
"ne menja se vrednost"
"zadatk 45 : napisa progra koj prikazuj prenos parametr po adres . progra realizova pomoću funkcij koj korist svojstv prenos parametr po adres , tj. u njen poziv u main ( ) funcij prosleđene su dve adres promenljiv . unutar funkcij promeni vrednost prosleđenih promenljiv . koj su vrednost promenljiv nakon izvršavanja funkcij ?"
"zadatk 35 : napisa funkcij koj računa zbir kvadrat brojev od 1 do N. br n unos korisnik i on se prosleđuje u poziv funkcij ka njen parametar ."
"zadatk 47 : napisa funkcij void izmen ( int * br ) koj za parametar im adres jedn celobrojn promenljiv . Uvećati vrednost te promenljiv za 150. prikaza vrednost promenljiv pr i posl poziv funkcij izmen ( ) u glavn program ."
"zadatk 37 : napisa funkcij koj računa proizvod brojev od od 1 do N. br n unos korisnik i on se prosleđuje u poziv funkcij ka njen parametar ."
"pitanj : sta je ugaon konstant , dobij se ka 180 / br impuls za rotacij .?"
"moras da ih deklarises sa extern u on . c fajl u kom zelis da ih koristis ."
"TIM_Cmd ( TIM2 , enabl ) ;"
"if ( ! input_limit_switch_X1 ) {"
"els task_pid_X . sta = 99 ;"
"sta kad se ugas ?"
"if ( speed_current_YARR = 1 + ( int ) ( 100 / speed_current_Y ) ; } els { TIM4 -> arr = 1 + ( int ) ( 100 / maximum_speed_Y ) ; } ;"
"absposition calculateposition ( int left , int right ) { static long x = 0 , y = 0 ; static float thet = 0 ; static unsigned long formerleft = 32767 , formerright = 32767 ; absposition temp ; int d , dright , dleft ; float dthet ; dleft =( int ) ( Left-formerLeft ) ; dright =( int ) ( Right-formerRight ) ; d =( dleft + dright ) / 2 ; dthet =( float ) ( angularconstant * ( dLeft-dRight )) ; thet + = dthet ; x + =( int ) (( float ) ( D*sin ( Theta*PI / 180 ) ; y + =( int ) (( float ) ( D*cos ( Theta*PI / 180 ) ; temp. x = x ; temp. y = y ; temp. thet =( int ) ( thet )) > = 0 ? 0 : 360 ) + (( int ) ( thet )) % 360 ; formerleft = left ; formerright = right ; return temp ; }"
"fi ( startup_stm32f10x_xx . s ) ."
"pita jovicic"
"brzin = Speed_profile_Y ( Pos2 , ENC2 ) ;"
"USART_SendData ( USART3 , err ) ;"
"USART_SendData ( USART3 , (( brzin == 0 ) ? 43 : 91 )) ;"
"anglepid = anglepid < 180 ? anglepid :( anglePID-360 ) ;"
"propac =( float ) ( kac * ( deltaangl > 10 ? deltaangl : 0 )) ;"
"if (( gresk > -4 ) && ( gresk < 4 ) && ( Int1 > 0 )) Int1 = Int1-4*Ki ;"
"if (( gresk == 0 ) && ( speed_current_X == 0 )) { reg = 0 ; Int1 = 0 ; }"
"if ( reg <- 90 ) reg = -90 ;"
"swap ( a [ i ] , a [ i + 1 ] ) ;"
"pogresn"
"ucenik osnovn podac"
"uceknik podac rodjenj"
"podac razrednik"
"get : ap / categories"
"post : ap / categories"
"get : ap / comments"
"get : ap / comments / 5"
"get : ap / manufacturers"
"put : ap / manufacturers / 5"
"get : ap / orderdetails"
"put : ap / orders / 5"
"put : ap / products / 5"
"get : ap / roles"
"post : ap / roles"
"put : ap / roles / 5"
"post : ap / users"
"serijalizacij / deserijalizacij iz datotek"
"podesavanj na light tem"
"bez ov command sav u XAML-u nec da rad"
"bez ov command open u XAML-u nec da rad"
"ov bas i nij najsigurn nacin da se cuva password al ajd sad"
"omogucav da se prozor pomer tak sto se drz lev klik na prozor"
"< auto-generated > this cod was generated by a tool . runtim version : 4.0.30319.420 changes to this fi may caus incorrect behavior and will be lost if the cod is regenerated . < / auto-generated >"
"men"
"modaln prozor"
"keypress za help tj. dokumentacij"
"uzimanj pozicij ak smij"
"uzet adres na osnov geotack"
"pokretanj task citanj"
"konfiguracion fajl rad laksi naknadn izmjen mogu se i osta opcij po potreb baud rat etc ."
"ucitavanj json konfiguracij rad laksi izmjen"
"rfidconfig = jsonvalu . pars ( fi . readalltext ( "" rfidconfig . json "" )) . getobject ( ) ;"
"rfidconfig . getnamedstring ( "" port "" ) ;"
"najosjetljiv metod , vrc null ak nest nij ured to moz biti da nij capability naveden u manifest , da devic ne prepozna il da je devic zauzet od drug aplikacij da je user blokir il sist moz biti null iak je nadjen devic information"
"cit iz stre"
"moz se u output printa exception ak zatreb u nek situacij"
"al obavezn koristit debugger"
"prv provjer jel dobr unesen star password"
"string verifikacijaporuk = """" ;"
"datacontext = new mymoviecollection . viewmodels . pocetnaviewmodel ( ) ;"
"implementir validacij"
"< seeals cref = "" mrs . applicationcor . interfaces . iasyncrepository { mrs . applicationcor . entities . remark } "" / >"
"< seeals cref = "" mrs . applicationcor . interfaces . irepository { mrs . applicationcor . entities . screening } "" / >"
"< seeals cref = "" mrs . applicationcor . interfaces . irepository { mrs . applicationcor . entities . seatreservation } "" / >"
"post : propads / edi / 5"
"get : propads"
"get : propads / creat"
"post : propads / creat"
"to protect fr overposting attacks , pleas enabl the specific properties yo want to bind to , for mor details se http://go.microsoft.com/fwlink/?LinkId=317598 ."
"get :/ reservation / delet / 5"
"post :/ reservation / delet / 5"
"els { viewbag . messag ( "" ne mozet otkaza za manj od 30 min pr projekcij ! "" ) ; }"
"get : thematicprops / delet / 5"
"post : thematicprops / delet / 5"
"get : thematicprops"
"get : thematicprops / creat"
"post : thematicprops / creat"
"get : thematicprops / edi / 5"
"ovd smesta list ikon ;"
"otvaram tabel"
"pravi i string za boj i ujedn je trazim kad trazim tip"
"tod 1 : ukolik postoj ikon"
"svakak iz ov tabel vucem boj"
"fokus na prv"
"inicijalizacij alkoholn box-a"
"dodavanj vju etiket"
"ispis rezervacij"
"za hendikepiran"
"dodavanj ikon sa map na form"
"pravi tu paintbox komponent"
"custompb p = new custompb ( nam , color , ic , p ) ;"
"ispisuj koj je metod pozva client"
"ovd proverav da li im dva element"
"id ce biti dodeljen prilik dodavanj u baz"
"mora da bi se aktivir eventlog"
"za prv zadatk dugm se pojav tek kad se napun progress bar tak da uvek je uspesn zavrsen quest kad se klikn ov dugm"
"ov treba da se urad bolj , treba da mozem dto da pretvori u model ak hocem ovd da ne loaduj opet iz baz"
"vrc list alijans"
"restrikcij koriscen sam brojev"
"pravi ogranicenj na sam rec u okvir polj ."
"nasledjuj observable-object kak bi dobi on-property-change"
"messagebox . show ( _trenutniProgresKlipa . tostring ()) ;"
"promenljiv u koj cuva trenutn otvoren prozor ak bih kasn u komand u zavisnost od komand recim zatvori trenutn prozor"
"gasenj trenutn prozor"
"regulis da prv poveca kolicin nov izmenjen vrst lek"
"prover lek koj je korisnik menja"
"selektovan objekt pr vrednost od menjan objekt"
"koristan link : https://help.syncfusion.com/file-formats/pdf/working-with-flow-layout?cs-save-lang=1&cs-lang=csharp#working-with-table"
"lek za izmen / stimanj preuz podatk od selektovan lek"
"podesavanj prikaz dijalog izmen"
"odredjivanj kolik im kog lek"
"<summary> podesava trenutn kolicin odredjen grup lek </summary> < para nam = "" lek "" > </param> < para nam = "" koeficijentpravc "" > prosledjuj se br koj govor kolik povecava / smanjuj odredjen lek </param>"
"potvrdjuj dodavanj podatk"
"potvrdjuj brisanj podatk"
"sad je moguc izmen profi"
"ka parametar se ocekuj delega , post je delega pokazivc na funkcij prosledjuj funkcij i ond se on okid , u ov slucaj bez uslov pod koji se okid al moz se prosledi i uslov pod koji se okid"
"ka parametar se ocekuj delega , post je delega pokazivc na funkcij prosledjuj funkcij i ond se on okid , u ov slucaj bez uslov pod koji se okid al moz se prosledi i uslov pod koji se okid"
"u temp upravnik cuva trenutn podatk"
"algorita izmen prostorij : http://prntscr.com/sul6bj"
"dodaj prostorij za dodavanj ukolik je odgovor bio potvrdan"
"regulis da prv poveca kolicin nov izmenjen tip prostorij"
"podesibrojodredjenihlek ( selektovanilek , -1 ) ;"
"doda ov dve nov"
"prv moram uklon ov 2 prostorij"
"dodaj prostorij"
"zel da renoviranj bud prv selektovan u radi button grup"
"preuzimanj od prav oprem prostorij"
"prikaz dijalog za dodavanj"
"prostorij za izmen / stimanj preuz podatk od selektovan prostorij"
"ak dodj dovd znac da moram cel tu trenutn oprem doda jer je nem u spisk oprem"
"i kolekcij i zaprav selektovan doda"
"uklon iz prav oprem"
"ak sam dosa do ov ond znac da te oprem zaprav i nem u list"
"<summary> podesava trenutn br odredjen tip prostorij . </summary> < para nam = "" prostorij "" > </param> < para nam = "" koeficijentpravc "" > prosledjuj se br koj govor kolik povecava / smanjuj br odredjen prostorij </param>"
"uklanjanj oprem"
"tod : kad saznas kak dobi koj trenutn validacion problem im app , ovd to mogu hendlova"
"instancir fizick rad selektovan prostorij"
"kreir nov zaposlen da u slucaj potvrd mogu da ga doda u list zaposlen"
"prikazivanj bez vremen , sam datum ovak dobija"
"dodaj sve izabran lekar"
"za pomeranj slajder vremen vide"
"bibliotek za cartov"
"uz dodatk na wpf"
"za kolekcij lek"
"za kolekcij prostorij"
"u c # metod _nisu_ podrazumevan virtueln !"
"preopterecenj binarn operator"
"u jav ov bi bila HashMap-a"
"u jav ov bi bio ist hashset"
"ov oznacav da se klas moz serijalizova , nist drug ne treba , post joj se atribut mogu serijalizova"
"< auto-generated > this cod was generated by a tool . runtim version : 4.0.30319.1022 changes to this fi may caus incorrect behavior and will be lost if the cod is regenerated . < / auto-generated >"
"da hocem da radi i sa precic , treba bi da nasled routeduicommand , recim"
"ovd id model-level obrad komand , tj. de koj ne rad sa interfejs"
"instanc opengl "" svet "" - klas koj je zaduzen za iscrtavanj koriscenj OpenGL-a ."
"inicijalizacij komponent"
"rukovalc dogadjaj iscrtavanj opengl kontrol"
"< auto-generated > this cod was generated by a tool . runtim version : 4.0.30319.239 changes to this fi may caus incorrect behavior and will be lost if the cod is regenerated . < / auto-generated"
"izabran stran poligon ."
"izabran nacin iscrtavanj poligon ."
"raspon debljin tacak"
"raspon debljin lin"
"sablon isprekidanost lin"
"parametr vezan za tack"
"ocita iz promenljiv stanj GL_POINT_SIZE_RANGE minimaln i maksimaln velicin ( min = prv el . niz , max = drug el . niz )"
"parametr vezan za lin"
"iscrtavanj opengl kontrol ."
"podes da tack se iscrtav ka krug , a ne ka kvadra"
"<summary> klas koj enkapsulir opengl programsk kod </summary>"
"dispos metod ."
"destruktor ."
"oslobod managed resurs"
"isprekidanost lin"
"razmer isprekidanost lin"
"definisanj callback delegat za belezenj poruk u tok ucitavanj podatk o scen ."
"oslobadjanj resurs koriscen za ucitavanj podatk o scen ."
"inicijalizacij i podesavanj opengl parametr ."
"<summary> rekurzivn metod zaduzen za iscrtavanj objekt u scen koj su reprezentovan cvorov . u zavisnost od karakteristik objekt podesava se odgovarajuc promenjiv stanj ( GL_LIGHTING , GL_COLOR_MATERIAL , GL_TEXTURE_2D ) . </summary> < para nam = "" nod "" > cvor koj ce biti iscrtan . </param>"
"primen komponent materijal dat objekt ."
"primen tekstur u slucaj da je ist definisan za dat materijal ."
"klas enkapsulir programsk kod za ucitavanj model pomoc assimpnet bibliotek i prikazivanj model uz uslonc na taoframework bibliotek ."
"definisanj temen primitiv ."
"primen razlicit komponent dat materijal ( ambijentaln , difuzn , spekularn , emision , sjaj ) ."
"primen sjaj materijal . u slucaj da ist nij definisan , korist se podrazumevan vrednost ."
"metod za oslobadjanj resurs ."
"<file> world . cs </file> <copyright> grup za grafik , interakcij i multimedij 2013. </copyright> <author> Srđan Mihić </author> <author> aleksandar Josić </author>"
"boj pozadin je bel , a boj ispis je crn"
"klas enkapsulir opengl kod i omogucav njegov iscrtavanj i azuriranj ."
"rad sa teksturam"
"gl . light ( opengl . GL_LIGHT0 , opengl . GL_AMBIENT , amblight ) ;"
"oznac kraj iscrtavanj"
"podesav viewport i projekcij za opengl kontrol ."
"selektuj projection matrix"
"resetuj modelview matrix"
"initializes a new instanc of the < se cref = "" mainwindow "" / > class ."
"<file> world . cs </file> <copyright> grup za grafik , interakcij i multimedij 2012. </copyright> <author> srdjan mihic , aleksandar josic </author>"
"bott stranic"
"<copyright> grup za grafik , interakcij i multimedij 2012. </copyright>"
"left stranic"
"right tekstur pridruz desn stranic"
"kreiranj tekstur ."
"iscrtaj svet"
"definisanj tajmer za animacij"
"ukljuc i podes color tracking"
"atribut za unosenj nasumicnost"
"podesavanj efekt magl"
"boj magl = boj pozadin"
"magl pocinj od 5 jedinic"
"iscrtavanj podlog ."
"pomocn vektor prek koji definisem looka funkcij"
"azurir rotacij kamer prek pomeraj mis"
"azurir pozicij kamer prek tipk tastatur"
"ukljuc generisanj koord . tekstur"
"identifikator tekstur"
"iscrtavanj torus u xy ravn ."
"izabran opengl mehanizm za iscrtavanj ."
"ug rotacij svet ok x os ."
"izabran opengl rez stapanj tekstur sa materijal"
"nabrojan tip opengl rez filtriranj tekstur"
"neprozirn slik"
"post je kreiran tekstur slik nam vis ne treba"
"transliraj scen tak da se vid unutar prozor"
"pomeranj desn , skaliranj i iscrtavanj kock"
"model sencenj na flat ( konstantn )"
"podrazumevan"
"ak je izabran back fac culling ukljuc ga i obratn"
"ak je izabran testiranj dubin ukljuc ga i obratn"
"naizmenicn promen boj poligon"
"sacuva stanj modelview matric i primen rotacij"
"da bismo dobi omotac a ne krug , postavlja vrednost z koordina na visin kup"
"menja boj trouglov naizmenicn ( zut / plav )"
"gotov iscrtavanj omotac kup"
"centr osnov je u ( 0,0 )"
"specifikuj tem na osnov izracunat"
"gotov iscrtavanj osnov kup"
"indikator stanj mehanizm iscrtvanj poligon ka lin ."
"permutacij boj poligon u zavisnost od parnost indeks"
"generator slucajn brojev , koj sluz za generisanj boj poligon"
"priva rand m_random ;"
"nabrojan tip opengl podrzan mehanizm iscrtavanj"
"kreiraj identifikator list"
"kreiraj list"
"podesavanj za vertex buffer objects generis i podes bafer za crtanj"
"neophodn je kreir dva posebn bafer objekt ( prv sadrz nizov koordinat temen , a drug indeks temen )"
"neophodn zbog vertex array-a - iskljucuj postojec vertexpointer"
"bafer sa niz jedinstven temen"
"bafer sa niz indeks temen"
"podes boj za brisanj ekran na crn"
"odabran tip projekcij ."
"trenutn udaljenost objekt po z-osi ;"
"perspektiv"
"sacuva stanj modelview matric i primen transformacij"
"primen transformacij"
"primitiv prek koji definisem scen"
"trenutn aktivn shading model ."
"maksimaln svi poligon del ov tem"
"odred sve poligon koj del ov tem"
"definisem bel spekularn komponent materijal sa jak odsjaj"
"uikljuc color tracking mehanizm"
"podesavanj boj za anbient i diffus komponent osvetljenj"
"ukljucivanj rad sa vertex array ( va ) mehanizm"
"namest pointer na nizov temen i norma"
"iskljucivanj postojeceg pokazivc na niz sa pozicij temen i niz sa normal"
"iskljucivanj rad sa vertex array i normal array mehanizm"
"iscrtavanj avion ."
"konstant koj opisuj sa kolik komponent su zada pozicij temen ."
"nabrojan tip opengl podrzan tipov norma"
"pomer se u tack gde je svetl pozicioniran i nacrtaj kup"
"crn pozadin"
"ukljuc depth testing i back fac culling i podes da je front = cw"
"pomeraj objekt po z-osi"
"pod tunel"
"desn zid tunel"
"pomeraj po z os"
"bel pozadin"
"prozirn slik 25 %"
"podes nacin blending tekstur"
"nacrtaj piramid"
"uvek je dobr pravi da se definis materijal s obzir da postoj mogucnost da se ne kreir i pridruz tekstur objekt"
"osnov piramid"
"menj trenutn aktivn mod za blending ."
"ocita iz promenljiv stanj GL_POINT_SIZE_RANGE ( to se nalaz u grafick hardver ) minimaln i maksimaln velicin ( min = prv el . niz , max = drug el . niz )"
"opseg koj zavis od nas kartic , sto je vec to je ' jac ' grafick kartic"
"funkcij enabl nam sluz za iskljucivanj / ukljucivanj promenljiv stanj"
"begin i end funkcij id u par i nikad ne mogu ic disjunktn , odnosn jedn bez drug !"
"klas koj enkapsulir opengl programsk kod"
"<summary> verteks tacak , lin i poligon . trec kordinat je z , koj je zaprav ovd 0 pa nem potreb da se pis < / summary"
"korist se alf komponent"
"<para> @author : stanislav selen </para>"
"<summary> method implements method for comparing two objects . <para> method is applicabl only if both of given objects ar instances of the sam class . </para> <para> method designed is for profileelement , profileelementstereotyp and cimobjects objects . </para> <para> this is impelemtation of icomparer interfac . </para> </summary> < para nam = "" modelObject1 "" > object for comparing </param> < para nam = "" modelObject2 "" > object for comparing </param> <returns> </returns>"
"<summary> modelelementcomparer class is impelemntation of icomparer interfac . <para> it is used for comparing two objects , and is designed for profileelement , profileelementstereotyp and cimobjects objects . </para> <para> this class can be used for sorting lists of objects . </para> </summary> < typepara nam = "" t "" > on of the : profileelement , profileelementstereotyp or cimobject class </typeparam>"
"<summary> "" http://iec.ch/TC57/2008/CIM-schema-cim13 # "" </summary>"
"<summary> "" http://iec.ch/TC57/2008/CIM-schema-cim14 # "" </summary>"
"<summary> "" http://iec.ch/TC57/2008/CIM-schema-cim15 # "" </summary>"
"<summary> "" / &gt; "" </summary>"
"<summary> "" \ "" &gt; "" </summary>"
"<summary> "" rdf : id =\ """" </summary>"
"public list <RoomsPropsViewModel> roomsitemslist { get ; set ; }"
"roomsitemslist = new list <RoomsPropsViewModel> ( ) ;"
"kad naprav sob setuj mu se na tru"
"osta ulogovan"
"ak se ne menj ond nist"
"updateuj datacontext"
"throw new argumentnullexception ( "" par "" ) ;"
"<remarks> the method should be non-static and conform to on of the supported signatures : <list> <item> <c> notifychanged ( string ) </c> </item> <item> <c> notifychanged ( params string [ ] ) </c> </item> <item> <c> notifychanged { t } ( expression { func { t }} ) </c> </item> <item> <c> notifychanged { t , u } ( expression { func { t , u }} ) </c> </item> <item> <c> setproperty { t } ( ref t , t , string ) </c> </item> </list> </remarks>"
"<example> <code> public class fo : inotifypropertychanged { public event propertychangedeventhandler propertychanged [ notifypropertychangedinvocator ] protected virtua void notifychanged ( string propertynam ) { . } string _name ; public string nam { get { return _name ; } set { _name = valu ; notifychanged ( "" lastnam "" ) ; / * warning * / } } } </code> examples of generated notifications : <list> <item> <c> notifychanged ( "" property "" ) </c> </item> <item> <c> notifychanged (() = &gt; property ) </c> </item> <item> <c> notifychanged (( vm x ) = &gt; x. property ) </c> </item> <item> <c> setproperty ( ref myfield , valu , "" property "" ) </c> </item> </list> </example>"
"<summary> describes dependency between method input and output . </summary>"
"public bool trypars ( string s , out person result )"
"class componentattribut : attribut { }"
"class mycomponent : icomponent { }"
"indicates tha the valu of the marked element could be <c> null </c> sometimes , so the check for <c> null </c> is necessary befor its usag ."
"<example> <code> [ stringformatmethod ( "" messag "" ) ] void showerror ( string messag , params object [ ] args ) { / * do something * / } void fo ( ) { showerror ( "" failed : { 0 } "" ) ; // warning : Non-existing argument in forma string } </code> </example>"
"showerror ( "" failed : { 0 } "" ) ;"
"horizontaln algorita"
"nadj k-to prazn mest"
"urad sva vertikaln skaliranj ( sam transponuj i zamen n , m )"
"sta da mu radi . mora ovak"
"matric slik"
"ubrzavc racunanj se carving"
"sluz da se preuzm pocetn tack kad se klikn negd , ist moz i za map i za drv"
"prikaz cvorov u drvet"
"ov sluz za pokretanj drag sa map"
"funkcij koj zaprav pokren drag sa map"
"zbog null , ak je nek kren da vuc po map bezvez"
"ov sluz da se prikaz da se na drv moz spustit objekt"
"ov komplikacij je da se loka ne mogu uzet iz drvet i vratit u drv , jer je glup"
"ubacuj loka sa drvet na map"
"on sve f-je iznad sam menja mis da korisnik vid da ne moz drop , a ak ipak drop , ov sprecav efekt"
"ak postoj obradjivan nju izuzm iz prover"
"ak ne postoj obradjivan rad ka i do sad"
"consol . writelin ( "" ne postoj obradjivan ! "" ) ;"
"za onemogucavanj dodavanj"
"dodat za tultip"
"consol . writelin ( "" obradjivan postavljen "" ) ;"
"preuzimanj parametr od ugrozen vrst"
"unos i validacij"
"selektovan u datagrid"
"ak bris vrst uklonic je iz tipov koj je sadrz"
"filtriranj"
"list < ugrozenavrst > ugrozenavrstasaoznak = mainwindow . ugrozenevrst . wher ( m = > m. etiket . contains ( et )) . tolist ( ) ;"
"za onemogucavanj dodavanj kad nem tipov"
"stanj dugmet dol"
"stanj dugmet lev"
"polj za stanj dugmet jedan"
"polj za stanj dugmet dol"
"polj za stanj dugmet minus"
"stanj dugmet a"
"stanj dugmet b"
"stanj dugmet dva"
"stanj koj ucita iz fajl"
"fajl iz kog cita"
"stanj diod na kontroler"
"stanj LED-a br jedan"
"stanj LED-a br dva"
"stanj LED-a br tr"
"stanj vibracij"
"<summary> konstruktor klas reakcij </summary> < para nam = "" led1 "" > stanj led 1 </param> < para nam = "" led2 "" > stanj led 1 </param> < para nam = "" led3 "" > stanj led 1 </param> < para nam = "" led4 "" > stanj led 1 </param> < para nam = "" vibracij "" > stanj vibrator </param>"
"stanj koj je snimljen"
"stanj dugmic"
"stanj akcelerometr"
"stanj senzor"
"stanj le diod i vibrator"
"<summary> klas koj sadrz informacij o stanj wi kontroler . element stanj su hijerarhijsk organizovan u 4 podgrup : <br/> dugmic , akcelerometar , infracrven senzor , le diod i vibrator </summary>"
"metod prekid komunikacij sa prosledjen wiikontroler"
"enumeracij tipov kontroler koj fabrik moz da proizvod"
"jedin instanc klas wiifabrik , skriven u unutrasnj klas rad lazy inicijalizacij"
"konstant za definisanj tip wiimis , tj da li se posmatr akcelerator il poloza diod"
"konstruktor klas u koj se prosledjuj kontroler"
"dogadjaj pomeraj"
"dogadjaj pritisk na dugm"
"predstavlj wi kontroler"
"potrebn zbog kalibracij kod pracenj 2 izvor"
"preciznost do koj se rad aproksimacij parametr t. korist se sam kod pracenj 3 izvor ."
"inicijalizuj prv naziv slik"
"funkcij initpaletealatk : inicijalizuj sve alatk na palet alatk sa koj mozem da koristim na default vrednost . nem parametr , nit povratn vrednost ."
"funkcij initpaletealatk : inicijalizuj sve alatk na palet alatk sa koj mozem da koristim na default vrednost . nem parametr , nit povratn vrednost ."
"dodajem dugm manjevec"
"dodajem dugm za nov papir po kom crta"
"dodajem dugm snimanj"
"dodajem dugm izlaz"
"grafik za crtanj po panel za kalibracij"
"grafik za crtanj po panel za crtanj"
"slik kursor"
"grafik za crtanj po panel alatk"
"list objekt koj predstavlja palet boj"
"pocetn boj koj se iscrtav je crn"
"pomocn promenljiv za racunanj kordina kursorx i kursory"
"vec od 2 i deljiv sa 2"
"boj dugmad na panel"
"path gde snima slik koj nacrta ."
"funkcij init : inicijalizuj sve parametr na default vrednost . nem parametr , nit povratn vrednost ."
"zauzet pregled za odredjen doktor"
"glavn metod je spajanj :"
"klas koj treba da odrad i sacuva trijangulacij"
"saljem mai svim on koj je istekl vrijem cekanj , i ponistava njihov rezervacij"
"sad ponov racuna kolik je dostupn knjig"
"sad dajem 3 dan post su ceka"
"provjerava da li je vec rezervisan"
"oduzima br on koj nis vrati"
"preracunavanj dostupn kopij za knjig"
"da li je rezervisa"
"jezic , oznak po : is 639 - 2"
"ak nij nave type , stavlja da je 1"
"respons . status = "" success "" ;"
"razdvoji na token i dobi unutar zagrad koj vrednost unos"
"ovd postavi type na default vrednost"
"pristp drug tabel :"
"postavi metod u request objekt"
"ukolik im id ond nema dodatn filter"
"moramo spoji sve razmak posl"
"fields se prv naidj na fields a zat id red kroz queries da bi dobi sve fields jer su razdvojen id sve dok ne naidj na "" jer je to kraj u json"
"i sam gor povecava da bi preskoci te delov ovd pa ak je kraj ond je kraj"
"i sam gor povecava da bi preskoci te delov ovd pa ak je kraj ond je kraj"
"ak uspesn parsir ond sacuva u query ist ka sa specifikacij odradjen , nem ; na kraj"
"ist ka sa specifikacij odradjen , nem ; na kraj"
"uklon ; sa kraj"
"prover da li je dobr unesen zahtev"
"razdvoji request tak da dobi odvojen get , pa ond / resourc / { id } a zat u json oblik ostatk filter , ukolik id nij naveden"
"ov sve akcij nadol bi treba da izbrisem"
"privavljan trenutn ulogovan korisnik"
"tek treba da se implementir"
". ondelet ( deletebehavior . setnull ) ;"
"se https://sendgrid.com/docs/User_Guide/Settings/tracking.html"
"treba ce za sihronizacij kasn"
"im clan posad u baz podatk"
"prezim clan posad u baz podatk"
"svi registrovan clanov u tabel se dobijaj iz ov set"
"modelbuilder . entity <ClanPosade> ( ) . property ( p = > p. slik ) . hascolumntyp ( "" imag "" ) ;"
"views . prikazparametr var = new views . prikazparametr ( ) ;"
"var . ugasidiod ( ) ;"
"<summary> event koj se poziv ak je klikn dugm "" ugas "" da bi se posla podac na serijsk port da se upa diod . kod "" 0 "" je znak program na arduin da se ugas diod . </summary> < para nam = "" sender "" > </param> < para nam = "" e "" > </param>"
"ov ce konstantn cita podatk i kad dodj do kraj ond poziv metod da se iscit taj text"
"ova objekt ce se koristit da se cita podac sa serijsk port"
"selector nadj devic"
"podesi tacn koj je port"
"nadj se devic inf"
"najosjetljiv metod , vrc null ak nest nij ured to moz biti da nij capability naveden u manifest , da devic ne prepozna il da je devic zauzet od drug aplikacij da je user blokir il sist moz biti null iak je nadjen devic information"
"najosjetljiv metod , vrc null ak nest nij ured to moz biti da nij capability naveden u manifest , da devic ne prepozna il da je devic zauzet od drug aplikacij da je user blokir il sistemmoz biti null iak je nadjen devic information"
"<summary> event koj se poziv ak je klikn dugm "" upa "" da bi se posla podac na serijsk port da se upa diod . kod "" 1 "" je znak program na arduin da se upa diod . </summary> < para nam = "" sender "" > </param> < para nam = "" e "" > </param>"
"handlanj gresk"
"ovdj je potrebn ubaci uslov tip ak su unesen svi parametr da id na naredn komand"
"nakon tog prelaz se na nov stranic za prikazivanj parametr"
"doda : ovdj doda , ka i u baz , datum registracij , ka i aktivnost drug ppravi"
"obicn navigacij bez parametr"
"navigiranj na pag al da se proslijed parametar stranic"
"standardn relaycommand klas koj se reus u mvvm"
"dodavanj ulog korisnik"
"zahtjevodma . lokacijakorisik . duzin ;"
"dobavljanj svih men stavk za koj prijavljen korisnik im prav pristup"
"metod koj mapir menistavk iz model u viewmodel koj se korist na view-u"
"doda : zbog mvvm potrebn je da pr mainpageviewmodel parametar , al zbog nemogucnost sam view"
"selektovanj dispecer u grid"
"za dispecer"
"pozov se uvijek kad nek vozac selektuj"
"izmjen"
"trazim klijent"
"trazim njegov narudzb odma"
"doda : za kontrol unos nalog"
"registrovaniklijent = new registrovaniklijent ( ) ;"
"pridruzivanj odabran stavk men , listview-u koj prikazuj men"
"show-hide funkcionalnost men"
"metod koj na osnov odabran men , poziv podstranic koj je definisan u men"
"da slucajn nek rec nij osta bez kategorij"
"prv moramo obrisa sve potez i tok igr po korisnik . i jos nest ak im"
"generisanj token koj se vrc na fe"
"nakon tog se vrs kodiranj tih bajtov , i ta kodiran verzij se smet u token taj secretkey je u sustin jedan stepen zas , bez da se zna on , nik sa stran ne moz da generis prav token !! nakon prijav kad se salj token , prilik authorizacij se taj proces verovatn obavlj obrn , vrs se dekodiranj do niz bajtov koj predstavlja secretkey i proverav se jel se poklap sa ocekivan secretkey-om"
"trec audienc"
"duzin trajanj token"
"kljuc"
"niz bajtov koj se ocekuj da se prim prek token-a , taj niz bajtov u sustin predstavlj secretkey"
"services . addscoped < datalayer . repository . korisnikrepository > ( ) ;"
"vrs se staln prebacivanj iz stanj ready u running i obrn"
"ak se proces vec nalaz u ram ne diraj nist"
"ak fal memorij na ram , oslobod ram memorij on proces koj su u blocked stanj"
"ak proces nij na ram skin ga sa hard disk"
"prioritet im ona proces koj je najmanj korisit cpu ( CPU_Utilization 0 - 100 % )"
"prebacuj ona proces koj je najvis koristi cpu"
"doda aktivnost o tom da je kreiran nov projekt"
"_context . korisnik . firstordefault ( a = > a. korisnickoim == korisnik . korisnickoim ) . projekt . remov ( projekt ) ;"
"doda aktivnost o tom da je korisnik uklonjen sa projekt"
"ov funkcij dodaj aktivnost"
"doda aktivnost o tom da je kreiran nov zahtev"
"doda aktivnost o tom da je kreiran doda nov trosak"
"ov funkcij uz sve korisnik koj su angazovan na jedan projekt"
"vrc list dokument jedn projekt"
"ov funkcij vrc sve zahtev koj je ulogovan korisnik posla sa tog projekt"
"izbac iz baz on koj vis nis tu"
"izgradnj"
"ov pretvar izabran fajl u bajtov i pamt ga u infromacijiolokacij byte [ ]"
"kreiranj i prikazivanj progress window"
"u baz se kreir nov projekt i za njeg se kreiraj odgovarajuc dokument"
"tod : ovd mogu i osta atribut informaicj o lokacij da se unos"
"ak je vec unet informacij o lokacij ond se on pamt u baz pr kreiranj projekt"
"prelazak na clanoviprojektapag"
"ov kreir lokaln pdf fajl od bajtov"
"dodavanj nov pdf u tabel"
"upda dokument"
"progresswindow moz da se zatvor"
"upda podatk koj se prikazuj u datagrid"
"informacij o lokacij je uvek ukljucen"
"da ih poredj od novij ka starij po ID-u"
"kad se klikn dugm sacuva treba da zna da li treba da vrs upda il add u baz to odlucuj na osnov idtrosk , ak je 0 ond ga jos nem u baz treba add , ak je razlicit od 0 ond se vrs upda"
"<summary> generaln informacij o troskov se prikazuj ka dva textblock jedan iznad drug prv je naslov tu pis npr "" budzet projekt br rat 1. rat 2. rat . drug ispisuj vrednost "" 10 5 2500 50 . korist formatiranj string da bih to uspe , al font mora da je monospac , tj. da je sirin svih karakter ist da bi se ov postigl </summary> <returns> </returns>"
"naslovn red"
"ucitav procent u tbprocent"
"ucitav i podatk u uplat iz tabel generalnitrosak i pamt u tbprocent"
"da izbaci razmak iz naziv projekt jer nij u baz varchar i vrc mi gomi "" """
"filtiranj korisnik"
"filtiranj po tip aktivnost"
"filtriranj po datum aktivnost"
"ak nij unet pocetn datum ond se postavlj 1/1/1 tj. prikazuj aktivnost od pocekt"
"ak nij unet kranj datum ond se postavlj 1/1/9 tj. prikazuj aktivnost do kraj"
"postav pomocn list rez ka itemssourc lvaktivnost"
"resetuj sva polj"
"kolekcij svih aktivnost koj se ucita"
"kolekcij svih korisnik koj rad na projekt koj se prikazuj u list za izbor korisnik"
"izabran korsnik , kad se chekir combobox ond se ovd doda , kad se uncheck ond se uklon"
"u aktivnost im id projekt a treba mi njegov im , pa to resava prek dictionary"
"<summary> konsturktor </summary> < para nam = "" zasveprojekt "" > da li treba ucita i prikaza aktivnost za sve projekt </param>"
"treba mi da privremen pamt aktivnost"
"ov mora mal da se prerad , kasn"
"ak nij admin ond mu prikaz sam on zahtev sa koj on im vez"
"refreshuj zahtev"
"znac zahtev je na cekanj"
"vrc sum svih trosk za jedn potkategorij"
"ov radi zbog performans , da bi izbega visestruk racunanj ov vrednost pamt je u privatn atribut i racuna u konsturktor"
"zanimljiv de , grupis trosk na osnov kategorij a ond na osnov podkategorij , izracunav sum trosk kategorij / podkategorij i to stamp"
"automatsk odredjivanj sirin kolon cell range-a"
"ispisuj naziv trosk , iznos i del ga na rat prem uplat i to ispisuj"
"var dataprovider = new efcoredataprovider ( ) ;"
"mal pomocn klas"
"interaction logic for pocetnastranauc . xaml"
"razmisl da li treba da se svak put kreir konekcij il je server uvek povezan mozd da postoj jedan exchang i da se postavlja routing keyev za vest ??"
"tod razmisl da li ov moz nekak bolj"
"ova lanc else-if-ova sluz kak bi osvezi polj combobox za kategorij cen , jer se desava bug koj je sa tim ispravljen !"
"ist to sam za status sluzena alkohol"
"kreiran precic prek tastatur"
"da ne moz ic and nest or nest ne moz tak"
"dodajem izraz lev od njeg u cvorov !"
"sad dodajem add i pomeram pokazivc da moz dalj da traz ko covek"
"sad sve ist sam za or logick izraz !"
"pretrag za tip"
"ov je ka pocetk pa ak im vis izraz ov cem uzima 2 izraz pa ond trec dodajem na to pa 4. dodajem na sve on pr i tak .. al ov je prv"
"ak je tip cvor and ond sam postav && izmedj 2 bool tip"
"ov ak nij prv element ond svak sledec sam nadodava !!"
"ov oznacav da se traz razlicit od unos !!"
"pretrag za etiket"
"u slucaj trazenj etiket koj nis ova id"
"ispituj i ak je prv zagrad u niz ond stav da pocn ubacivanj zan ov cvor od te vrednost"
"ak je nacinjen gresk u ulaz sam izadjem i prekin pretrag !"
"ak je sam od brojev sastavljen ond mozem da poredi"
"izvlaci vrem koj je une i proverava da li je to to !"
"ak je ov nul ond smo dosl do nek celin i mozem da ispita da li posl tog se nalaz il nist il and il or"
"ak je ova datum ran od postavljen datum ond ce ov vratit vrednost il 0 il < 0 ( tj nul ak je to ist dan , sto ovd dozvoljava )"
"sad kad zna da je and i or tu negd mi cem to da ubaci ! jer necem da dozvoli da se ubacuj and i or koj nis na najvis nivo !"
"for petlj je ubacen jer smo dozvoli kolik god razmak da bud izmedj or and i tak tog !"
"proverava mest odrzavanj !"
"ov je zastit ak pokusa u najniz nivo bez zagrad da ubaci i and i or sto nij validn"
"proverava kategorijucen !"
"ovd smo ubaci logick izraz i poveca iterator za 2 ka da smo ga pokupi i nastavlja dalj !"
"proverava pusenj"
"ak je upisan tru ond gleda da li je postavljen pusenj na tru"
"ispituj da li su hendikepiran dozvoljen"
"ak je stavlejn na tru ispituj da li je vrednost atribut hendikepiranidozvoljen na tru"
"negacij od trazenj tip"
"proverava da li se poklap tacn vrednost za ocekivan publik !"
"negacij od trazena publik"
"prv moramo da proveri da li se bas rad o promenljiv and"
"ak je string == sa "" and "" ond je super to je to"
"ov je ubacen da se ne bi prikaziva ov validacij u izmen manifestacij"
"ovd implementiram sta ce se radi svak sekund kad otkuc !"
"ov radi da bi obrisa // bin // debug jer tu nam nis html kod"
"ov je uradjen ak se promen nest u lokaln promenljiv da se ne des u baz podatk !"
"geter i seter tj ov se drugacij zov ovd"
"korist se kod editovanj"
"ov promenljiv sluz za filtriranj tabel etiket"
"ov sam sluz da evidentir ak se nest promen !!"
"ponistavanj pretrag"
"kad kreiram nov manifestacij ov stavlja na tru , da bi mogl da pokupi tipov i etiket za tu manifestacij"
"pretragamanifestacij ( ) ;"
"ubacuj selektovan manifestacij kak bi drug prozor mog da vid koj je to manifestacij"
"metod izbacuj prozor za unos nov etiket , ak u list svih etiket nem nijedn , al ak im nest u tabel izbacuj nov prozor za izbor iz tabel"
"metod koj ubacuj ikonic kod izmen manifestacij"
"brisanj svih tip i manifestacij koj njeg sadrz"
"filtriranj tabel manifestacij !!"
"metod koj se korist prilik kreirana nov manifestacij u tabelarn rezim"
"<summary> dodaj jedan naslov u pdf , naslov je bold i centriran </summary> < para nam = "" text "" > tekst koj ce biti u naslov </param> < para nam = "" fontsiz "" > velicin font naslov </param>"
"<summary> dodaj slik u pdf , slik je centriran </summary> < para nam = "" slik "" > slik koj ce biti dodat u pdf </param> < para nam = "" sca "" > skaliranj velicin slik </param>"
"<summary> dodaj n prazn paragraf i na taj nacin stvar razmak </summary> < para nam = "" velicin "" > br prazn paragraf </param>"
"ov funkcij je suvisn jer se ist to postiz prek margin al mi se ne bris"
"kreir se tabel od tr kolon jednak sirin i bez okvir prv je prazn , drug im "" M. P. "" i treba im mest za potpis na taj nacin postiz da se nalaz u ist red"
"dodaj mest za potpis profesor"
"<summary> otvar fajl il ispisuj gresk ak to nij moguc </summary> < para nam = "" fi "" > fajl koj treba otvori </param> <returns> </returns>"
"<summary> postavlj nek atribut koj se cest ponavlja postiz se uniforman izgled pdf-a </summary> < para nam = "" element "" > element za koj treba postavi sti </param>"
"<summary> pdfwrapper je klas koj predstavlj jedan niv apstrakcij za rad sa bibliotek itext 7 implementir idisposabl interfejs pa moz da se korsi sa using blok </summary>"
"<summary> instancir objekt klas pdfwrapper </summary> < para nam = "" fi "" > pdf fajl u kom ce se upisiva podac </param>"
"<summary> dodaj u pdf jedan paragraf , prv lin je uvucen </summary> < para nam = "" text "" > tekst koj ce paragraf da sadrz </param>"
"<summary> vrs enkripcij ulazn string i vrc ga </summary> < para nam = "" password "" > ulazn string koj treba enkriptova </param> <returns> enkriptovan string </returns>"
"funkcij computehash pr i vrc byte [ ] pa zbog tog ov konverzij string u byte [ ] i nazad"
"thread . sleep ( 100 ) ;"
"ocekivan sertifikt centraln baz"
"preuzimanj sertifikat iz skladist sertifikat"
"prover da li "" subjectnam "" sertifikat odgovar dat "" subjectName-u """
"preuzimanj usernam iz windows logon name-a"
"validacij na serversk stran proverav se da li je issuer klijentsk sertifikat ist ka i issuer serversk sertifikat"
"public point ( int x , int y )"
"idevipodkomentar predstavlj string id-eva podkomentar koj pripada tom komentar prodj kroz sve podkomentar i napun u list sam on cij je id == idpodkomentaraukomentar"
"ne zaborav : mora proc kroz sve da bi doda u listusvihkomentar , kak bi mog cel list ponov da upis"
"nas smo komentar"
"popunjava polj za podkomentar"
"na nas komentar doda id podkomentar"
"prepisem list svih komentara-ukljucujuci i ov izmenjen"
"upis u podkomentar . txt"
"u slucaj da je vec lajkova taj komentar vra fals"
"svi drug komentar"
"nakon sto sam doda u . txt fajl ko je lajkova , sad nadj taj komentar i povecaj mu brojlajkovan"
"nas smo komentar kom treba poveca pozitivn glasov"
"prv ak ov tem nem komentar tj ak joj je spliter listasvihtem [ indexZaIzmenu-1 ] [ 8 ] == ' nepostoj ' , obris to nepostoj"
"na kraj tem doda nov kometar-tj njegov id"
"prover ukolik korisnik vec pra postojec podforum"
"prepisem sve tem - pa i ov izmenjen"
"otvor bulk writer"
"ubac tu izmenjen lin na to mest u listisv"
"prodj kroz sve komentar , nadj taj sa tim id-em , naprav nov komentar , od podatk i doda ga u list"
"not : kad dodaj ovd komentar , nec dodava njegov podkomentar , post to nij bitn za tu stranic , korisnik treba sam da im uvid u jedan komentar"
"upis u komentar . txt"
"evenutaln : prodj kroz sve tem i pogleda da li komentarlinesplitter [ 9 ] odgovar nek ak ne odgovar nijedn , to znac da ta tem ne postoj tj da je obrisan i nem doda ova podkomentar u list"
"evenutaln : prodj kroz sve tem i pogleda da li komentarlinesplitter [ 9 ] odgovar nek ak ne odgovar nijedn , to znac da ta tem ne postoj tj da je obrisan i nem doda ova podkomentar u list"
"podkomentar u list"
"tokeniodabranogkorisnik [ 8 ] tu se nalaz spisak pracen podforum"
"spoljasnjost-podforumi"
"1. prodj kroz sve podforum . txt i kad nadjes da je splitter [ 0 ] == p. naziv preskoc ga sa dodavanj u list 2. prodj kroz sve tem i svak koj im splitter [ 0 ] == p. naziv obris , tj nem je prepisa 3. prodj kroz komentar i svak obrisan doda u listuobrisan 4. prodj kroz podkomentar i obris on cij su roditelj u listiobrisan 5. prodj kroz lajkdislajkkomentar 6. prodj kroz lajk dislajk tem"
"za pocetk im sam jedan moderator"
"unutrasnjost-podforum"
"uzm mu pracen podforum i tem"
"ak korisnik pra podforum u kom se ov tem nalaz prover da li se ov tem nalaz u list njegov pracen"
"ukolik korisnik nij vec sacuva ov tem , i ov tem im 5 il vis pozitivn glasov , doda mu je u preporuk"
"pretraz sam po sadrza"
"pretraz sam po autor"
"pretraz po podforum u koj pripad i autor"
"pretraz po naslov i autor"
"pretraz po sadrza i autor"
"pretraz po podforum , naslov , sadrza"
"pretraz po podforum , naslov , autor"
"pretraz po podforum , sadrza , autor"
"pretraz po naslov , sadrza , autor"
"pretraz po naziv i opis"
"pretraz po naziv i moderator"
"pretraz po naziv , opis i moderator"
"u slucaj da je vec lajkova tu tem vra fals"
"nakon sto sam doda u . txt fajl ko je lajkova , sad nadj tu tem i povecaj joj brojlajkovan"
"nas smo tem koj treba poveca negativn glasov"
"tokeniodabranogkorisnik [ 9 ] tu se nalaz spisak pracen tem"
"not : kad dodaj tem u list pracen tem , stav da nem ni jedan komentar , post mi ne trebaju komentar kad budem ispisiva sam tem"
"1. prodj kroz sve tem . txt i kad nadjes da je splitter [ 0 ] == temazabrisanj . podforumkomepripad i splitter [ 1 ] == temazabrisanj . naslov tu nem doda"
"1. prodj kroz sve tem . txt i kad nadjes da je splitter [ 0 ] == temazabrisanj . podforumkomepripad i splitter [ 1 ] == temazabrisanj . naslov tu nem doda 2. prodj kroz sve komentar , i svak koj u seb sadrz tu tem obris ga , tj prepis komentar . txt a nem doda te koj sadrz tu tem 3. za svak komentar koj ne sadrz tu tem doda njegov id u nek list string , zat prodj kroz sve podkomentar . txt i obris sve podkomentar cij je splitter [ 0 ] == id-em iz list obrisan komentar , i takodj te obrisan idev doda u jos nek listuobrisanihpodkomentar 4. prodj kroz lajkdislajkkomentar i obris svak koj sadrz nek id il iz listeobrisanihkomentar il iz listeobrisanihpodkomentar 5. prodj kroz lajkdislajktem i obris svak tem cij je splitter [ 1 ] == temazabrisanj . PodforumKomePripada-tema . naslov"
"prodj kroz komentar svih tem , ukolik nek tem sadrz u svoj list komenar zalb . entit ( idprosledjenogkomentar ) sacuva podforum u koj se nalaz ta tem ond prodj kroz sve podforum i nadj ona podforum koj sam malopr nasa i izvuc mu odgovorn moderator"
"to znac da ov tem sadrz taj komentar koj je poslat na zalb i sad uzima podforum u kom se ta tem nalaz"
"pa sad prodj kroz podforum i nadj odgovorn moderator za podforum u koj se nalaz tem u koj se nalaz komentar na koj se korisnik zali"
"list tem"
"list komentar"
"ak hoc da pomer manifesatcij jak mal da ne okid dol"
"kreiranj sedist"
"editovanj sedist"
"dodavanj lokacij"
"tod : jedn kompanij ne sme da im vis ist lokacij"
"prover da li vec postoj kompanij sa tim imen"
"prover da li je user vec admin nek kompanij"
"prover da li je korisnik vec oceni kompanij"
"prover da li aut pripad kompanij ulogovan admin"
"prover da li filijal pripad kompanij ulogovan admin"
"validacij datum"
"prover datum"
"smanj za popust"
"fi : invertorytyp . cs author : vax created : friday , apri 17 , 2020 12:50:01 am"
"tod : proveri da li treba propert , i kak to resi u pd"
"<summary> remov an existing inventoryamount fr the collection </summary> <pdGenerated> default remov </pdGenerated>"
"purpos : definition of class ro"
"inventar koj ne zahtev zauzimanj od stran cinioc sistem ."
"fi : rat . cs author : vax created : wednesday , apri 29 , 2020 7:34:31 pm"
"purpos : definition of class surveyrespons"
"fi : doctor . cs author : vax created : wednesday , apri 1 , 2020 9:43:20 pm"
"purpos : definition of class doctor"
"purpos : definition of class manager"
"purpos : definition of class person"
"purpos : definition of class registereduser"
"fi : specialist . cs author : igorr created : thursday , apri 2 , 2020 12:54:00 pm"
"fi : specialtytyp . cs author : igorr created : saturday , apri 4 , 2020 10:20:10 pm"
"fi : userdt . cs author : filip zukovic created : wednesday , may 20 , 2020 5:04:06 pm"
"ostavi , trebac kasn da se nadograd"
"version information for an assembly consists of the following four values : major version minor version build number revision yo can specify all the values or yo can default the build and revision numbers by using the ' * ' as shown below : [ assembly : assemblyversion ( "" 1.0. * "" ) ]"
"version information for an assembly consists of the following four values : major version minor version build number revision yo can specify all the values or yo can default the build and revision numbers by using the ' * ' as shown below : [ assembly : assemblyversion ( "" 1.0. * "" ) ]"
"fi : blogpostdatabaserepository . cs author : vax created : saturday , may 2 , 2020 5:16:42 pm purpos : definition of class blogpostdatabaserepository"
"fi : blogpostdatabaserepositoryfactory . cs author : vax created : friday , may 29 , 2020 6:19:06 pm purpos : definition of class blogpostdatabaserepositoryfactory"
"ak je sve ov zadovoljen , slobodn je"
"tod : resi ov interakcij sa rep , prek factory pattern"
"ak jeste predlazem njeg"
"ak je prioritet doktor , i taj doktor nij slobodan u izabran temrin , tad trazim prv slobodan termin izvan izabran interva"
"da li se taj termin nalaz unutar radn vremen"
"public iuserrepositoryfacotory iuserrepositoryfacotory ;"
"merg je ist ka creat al ne dopust duplikat"
"nem korisnik u baz"
"pilot"
"aerodrom"
"avion"
"stjuardes"
"tezin"
"br putnik"
"drug parametar je redn br presedanj"
"cita dok je ulaz validan"
"za std :: complex na primer : ( 1,2 ) ( 3,4 ) ."
"duzin najduz lin za unt poruk ."
"istre & getlin ( istre & is , string & str , char del ) ; istre & getlin ( istre & is , string & str ) ;"
"separator sa zvezdic im duzin najduz lin + 4 usled tog sto poruk """" hell """" menja sa """" * hell * """" ."
"ispisuj gornj separator ."
"brisanj poslednjeg element ."
"vremensk slozenost : o ( 1 )"
"brisanj element na pozicij koj je definisan iterator , u ov slucaj , brisem element na indeks 0 + 3 = 3."
"vremensk slozenost : linearn"
"inicijalizacij skup pocetn vrednost ."
"blok ispod je doda kak bi se omoguci da recikliram imen promenljiv ."
"pretrag u skup"
"pristupanj element sa dat kljuc ."
"vremensk slozenost : logaritamsk"
"koriscenj prv pristup , ukolik kljuc ne postoj u recnik , bic unet nov par vrednost u recnik , pr cem se za vrednost u tom par uz podrazumevan vrednost za dat tip ( std :: string u ov primer ) ."
"++ key_not_existing ; std :: cout << """" student sa indeks """" << key_not_existing << """" se zov / "" << students.at ( key_not_existing ) << """" / "" << std :: endl ;"
"unosesenj nov par ( kljuc , vrednost )"
"konstruisem par koj zeli da doda ."
"povratn vrednost je par ( iterator , bool ) . ukolik je unos uspesan , iterator """" pokazuj """" na unet par u recnik , a bool vrednost je tacn . ukolik unos nij uspesan , iterator """" pokazuj """" na postojec par u recnik , a bool vrednost je netacn ."
"uzima prv element uredjen par"
"primer za unos koj ne uspev ."
"inicijalizacij jpl ."
"vrl slicn ka za vektor , prover da li je kolekcij prazn i pristup element ."
"primeti da funkcij ` back ( ) ` ne postoj , da li mozet da pretpostavi zast ?"
"pored ` cbegin ( ) ` , ` begin ( ) ` , ` cend ( ) ` i ` end ( ) ` iterator postoj i iterator ` cbefore_begin ( ) ` i ` before_begin ( ) ` iterator koj pokazuj na prv pozicij pr pocetk list . namen ov iterator je na primer za funkcij poput : ` insert_after ( ) ` , ` emplace_after ( ) ` , ` erase_after ( ) ` , ` splice_after ( ) ` ."
"dodajem element pr element na koj pokazuj prosledjen iterator , u ov slucaj , dodajem ' > ' na pocetk list ."
"vremensk slozenost : * konstantn - u slucaj unos jedn vrednost * linearn po broj uneti vrednost"
"iterir se kroz list ."
"tip std :: list < t , . > predstavlj dvostruk povezan list ( dpl ) vednost tip T."
"izracunavanj broj element"
"vremensk slozenost : konstantn ( od c ++ 11 )"
"unosenj jedn il vis element ispred nek element ."
"vremensk slozenost : konstantn ( u slucaj unos jedn vrednost ) il linearn po broj uneti vrednost"
"unosenj element na pocetk i kraj dpl ."
"vremensk slozenost : konstantn"
"inicijalizacij prazn vektor"
"dodajem na kraj vektor svak unet br . vektor vrs povremen realokacij memorij pr koj rezervis vis neg sto mu u tom trenutk potrebn kak bi dodavanj na kraj bilo efikasn ."
"prikazuj br element u vektor ."
"dodaj se br na pocetk vektor ."
"umest std :: cbegin i std :: cend moz se koristit i xs . cbegin ( ) i xs . cend . preporucen je koristit opstij verzij funkcij std :: cbegin ( ) i std :: cend ( ) jer rad u vis slucaj u zavinost od tip na koji se poziva ( na primer pokazivac ) ."
"dodaj se pet 0 na kraj vektor ."
"ispisivanj sadrzaj vektor koristec kolekcijsk petlj ."
"stl kolekcij su pravljenj sa cilj da budu izuzetn efikasn , tak da se ne vrs prover granic prilik pristup element kolekcij . ovd treba biti pazljiv i obratit paznj na granic ."
"dodavanj vrednost na kraj vektor , pr cem vrednost konstruisem u mest ."
"vremensk slozenost : amortizovan konstantn o ( 1 )"
"postfiksn inkrementiranj ."
"inkremenitiram trenutn objekt koristec prefiksn operator inkrementacij ."
"vraca originaln verzij ."
"tod domac"
"operator za jednakost i nejednakost ."
"binarn operator za sabiranj i oduzimanj razlomak ` a ` i ` b ` gde je : - ` a ` -> * this - ` b ` -> other"
"domac : - mnozenj razlomak - deljenj razlomak - operator > , < - prefiksn i postfiksn operator -- - operator > = , < = - mnozenj i deljenj skalar"
"preporucen kastovanj u c ++ svet koristec static_cast . https :/ stackoverflow.com/ questions / 103512 / why-use-static-castintx-instead-of-intx"
"std :: back_inserter je pogodn funkcij koj za dat kolekcij konstruis iterator koj se korist za dodavanj element na kraj te kolekcij . ocigledn , ov funkcionis sam za on kolekcij koj im definisan operacij push_back ."
"sortiram vektor , osi prv i poslednjeg element"
"alternativn , i preporucen , je koristi std :: begin i std :: end jer su opstij ( u ov slucaj rad ist ) . na primer , ukolik je xs staticki-alociran niz il nek drug kolekcij ( koj podrzav operacij begin i end ) , sledec kod bi i dalj radi ."
"ispisuj sadrza"
"alternativn , i preporucen , ka i sa sortiranj vektor iznad jeste koriscenj funkcij std :: cbegin i std :: cend za dobijanj konstantn iterator na pocetk , odnosn , kraj kolekcij ."
"ispisuj sadrza u obrnut poretk"
"iterator nam pruza apstrakcij nad pokazivac ."
"vrsi razdvajanj string po separator ' / ' . rezulta je list string ( qstringlist ) razdvojen po karakter . na primer :"
"inkrementacij prv operand"
"azuriram vrednost razlomk ."
"vazn uocit da se logik za drug razlomak ponavlj i da izuzetn lic na logik za prv razomak . im smisl i preporucen je apstrahova ob funkcij nov funkcij , a pot nju pozva i izbec ponavljanj kod . uradi to za domac ."
"uocit da se logik za drug razlomak ponavlj i da izuzetn lic na logik za prv razomak ."
"im smisl i preporucen je apstrahova ob funkcij nov funkcij , a pot nju pozva i izbec ponavljanj kod . uradi to za domac ."
"pokusava da parsiram prv razlomak"
"ak je uspel parsiranj , vrsi izracunavanj ."
"izracunava zbir ( rezulta je fraction ) , i pot se poziv implicitn kastovanj u tip qstring ( implementir smo taj operator ) ."
"oduzimanj"
"uocit da se logik za oduzimanj ponavlj i da izuzetn lic na logik za sabiranj . im smisl i preporucen je apstrahova ob funkcij nov funkcij , a pot nju pozva i izbec ponavljanj kod ."
"uradi to za domac ."
"vrs parsiranj razlomk iz qlineedi polj koj se prosledjuj"
"rad sa std :: shared_ptr """" pametn """" pokazivac"
"funkcij ` use_count ( ) ` prikazuj br referenc na objekt ."
"u nas slucaj bic 3 usled pokazivc p1 , p2 i p3 ."
"sad ce br referenc biti 4."
"rad sa std :: unique_ptr """" pametn """" pokazivac"
"sirov pokazivc mozem izvuc koristec funkcij ` get ( ) ` . ov bi treba izbegava , osi ukolik nema dobar razlog za to - na primer nek star de projekt bas zahtev da se prosled sirov pokazivc , a nema vremen il dozvol da menja taj de projekt ."
"unique_ptr ( ka i shared_ptr ) im predefinisan operator * i -> tak da se unique_ptr objekt sa njim ponas ka da je sirov pokazivc , odnosn operator * vrs dereferensiranj , a -> vrs pristup objekt na koj pokazuj pametn pokazivc ."
"klas std :: unique_ptr sluz da zamen koriscenj """" cist """" pokazivc u situacij kad najvis jedan pokazivc moz da sadrz adres na nek objekt , odnosn kad je taj pokazivc glavn i jedin odgovorn vlasnik nad objekt ."
"const aut p2 ( p1 ) ;"
"konstruktor kopij je obrisan ( = delet )"
"const aut p3 = p2 ;"
"operator dodel sa semantik kopiranj je obrisan ( = delet )"
"u klas unique_ptr operator bool je definisan tak da vrc tacn ak unique_ptr pokazuj na nek objekt , odnosn get ( ) ! = nullptr . kad se promen vlasnistv , odnosn pozov mov konstruktor za unique_ptr ( videcem sta je mov konstruktor u naredn primer sa list ) , star objekt ce biti azuriran i operator bool ce vraca fals jer unique_ptr vis ne pokazuj na objekt ( primer ispod ) ."
"za primitivn tipov , ka sto je size_t , nem potreb zva std :: mov ."
"1. prav se privremen kopij objekt ( poziv se konstruktor kopij )"
"operator dodel uvek vrc referenc na tekuc objekt , kak bismo mogl ulancava ova operator ."
"ponov , ovd ne koristim std :: mov jer je tip podatk trivijaln , al moramo da resetuj br element u drug list na 0 , ka u konstruktor sa semantik pomeranj ."
"kad god se naprav destruktor , obavezn je napravi i konstruktor kopij i operator dodel ( rul of 3 ) , il ih eksplicitn izbrisa ( navodjenj """" = delet """" nakon metod ) , a pozeljn je napravi i konstruktor operator dodel sa semantik pomeranj ( rul of 5 ) ."
"kljucn rec noexcept navodi da metod nec izbaciva izuzetk . ukolik noexcept metod ipak izbac izuzetk , i taj izuzetk nij uhvacen i obradjen unutar funkcij , c ++ progra to smatr za gresk od koj nem oporavk , te ce pozva std :: termina ( ) i zavrsic se . za nek metod se smatr da bi treba da budu noexcept , ka sto su metod sa semantik pomeranj ispod ."
"konstruktor kopij"
"operator dodel sa semantik pomeranj"
"operacij za rad sa list"
"operator indeksiranj koji sam dohvata element"
"! MATF_LIST_HPP"
"s obzir da smo """" ukra """" implementacij ys , u opst slucaj ne bi treba da je koristim u dalj kod . ipak , mi ispisuj njen sadrza da bismo pokaza da konstruktor sa semantik pomeranj zaist """" krad """" implementacij iz ys ."
"naredn fragment kod kreir dve prazn list , as i bs , a zat poziv operator dodeljivanj sa semantik kopiranj i pomeranj rad testiranj njihov implementacij ."
"primer ispravn implementacij rad sa resurs . resurs moz biti datotek , konekcij ka baz podatk , dinamick memorij , i dr."
"inicijalizacij resurs se vrs na pocetk funkcij"
"nacin implementacij u programsk jezik c"
"deinicijalizacij resurs se vrs na kraj funkcij"
"resourc acquisition is initialization ( skr . rai ) predstavlj tehnik programiranj u jezik c ++ koj se zivotn ciklus nek resurs vezuj za zivotn ciklus odgovarajuceg objekt . drug rec , resurs se dobij kad se objekt konstruis , dok se resurs oslobadj kad se objekt unistav ."
"inicijalizacij resurs se vrs u konstruktor"
"deinicijalizacij resurs se vrs u destruktor"
"zbog inicijalizacij i deinicijalizacij resurs je prilik pisanj c program nasta praks da bi metod treba da im sam jedan izlaz , tj. jedn return naredb za c ++ ov ne moz biti praks , jer i pored jedn naredb return , izlaz iz metod moz da se pojav bilo gde , tj. izuzetk moz biti ispaljen bilo gde u kod . tak da je idej inicijalizacij na pocetk metod i deinicijalizacij na kraj nest sto je obeshrabren ."
"implementir funkcij koj vrc iterator na prv element u kolekcij koj zadovoljav predikat ` p ` . ak funkcij ne pronadj takav element , vratit iterator na kraj kolekcij ."
"implementir funkcij koj pocevs od iterator ` first ` pa do iterator ` last ` postavlj vrednost ` valu ` ."
"napisa funkcij koj prosledjen vrednost ` v ` odsec na interva [ low , high ] tak sto : - v < low = > v = low - v > high = > v = high - inac = > v"
"find"
"find if"
"clamp"
"dedukcij sablon ne uspev ak se ne naved <float> za poziv matf :: clamp ( valu , 0 , 1 ) jer ne postoj funkcij matf :: clamp ( float , int , int ) . kad navedem <float> pr poziv , vrednost 0 i 1 se implicitn kastuj u float te se pronalaz funkcij matf :: clamp ( float , float , float ) ."
"uocit razlik pr konstrukcij objekt i dodavanj u vektor ak se korist ` push_back ` i ` emplace_back ` ."
"uocit redosled pozivanj konstruktor i mov operator . zakomentarisi mov konstruktor i mov operator dodel pa analizira ponasanj ov del kod ponov . iak se unutar matf :: accumulat vrs izmen neutra , primeti da se on kopir pr poziv funkcij , i da je nakon funkcij i dalj vrednost u red , te ga zbog tog deklarisem ka konstantn ."
"da li sledec kod validn rad ?"
"sablonsk funkcij koj vrc maksimum od dve prosledjen vrednost . vrednost mogu biti bilo kog tip nad koj je definisan operator ' > ' . kljucn rec ` inlin ` sugeris kompilator da pokus da poziv funkcij zamen direktn sa implementacij funkcij . tim se moz izbec cen pozivanj funkcij ."
"pretpostavi da je prv najvec ."
"funkcij ` accumulat ` vrs akumuliranj vrednost kroz kolekcij podatk koristec operator ' + ' i koristec neutra ` init ` ."
"c """" - ovsk nacin da se napis """" generick funkcij """" kroz koriscenj sistem zasnovan na makro ."
"ifndef POINT_HPP * / #endif / * ifndef POINT_HPP"
"operator [ ] je promenjen da uvek vrc referenc , da bismo izbegl kopiranj potencijaln velik objekt . ocigledn , da bismo spreci menjanj objekt , potrebn je da vratim konstantn referenc ."
"uocit prelep stvar : osi promen ' int ' u ' t ' , i dodavanj templat < typenam t > prakticn nism nist promeni u klas ."
"generick klas nazalost ne mozem da razvoji u . hpp i . cpp datotek ka sto smo videl na ran casov . https :/ stackoverflow.com/ questions / 495021 / why-can-templates-only-be-implemented-in-the-header-file jedin sto mozem uradi jeste odvoji implementacij u posebn datotek zaglavlj koj cest im ekstenzij . ipp ( il nekad . tpp ) , a pot tu datotek ukljucit na dnu . hpp zaglavlj . napomen : ovakv datotek ( . ipp /. tpp ) se ne kompiliraj , ka ni osta zaglavlj ! https :/ stackoverflow.com/ questions / 44774036 / why-use-a-tpp-file-when-implementing-templated-functions-and-classes-defined-i"
"! COLOR_H * / #endif / * ! COLOR_H"
"ifndef PAIR_HPP * / #endif / * ifndef PAIR_HPP"
"zadatk : za dat argument komandn lin ispita da li je palindr ."
"proverava da li su dve kolekcij jednak . nedostaj prover da li ob kolekcij im ist br element sto nij potrebn u ov slucaj ."
"zadatk : dat je vektor pojmov ( nisk ) . konstruisa nov vektor koj odgovar dat , tak da ukolik je poja odabran ( pocinj karakter ' * ' ) , ond vektor na toj pozicij im vrednost tru , a u suprotn im vrednost fals ."
"zadatk : napisa funkcij spli koj prihvat nisk ka parametar , i konstruis vektor rec koj se nalaz u dat nisk ."
"preskacem razmak sa pocetk"
"kopiram karakter u izlazn vektor"
"zavrsava petlj nastavljajuc od kraj prethodn rec"
"izdvaja element koj su deljiv broj 3 na pocetk kolekcij . algorita vrc iterator na prv element koj nij deljiv nakon razdvajanj ."
"particionisem ostatk kolekcij ( preskacem element koj su deljiv broj 3 ) . drug grup ce imat sam element koj daj ostatk 1 pr deljenj broj 3 , dok su element iz interva [ second_end , std :: end ( xs )) u trec grup ."
"zadatk : napisa sablonsk funkcij slide_selection koj prihvat iterator na pocetk i kraj del kolekcij i iterator na pozicij ispred koj se pomeraj element dat del kolekcij . funkcij treba da izvrs dat pomeranj i vra par iterator koj pokazuj na pomeren de kolekcij ."
"ne moramo koristit std :: make_pair , vec ga mozem konstruisa inicijalizator"
"algorita vrs lev rotacij del kolekcij , tak sto zamenjuj element iz [ first , last ) tak da element n_first postaj prv element u nov del kolekcij i element n_first - 1 postaj poslednj element u nov del kolekcij . ( od c ++ 11 ) algorita vrc iterator na nov lokacij element koj pokazuj na first , tj. first + ( last - n_first ) ."
"zadatk : napisa sablonsk funkcij move_selection koj prihvat iterator na pocetk i kraj del kolekcij , iterator na odredisn lokacij i predikat koji testiram vrednost . funkcij pomer sve element koj zadovoljava predikat ok mest na koj pokazuj iterator na odredisn lokacij ."
"problem mozem da razdvoji na dva del :"
"1. particionisem de kolekcij od pocetk do destination iterator , u ov del zeli da pomeri selektovan element na kraj"
"ov nam je potrebn funkcij koj vrc ` tru ` kad ` predica ` vra fals i obrn . jedan nacin je da napisem sablon koj to rad ( ` not_predicate ` ) , pa da """" vezem """" argument koj ce nam prosledi stable_partition , sto se moz izvest pozivanj funkcij ` std :: bind ` , pr cem ` std :: placeholders :: _1 ` predstavlj taj argument koj ce biti prosledjen . medjut , dodatn problem je sto moramo da eksplicitn navedem tipov za dat sablon . tip za predikat vec im , al tip vrednost kolekcij nema . na srec , dostupan nam je operator decltyp koj da prosledjen vrednost dedukuj o koj tip je rec ."
"kad budemo uci lambd izraz , videcem da su on mnog pogodn za rad ( od c ++ 11 ) . na primer , ovd je mnog laks prosledi naredn lambd izraz koj rad ist stvar , al bez definisanj ` not_predicate ` i """" mucenj """" ok tipov . [ predica ] ( const aut & it ) { return ! predica ( it ) ; }"
"zadatk : napisa sablonsk funkcij count_adj_equals koj vrc br uzastopn jednak element kolekcij ."
"s obzir da nam je sablonsk tip t kolekcij , ak zeli da """" izvucem """" koj je sablonsk tip jedn element kolekcij , to mozem uradi tak sto iskoristim vrednost t :: value_type . medjut , zbog nacin kak sablon rad , potrebn je da taj sablonsk parametar takodj imenuj , sto se rad sintaks : """" typenam inner = typenam t :: value_type """""
"algorita izracunav """" skalarn proizvod """" dvej kolekcij . naravn , definicij """" skalarn proizvod """" u ov kontekst moz odgovara bilo koji binarn operacij ` + ` i ` * ` koj mi definisem . u ov primer , operacij ` * ` je ispitivanj da li su vrednost jednak ( ` equal_to_int ` ) dok je operacij + klasicn sabiranj ( ` plus ` ) ."
"primer izvrsavanj za nisk : hooloovo"
"primeti da ovd poredi kolekcij ( bez posl . element ) i ist tu kolekcij sam """" pomeren """" za jedn mest ulev : hooloov | o ooloovo algorita ce za svak dva karakter poziva ` equal_to_int ` , cim ce dobija vrednost : 01001001 koj ce se """" akumulir """" operacij ` plus ` , sto daj vrednost 3."
"jedan pokusa bi bio cuvanj objekt :"
"ka sto vidi iz ispis , cak i ak je metod ` nam ` deklarisan ka virtualn , objekt ` s2_sliced ` nem informacij o tom da je to zaprav ` master_student ` . ov pojav se naziv odsecanj ( engl . slicing ) ."
"drug pokusa je cuvanj referenc :"
"primeti da je tip ` s2_pointer ` pokazivc na ` student ` . zbog tog , bez obzir sto on zaprav sadrz adres objekt tip ` master_student ` , ne mozem prek njeg da pristupi clanic koj su definisan u ` master_student ` , a nis u ` student ` . naredn lin ne prolaz kompilacij :"
"da bismo kastova pokazivc niz hijerarhij klas ( engl . downcast ) , moramo da pozovem operator dynamic_cast , koj vrst kastovanj u tok izvrsavanj program . ak ova operator vra ` nullptr ` , to znac da pokazivc zaprav ne sadrz adres ciljan klas ."
"slicn vaz i za referenc , sa razlik da se u slucaj neuspeh ispaljuj std :: bad_cast"
". a u izveden klas za dat metod navest kljucn rec ` overrid ` ."
"apstraktn klas se ne mogu instancir , vec vaz pravi : - u stabl hijerarhij na svak put od koren ( bazn klas ) do svih listov ( najspecificn izveden klas ) mora postoja makar jedn implementacij apstraktn metod . na primer , na put ` vehicl ` -> ` vehiclewithwindow ` -> ` car ` , apstraktn metod ` type ( ) ` je implementiran u klas ` car ` . metod koj su virtualn i apstraktn se naziva """" cist virtualn """" ( engl . pur virtua ) ."
"implementiram netrivijaln destruktor i konstruktor kopij . prem """" pravi 5 """" , treba implementir i : - operator dodeljivanj sa semantik kopiranj - konstruktor pomeranj - operator dodeljivanj sa semantik pomeranj uradi za domac !"
"tip vozil je nepozna za bazn klas , pa zat ova metod mora biti apstraktan ( notacij ` = 0 ` ispod ) ."
"ak zeli da napravi klas za koj zeli da zabran kopiranj i operator dodel , dovoljn je da """" izbrisem """" njihov implementacij . ak zeli da napravi vis takv klas , ov ponasanj mozem da ubaci u nek od natklas ."
"ne zeli da ik moz da naprav direktn instanc nas klas . moz da pozov konstruktor il destruktor sam ak je izveden ."
"pravi klas koj ' barat ' baz podatk"
"pravi klas koj barat intern baz . implementacij se oslanj na to da mozem imat sam jedn konekcij ka intern baz ."
"internal_database db2_copy = db2 ;"
"pravi klas ora . ora je ptic koj bi treba da moz da let ."
"kompajler nam sad javlj da pingvin ne mogu da let"
"p. fly ( ) ;"
"dva objekt su razlicit ak nis jednak"
"pravi klas koj ce testir implementiran operator"
"ponekad implementacij metod koj dolaz u parov i zavis jedan od drug mogu da nam dosad . na primer , zast ne napravi klas koj ce nam dozvoljava da definisem sam operator == , a ! = da bud automatsk implementiran ( il obrn ) ?"
"sad sve rad kak bi treba"
"funkcionaln objekt implementiraj """" operator pozivanj """" , tak da kad se kreir objekt ov klas , moguc ga je """" poziva """" . argument ov operator su argument koj prosledjuj pr """" poziv """" ."
"kreiram recnik , pr cem ka operacij poredjenj koristim funkcionaln objekt ."
"ispisuj sve rec koj pocinj prefiks koj korisnik zad"
"trazim iterator na prv rec koj je vec il jednak on koj je korisnik zahteva"
"trazim iterator na prv rec koj ne pocinj on sto je korisnik zahteva . to radi tak sto """" uveca """" poslednj karakter u upit , pa ond trazim prv rec sa tim prefiks ."
"metod koj menj originaln string tak sto sva slov pretvar u mal ."
"algorita count_if vrc br element interva koj zadovoljava dat predikat"
"o referenc , kategorij izraz i savrsen prosledjivanj : http :/ bajamircea.github.io/ coding / cpp / 2016/04/07 / move-forward . html"
"algorita ` find_if ` vrc iterator na prv pronadjen element . prosledjuj anonimn funkcij ( anonimn funkcijsk objekt ) . trazim prv parn vrednost u niz ."
"bind ce vratit unarn funkcij ( im jedn """" rup """" , sami tim rezulta ce biti funkcij od jedn argument ) . kad bud pozvan uz konkretan argument ` v ` , vratic ist rezulta koj vrc v. between ( 2 , 4 )"
"bind ce vratit unarn funkcij ( im jedn "" rup "" , sami tim rezulta ce biti funkcij od jedn argument ) . kad bud pozvan uz konkretan argument ` v ` , vratic ist rezulta koj vrc v. between ( 2 , 4 )"
"dodajem misev"
"ukljucuj anti-aliasing"
"primeti karakter : u naziv resurs - koristim qt resourc system ( . qtc ) da se neophodn resurs postav u izvrsiv datotek naseg program tak da nism u obavez da ih korisnik zasebn isporucuj ."
"omogucav se da korisnik mis moz da pomer glavn pogled na scen ( drag and drop akcij ) ."
"postavlja tajmer"
"postavlja da se advanc poziv na svak 10/33 ms sto otprilik daj 30 fps ."
"qgraphicsscen poziv advanc nad svak element scen kad se odluc da predj na sledec fram ."
"metod advanc se poziv dva put : ak je step == 0 , ond se poziv da informis element o tom da ce se desi advanc ( korisn da se element priprem za advanc ) . ak je step == 1 , ond se zaprav izvrsav advanc na scen ."
"lin od centr mis do centr scen"
"rotiram na desn"
"trazim misev koj su nam u vidokrug"
"haoticn kretanj"
"prosledjuj dogadjaj roditeljsk klas ."
"qgraphicsit :: mousepressevent ( event ) ;"
"uklanja mis iz scen ."
"metod koj vrc pravouganik u cij okvir garantuj da se mis nalaz ( to jest , da ni jedan de mis ne izlaz van ) . qgraphicsview ov korist kak bi proveri da li qgraphicsit zahtev ponovn crtanj ."
"funkcij koj vrc precizn granic mis rad detekcij kolizij ."
"crta tel"
"osta element mis crta sam ak im dovoljn mest za detalj"
"sluz za definisanj """" precizn """" oblik element scen . korist se pr detekcij kolizij ."
"u pitanj je cist virtualn metod u natklas qgraphicsit . definis procedur za iscrtavanj element scen ."
"za svak frejm u animacij , scen poziv advanc nad element scen ."
"izracunava jedan medjuproizvod"
"dodajem na medjurezulta"
"brisem vodec nul"
"da li je prv > = drug"
"slucaj x == y"
"ak su brojev ist znak"
"broj koj im vec apsolutn vrednost dodajem br sa manj aps . vrednosc"
"ak su brojev ist znak , od broj sa vec aps . vred . oduzima br sa manj aps . vred ."
"CEOBROJ_H_"
"arrang"
"assert"
"ak nek izraz treba da bud jednak vrednost tru , koristim makro check i requir . razlik izmedj ov dva makro je u tom sto : - check ne prekid testiranj ostali prover u jedn test - requir prekid testiranj ostali prover u jedn test"
"fi : event . cpp"
"postavlj nov prekidn rutin"
"restore-uje prekidn rutin u prvobitn stanj"
"externals iz kernel . h"
"ne treba nam stack , koristim stack od glavn program"
"ov metod treba pozva svak put kad se des prekid na tajmer"
"dok im nit koj treba da se odblokiraj , odblokiraj ih"
"fi : list . cpp"
"static list < pair < const char * , va_list > > buffer ;"
"buffer . pushback ( makepair ( forma , arglist )) ;"
"lock za buffer b"
"interuptlock lock ( tru ) ;"
"whi ( ! buffer . empty ()) { pair < const char * , va_list > * curr = buffer . getfirst ( ) ;"
"check ( curr ! = null , """" curr == 0 , log . cpp """" ) ;"
"lock . unlock ( ) ;"
"da bi se zakljuca prekid po izlask iz vfprintf ak su bili zakljucan pr ulask"
"delet curr ; lock . lock ( ) ; }"
"fi : pcb . cpp"
"pamtim adres metod run ( ) seg off"
"kreiram stack content za ova proces"
"postavljanj kontekst stek"
"napomen : sp je na pocetk stack [ 0 ] - kod u pcb konstruktor"
"posl metod run izvrsav se metod killthread ( podesava return adress-u na stack )"
"zbog threads"
"pokazuj na pocetk niz"
"strcpy i strlen"
"waitingformetocomplet - nij thread saf"
"fi : pcblist . cpp"
"bool sempreempt = fals ;"
"valu - nij thread saf blocked - nij thread saf"
"ne sme da se promen list blokiran , scheduler :: put - nij thread saf valu - nij thread saf blocked - nij thread saf"
"fi : tcontrol . cpp"
"locks this block problem ak se interrupt des neposredn pr instukcij : insid = tru ov moz dovest do nekoegzistentn stanj"
"sp = runningthread -> sp ss = runningthread -> ss"
"check ( runningthread -> id ! = -1 , """" dispach """" ) ;"
"fi : thread . cpp"
"timeblocked nij thread saf"
"log3 ( """" / tlog : allocating % d bytes / n """" , siz ) ;"
"log3 ( """" / tlog : deallocating % p memory / n """" , loc ) ;"
"fi : event . h"
"Event-ovi kreiran na ov ulaz"
"kod van OS-a koj se pokrec"
"sve nit koj su """" ziv """" objekt"
"trenutn br nit u Scheduler-u"
"vrc element sa pocetk bez uklanjanj iz lis"
"bris sam prv pronadjen nod ne bris se vrednost"
"void remov ( cmp cmp ) { nod * del = findnod ( cmp ) ; delet del ; }"
"pr brisanj prevezuj se ostatk list"
"! glup BC31 poziv destruktor sa skriven parametr po referenc"
"dodaj element na pocetk"
"blokir prekid vrc u stanj pr poziv lock , ak lock nij pozvan nem efekt"
"fi : log . h"
"da li nek trenutn vrs upis u log"
"ak je definisan ispisvac se poruk na ekran ak dodj do gresk ov je jer ak je nek vrsi ispis , a mi pisem moz doc do gresk nij tolik bitn post moramo u svak slucaj da prekin progra"
"thread saf"
"log1 - log najveceg prioritet post je inlin nec se ugradi kad nij definisan LOG1"
"log3 - log najmanj prioritet post je inlin nec se ugradi kad nij definisan LOG3"
"fi : pair . h"
"20 , 2 ; 22 , 2"
"da li je probudjen nit pr sa wakeup ( pr neg sto je treba )"
"_PCB_H_"
"nij thread saf"
"fi : schedul . h"
"fi : semaphor . h"
"returns the current valu of the semaphor"
"fi : sysmod . h"
"fi : tcontrol . h"
"_TCONTROL_H_"
"fi : thread . h"
"returns : 1 � run completed , 0 � woken up returns : 1 � deblocked , 0 � no effect"
"returns : 1 � sleep completed , 0 � woken up"
"tim , x 55 ms"
"default = 2 * 55 ms"
"fi : utility . h"
"potrebn consumer"
"dohva consumer thread"
"ocitav statusn reg. sa 64 h"
"dok se ocitav takav status da je pritisn nek taster"
"ov se menj u test"
"0 il defaulttimeslic"
"korisnick progra mora obavezn da definis ov f-ju"
"_OS1_USER_H_"
"fi : buffer . h"
"! val je 32 bitan , tip clustern !"
"! vrednost je 32 bitn , tip clustern !"
"ova operator vrc buffer enkapsuliran u objekt koj se prosledjuj"
"uzm"
"vra"
"popunjav ulaz na pozcij pos sa vrednosc val"
"fi : cluster . h"
"za prv ulaz root dir"
"zatvaranj fajl"
"objekt fajl se mo � e kreir sam otvaranj"
"fi : fileiterator . h"
"konverzij iz char-a u indeks i iz indeks u char"
"fi : partlib . h"
"postavlj na 0"
"vrc sledec klaster u povezan list"
"for ( int i = 0 ; i < POOL_SIZE ; i ++ ) pool . push ( new char [ clustersiz ] ) ;"
"fi : fi . cpp"
"wait ( myimpl -> fs -> mutex ) ;"
"fi : fs . cpp"
"fi : kernelfi . cpp"
"otvori ga je drug nit"
"nism nas fajl"
"brisem fajl"
"kompresij"
"ak je bio jedin u klaster root dir skid se"
"da bi se izbegl dvostruk indeksiranj"
"zapisuj modifikovan klaster na particij"
"fi : slobodniklaster . cpp"
"if ( sledeci.no ! = 0 ) sledec . _ -> prev = novi.no ;"
"trenutn klaster postaj prv u list slobodn klaster"
"uzimanj prv slobodn sa pocetk list"
"ak je list prazn"
"umetanj na pocetk list slobodn klastr"
"implementacij sabiranj korespondentn element cel vektor a i b pokretanj onolik nit kolik im element u vektor a - vektor a b - vektor b rezulta izvršavanja treba da bud vector <int> koj sadrži rezulta sabiranj korespondentn element . implementacij sabiranj jedn par korespondentn element vektor ov funkcij treba da bud iskorišćena za funkcij nit koj ova progra pokreće . a - iterator na element vektor a koj se obrađuje b - iterator na element vektor b koj se obrađuje rez - iterator u rezultujućem vektor - element na ov pozicij će biti popunjen rezultat sabiranj"
"kreiranj nit od funkcij """" ispis """" . svak nit dobij svoj redn br"
"Čekanje da terminišu sve kreiran nit"
"implementacij pokretanj više nit koj treba da ispišu svoj redn brojev ( koristeći funkcij """" ispis """" ) brojni - br nit koj je potrebn startova"
"napravi konkurentn progra koj u poseb nit vrši obrtanj redosled element u ulazn list ( list celobrojn vrednost ) . na primer , ak je ulazn list definisan ovak : 1 , 2 , 3 , 5 , 4 rezulta obrtanj redosled element treba da izgled ovak : 4 , 5 , 3 , 2 , 1 potrebn je implementir dve funkcij : 1 ) funkcij """" obrniredosled """" koj se nalaz u fajl obrtanj . h 2 ) funkcij """" izracuna """" koj se nalaz u fajl nit . h 1 ) ulaz u funkcij """" obrniredosled """" su dve list - ulazn i izlazn . ulazn list je on čiji se element sam čitaju ( on se ne sme menja ! ) i koj se u obrnut redosled upisuj u izlazn list . test korektnost funkcij """" obrniredosled """" je dat u fajl main . cpp , u funkcij """" testirajobrniredosled """" . 2 ) funkcij """" izracuna """" im jedan parametar - ulazn list koj sadrži nek br cifar . ov funkcij treba da pokren jedn nov nit u koj će poziv funkcij """" obrniredosled """" da izvrši obrtanj redosled element ulazn list i da novodobijen list vra ka svoj povratn vrednost . test korektnost funkcij """" izracuna """" je dat u fajl main . cpp , u funkcij """" testirajizracuna """" ."
"izlazn = list <int> ( ulazn . siz ()) ;"
"implementacij obrtanj redosled element u list ov funkcij treba da bud iskorišćena za funkcij nit koj ova progra pokreće . ulazn - ulazn list , koj se obrađuje izlazn - Rezultujuća list ( biće popunjen element u obrnut redosled )"
"napravi konkurentn progra koj pronalaz element najbliži nul iz zadat vektor brojev . ova zadatk potrebn je izvršiti iz tr nov nit , tak da svak nit pretražuje po trećinu ulazn vektor . Dužina ulazn vektor uvek će biti deljiv sa 3. potrebn je implementir dve funkcij : 1 ) funkcij """" pretraz """" koj se nalaz u fajl pretrag . h 2 ) funkcij """" izracuna """" koj se nalaz u fajl nit . h 1 ) ulaz u funkcij """" pretraz """" je par iterator koj se zadaj opseg element koj je potrebn pretražiti . postoj još jedan parametar ov funkcij i on služi da se vra rezulta ( treba da bud postavljen na vrednost pronađenog element koj je najbliži nul ) . test korektnost funkcij """" pretraz """" je dat u fajl main . cpp , u funkcij """" testirajpretraz """" . 2 ) funkcij """" izracuna """" im jedan parametar - ulazn vektor razlomljen brojev ( doubl brojev ) . ov funkcij treba da pokren tr nit a ka funkcij tih nit treba da iskorist funkcij koj je implementiran u prv del zadatk ( funkcij """" pretraz """" ) . test korektnost funkcij """" izracuna """" je dat u fajl main . cpp , u funkcij """" testirajizracuna """" ."
"implementacij pokretanj tr nit koj treba da pretraže ( svak svoj trećinu ) ulazn vektor brojev i nađu element najbliži nul ulaz - ulazn vektor brojev koj se pretražuje povratn vrednost je nađeni element , najbliži nul od svih element koj su obuhvaćeni pretrag"
"PRETRAGA_H"
"napravi konkurentn progra koj prav srpsko-engleski rečnik iz zadat englesko-srpskog rečnika . posa pravljenj rečnika treba obavi u posebn nit . napomen : redosled reči u rečnicima ( i ulazn i u on koj je dobijen ka rezulta pravljenj rečnika ) ne mora biti u redosled u koj se reči pojavljuj u program ( usled osobin asocijativn kolekcij da on intern menja raspored svoji element ) . potrebn je implementir dve funkcij : 1 ) funkcij """" napravirecnik """" koj se nalaz u fajl recnik . h 2 ) funkcij """" izracuna """" koj se nalaz u fajl nit . h 1 ) ulaz u funkcij """" napravirecnik """" je par map . prv map je englesko-srpski rečnik ( polazn rečnik ) a drug map je on koj treba popuni , tak da on bud srpsko-engleski rečnik . test korektnost funkcij """" napravirecnik """" je dat u fajl main . cpp , u funkcij """" testirajnapravirecnik """" . 2 ) funkcij """" izracuna """" im jedan parametar - ulazn rečnik ( map reči kod koj je ključ reč na englesk a podatk prevod te reči na srpsk ) . ov funkcij treba da pokren nov nit a ka funkcij te nit treba da iskorist funkcij koj je implementiran u prv del zadatk ( funkcij """" napravirecnik """" ) . njen povratn vrednost treba da bud napravljen srpsko-engleski rečnik . test korektnost funkcij """" izracuna """" je dat u fajl main . cpp , u funkcij """" testirajizracuna """" ."
"implementacij pokretanj dodatn nit koj treba da naprav nov rečnik ( koristeći funkcij """" napravirecnik """" )"
"RECNIK_H"
"funkcij koj će biti iskorišćena ka funkcij nit - od zadat englesko-srpskog rečnika on prav obrn rečnik - srpsko-engleski engsrp - Englesko-srpski rečnik ( ključ je reč na englesk , podatk je njen prevod na srpsk ) srpeng - Srpsko-engleski rečnik ( ključ je reč na srpsk , podatk je njen prevod na englesk ) - ova parametar treba da se popun izvršenjem ov funkcij"
"ANTONIM_H"
"funkcij koj će biti iskorišćena ka funkcij nit - u zadat rečniku ( parametar """" recnik """" ) pronaći suprotn reč ( anton ) od zada reči """" rec """" recnik - Rečnik koj sadrži parov reč - reč suprotn značenja rec - Reč za koj se traži reč suprotn značenja rezulta - Reč suprotn značenja ( ak je pronađena , ak nij pronađena ovd treba da se upiše prazan string )"
"napravi konkurentn progra koj traži reč suprotn značenja ( anton ) od zada reči . konkurentnost rešenja se ogled u tom što se pronalaženje reči treba obavi u posebn nit . zada je rečnik ( map ) u koj se navod parov reč - suprotn reč . iak je u ov map jedn od reči ključ a drug podatk map , reči su ravnopravn - odnosn , kad se traži reč suprotn značenja , moraju se pretražiti i kjučevi i sve vrednost u map . potrebn je implementir dve funkcij : 1 ) funkcij """" nadjianton """" koj se nalaz u fajl anton . h 2 ) funkcij """" izracuna """" koj se nalaz u fajl nit . h 1 ) ulaz u funkcij """" nadjianton """" je map koj sadrži parov reč - suprotn reč . ov funkcij se takođe prosleđuje reč koj se traži anton , ka i parametar koj treba popuni , tak da nakon izvršenja funkcij u njem stoj pronađeni anton . test korektnost funkcij """" nadjianton """" je dat u fajl main . cpp , u funkcij """" testirajnadjianton """" . 2 ) funkcij """" izracuna """" im jedan parametar - ulazn rečnik i reč koj se traži anton . ov funkcij treba da pokren nov nit a ka funkcij te nit treba da iskorist funkcij koj je implementiran u prv del zadatk ( funkcij """" nadjianton """" ) . njen povratn vrednost treba da bud pronađena reč suprotn značenja . test korektnost funkcij """" izracuna """" je dat u fajl main . cpp , u funkcij """" testirajizracuna """" ."
"implementacij pokretanj dodatn nit koj treba da pronađe reč suprotn značenja ( koristeći funkcij """" nadjianton """" ) recnik - Rečnik koj sadrži parov reč - reč suprotn značenja rec - Reč za koj se traži reč suprotn značenja povratn vrednost treba da bud reč suprotn značenja ( ak je pronađena )"
"LOGICKO_KOLO_H"
"implementacij xor operacij - treba da se korist ka funkcij nit a_pocetak - iterator na prv element vektor a koj se obrađuje a_kraj - iterator iz poslednjeg element vektor a koj se obrađuje b_pocetak - iterator na prv element vektor b koj se obrađuje rez - iterator u rezultujućem vektor - element počevši sa ov pozicij trebaju biti popunjen rezultat xor operacij"
"implementacij operacij xor nad ulazn vektor a i b izvršene uz pomoć dve nit ( svak nit obrađuje polovin ) a - vektor a ( 16 binarn cifar ) b - vektor b ( 16 binarn cifar ) rezulta izvršavanja treba da bud vector <int> koj sadrži rezulta izvršenja xor operacij nad ulazn vektor ."
"CENOVNIK_H"
"napravi konkurentan progra koj formir najbolj ponud cen od dva zadat cenovnik ( a i b ) . cenovnic se zada uz pomoć map kontejner , pr čemu ključ predstavlj naziv proizvod ( string ) a podatk je cen proizvod ( doubl ) . progra treba da podrazumev da ob cenovnik ( dve map ) sigurn sadrže ist proizvod ( svak proizvod se sigurn pojavljuj u ob ) . sam se de sa cen razlikuj . progra treba da u nov nit obav ispitivanj - da pronađe nižu od dve cen i da je ubac u rezultujući cenovnik . nebitn je u koj radnj je nađen proizvod , rezultujući cenovnik ( ka i dva ulazn ) sadrži sam naziv proizvod i cen . primer : ulazn cenovnik a : mlek = 85.50 svesk = 44.44 sampon = 140 kaf = 74.40 ulazn cenovnik b : mlek = 81.20 kaf = 79.90 sampon = 145.50 svesk = 40.33 izlazn cenovnik treba da izgled ovak : kaf : 74.40 mlek : 81.20 sampon : 140 svesk : 40.33 napomen : nebitn je koji redosled su prikazan proizvod na izlaz ( posledic korišćenja asocijativn kontejner u STL-u je da se gub redosled element ) . potrebn je implementir dve funkcij : 1 ) funkcij """" nadjipovoljn """" koj se nalaz u fajl cenovnik . h 2 ) funkcij """" izracuna """" koj se nalaz u fajl nit . h 1 ) ulaz u funkcij """" nadjipovoljn """" su map koj sadrže dva ulazn cenovnik ( a i b ) , ka i referenc na izlazn map ( koj funkcij treba da popun sa povoljn cen , prem prethodn opisan postupk ) . test korektnost funkcij """" nadjipovoljn """" je dat u fajl main . cpp , u funkcij """" testirajnadjipovoljn """" . 2 ) funkcij """" izracuna """" dobij dva parametr - dva ulazn cenovnik a i B. ov funkcij treba da pokren nov nit a za funkcij nit treba da se korist funkcij """" nadjipovoljn """" koj je realizovan u prv del zadatk . test korektnost funkcij """" izracuna """" je dat u main . cpp fajl , u funkcij """" testirajizracuna """" ."
"napravi konkurentan progra koj obračunava ukupn cen prilik kupovin više proizvod . da bi se ov izračunavanje mogl uradi neophodn je da postoj cenovnik , koj predstavlj map u koj je ključ naziv proizvod ( string ) a podatk je cen proizvod ( doubl ) . pored cenovnik , ulaz predstavlj list kupljen proizvod ( obavezn stl list ) koj sadrži naziv proizvod koj su kupljen . Obračunavanje ukupn cen vrši se tak što se prolaz kroz list kupljen proizvod , za svak se nalaz cen u cenovnik i taj iznos se dodaj na tekući zbir . jedan ist proizvod se može više put pojavljiva u list kupljen proizvod . primer : cenovnik : mlek = 85.50 sampon = 140 kaf = 74.40 list kupljen proizvod : { """" mlek """" , """" kaf """" , """" mlek """" } ukupan zbir : 245.40 potrebn je implementir dve funkcij : 1 ) funkcij """" obracunajukupn """" koj se nalaz u fajl obracun . h 2 ) funkcij """" izracuna """" koj se nalaz u fajl nit . h 1 ) ulaz u funkcij """" obracunajukupn """" su list kupljen proizvod i cenovnik , ka i referenc na br koj funkcij treba da popun ukupn cen svih kupljen proizvod . test korektnost funkcij """" obracunajukupn """" je dat u fajl main . cpp , u funkcij """" testirajobracunajukupn """" . 2 ) funkcij """" izracuna """" takođe ka parametr pr list kupljen proizvod i cenovnik . ov funkcij treba da pokren nov nit a za funkcij nit treba da se korist funkcij """" obracunajukupn """" koj je realizovan u prv del zadatk . test korektnost funkcij """" izracuna """" je dat u main . cpp fajl , u funkcij """" testirajizracuna """" ."
"Čeka da se mest oslobod"
"kad se mest oslobod"
"metod koj poziv nit koj simulir student u ambulant nakon sto je student pregledan i izlaz iz nje . rbr - redn br student p - pol student"
"mest se oslobađa"
"Obaveštava drug nit da se br ženskih mest promeni"
"modelova koriscenj zaletist na atletsk miting . ist zaletist korist dve disciplin : skok u dalj i bacanj koplj . zaletist ne mogu istovremen da korist dva takmicar . disciplin se naizmenicn smenjuj na zaletist ( jedan skakac u dalj , pa jedan bacac koplj i tak red ) . skok u dalj za jedn takmicar traj 1 sekund . bacanj koplj 2 sekund . metod skac poziv skakac u dalj . metod vrc duzin u metr kolik je takmicar skoci ( izmedj 0 i 9 metr moz skocit ) i kolik je ukupn treba vremen da zavrs skok ( kolik je zajedn traja cekanj i skakanj ) . metod bacikoplj poziv bacac koplj . metod vrc duzin u metr kolik je takmicar baci koplj ( izmedj 0 i 100 metr moz baci ) i kolik je ukupn treba vremen da zavrs bacanj koplj ( kolik je zajedn traja cekanj i bacanj koplj ) . implementir oznacen metod klas Atletska_staza u fajl staz . h"
"struktur koj opisuj povratn vrednost , duzin skok il bacanj i trajanj skok i bacanj u milisekund ."
"br bacača se smanjuj"
"metod koj poziv nit koj simulir skakac kak bi takmicar obavi skok . ukolik je zaletist zauzet , ov metod ce staja blokiran dok se on ne oslobod i takmicar obav nastup . rbr - redn br takmicar"
"potrebn je pozva metod takmicar . skakac_ceka kad skakac ne moz da stup na zaletist . potrebn je pozva metod takmicar . skakac_skace kad skakac stup na zaletist , pr skok . potrebn je pozva metod takmicar . skakac_zavrsio kad je skakac zavrsi i kad treba prikaza njegov rezulta ."
"Beleženje početka"
"br skakača se povećava"
"kad se oslobod počinje sa skakanj"
"staz se oslobađa i o tom se obaveštavaju drug nit"
"ak im bacača obaveštaavaju se da je staz prazn"
"br skakača se smanjuj"
"br bacača se povećava"
"Bacač čeka"
"rbr - redn br takmicar"
"ak nem knjig"
"kad se pojav primerak"
"potrebn je pozva metod primerak . vracen kad je primerak vracen u bibliotek ."
"i obaveštava drug nit o tom"
"rbr - redn br clan"
"rbr - redn br automobi"
"rbr - redn br automobi ulaz - ulaz na koj automobi pokusav da udj"
"metod koj poziv nit koj simulir kretanj automobi kad on pokusav da udj na parking . metod je blokirajuc - ukolik nem slobodn mest , izvrsenj je u blokad dok se on ne oslobod . rbr - redn br automobi ulaz - ulaz na koj automobi pokusav da udj"
"automobi čeka"
"kad se oslobpd mest , ulaz"
"rbr - redn br klijent salter - salter na koj ce klijent obavi uplat svot - svot koj klijent zel da uplat"
"rbr - redn br klijent salter - salter na koj ce klijent obavi uplat ukupno_uplaceno - ukupan sald na salter ( od svih dotadasnj uplat )"
"modelova salter sal u post u koj postoj 2 salter ."
"modelova salter sal u post u koj postoj 2 salter . vremensk trajanj uplat ( boravak klijent na salter ) je srazmern velicin uplat . za svak uplacen hiljad dinar klijent cek 1 sec . na salter se moz uplatit maksimaln 4 hiljad dinar . ( podrazumev se da je ispravn vrednost prosledjen klijent pr stvaranj nit ) . kad klijent zel da uplat sredstav , on poziv operacij uplat ( ) , cim prakticn ulaz u post i staj u red . povratn vrednost ov operacij je br salter na koj je klijent izvrsi uplat i svot koj je do tog trenutk na salter uplacen . implementir oznacen metod klas post u fajl post . h"
"metod koj poziv nit koj simulir klijent kad on uplacuj nek iznos . metod je blokirajuc - ak je salter zauzet , metod ce staja blokiran dok se on ne oslobod . rbr - redn br klijent svot - svot koj klijent zel da uplat"
"potrebn je pozva metod klijent . cek kad su salter zauzet i klijent mora da cek . potrebn je pozva metod klijent . uplacuj kad klijent stup na salter i vrs svoj placanj . potrebn je pozva metod klijent . napust kad klijent zavrs placanj i napust salter ."
"ukupn svot za dat red se povećava"
"izlaz iz red"
"zauzimanj racunar ( uz moguc cekanj )"
"simuliranj koriscenj racunar uspavljivanj nit"
"oslobadjanj racunar sa naveden broj"
"Znači da je računar slobodan"
"metod koj poziv nit koj simulir student kak bi student zauze mest za racunar . ov metod je blokirajuc - ak nem slobodn mest , on ce ceka dok se nek ne oslobod . rbr - redn br student"
"potrebn je pozva metod student . cek kad su racunar zauzet i student mora da cek . potrebn je pozva metod student . zauze kad student zauzm racunar ."
"br računara za koj student sed"
"kad se nek oslobod"
"metod koj poziv nit koj simulir student kak bi oslobodi racunar koj je prethodn zauze . rbr - redn br student id_racunara - redn br racunar kojeg student oslobadj ( prethodn je zauze taj racunar )"
"potrebn je pozva metod student . oslobodi kad student oslobod racunar ."
"Oslobađa računar i obaveštava drug nit o tom"
"rbr - redn br student id_racunara - redn br racunar kojeg student oslobadj ( prethodn je zauze taj racunar )"
"rbr - redn br kamion kolicin - kolicin rob koj se prevoz ( u ton ) zapaljiv - ukazuj na to da li je rob koj se prevoz zapaljiv ( takv rob im prioritet pr istovar ! )"
"rbr - redn br kamion"
"KAMION_H_INCLUDED"
"modelova skladist koj im dve identicn ramp za istovar rob iz kamion . nosivost kamion je maksimaln 7 ton . kamion nos obicn il zapaljiv rob . kamion sa zapaljiv rob im prednost pr istovar . kamion koj zel da ostav rob u skladist poziv operacij istovar ( ) . kamion cek ispred skadist dok jedn od ramp ne postan slobodn . istovar traj onolik sekund kolik u kamion im ton rob . operacij istovar ( ) vrc pozivaoc informacij o tom na koj ramp je kamion istovaren ."
"nosivost kamion je maksimaln 7 ton . kamion nos obicn il zapaljiv rob . kamion sa zapaljiv rob im prednost pr istovar . kamion koj zel da ostav rob u skladist poziv operacij istovar ( ) . kamion cek ispred skadist dok jedn od ramp ne postan slobodn . istovar traj onolik sekund kolik u kamion im ton rob . operacij istovar ( ) vrc pozivaoc informacij o tom na koj ramp je kamion istovaren . implementir oznacen metod klas skladist u fajl skladist . h"
"istovar rob ( uz moguc cekanj ak ispred im drug kamion ) ."
"potrebn je pozva metod kamion . cek kad su ramp zauzet i kamion mora da cek . potrebn je pozva metod kamion . istovar kad zapocn istovar rob iz kamion . potrebn je pozva metod kamion . odlaz kad je kamion zavrsi istovar i odlaz ."
"ulaz sam ak je količina rob manj od 7"
"ak ne može proći"
"ak je bio zapaljiv br se smanjuj"
"rbr - redn br kupc pv - rezulta kupovin"
"rbr - redn br kupc"
"metod koj poziv nit koj simulir kupc , kad kupac obavlj soping ( procedur je opisan u zaglavlj main . cpp ) metod je blokirajuc - ak kupac mora da cek da se oslobod kabin za prob , izvrsenj ce blokir dok se za to ne stekn uslov . rbr - redn br kupc"
"modelova prv kol tenisk turnir koj se odrzav u tenisk klub sa n teren . svak teren im svoj br ( brojev su od 1 do 12 ) . na teren se igraj tenisk mecev prv kol tenisk turnir . u prv kol ucestvuj x takmicar , tak da im m = x / 2 tenisk mec . za svak mec u start se definis na koj teren ce biti odigran . raspored mecev po teren prav se tak da se mecev ravnomern raspored po teren . znac , na svak teren se u prosek igraj n / m mec . svak mec im svoj identifikator ( br ) . svak mec traj slucajan vremensk period izmedj 1 i 5 sekund . naredn mec na teren ne moz da pocn dok se prethodn mec na tom teren ne zavrs . za svak mec potrebn je evidentir trenutk kad je mec poce i kolik je mec traja . implementir oznacen metod klas Teniski_klub u fajl teniski_klub . h"
"nit mec . prosledjuj se br mec i na kom teren se igr ."
"svi mecev se ciklicn rasporedjuj na teren 1,2 i 3."
"rbr - redn br mec p - podac o mec"
"rbr - redn br mec teren - indeks teren na koj mec treba da se odigr"
"podac o mec . br mec , trajanj i trenuc dolask i pocetk ."
"klas deljen resurs . prav se maksimaln 30 teren , al ce u realnost biti sam 3 teren ."
"metod koj poziv nit koj simulir mec kak bi izvrsi tenisk mec . metod je blokirajuc - ak je zeljen teren zauzet , izvrsenj ce blokir dok se on ne oslobod . broj_meca - redn br mec na_terenu - indeks teren na koj mec treba da se odigr"
"ak je teren zauzet"
"rbr - redn br kupc kas - kas ( redn br ) na koj kupac cek da obav kupovin"
"modelova placanj rob u trzn centr . u trzn centr postoj 2 kas za placanj . kupac pr placanj staj u red na on kas na koj cek manj br kupac . kupac vrs placanj poziv metod kup ( ) koj ka parametar dobij br artika koj kupac plac . placanj rob traj onolik sekund kolik im artika . povratn vrednost metod je identifikator kas na koj je placanj izvrsen . implementir oznacen metod klas Trzni_centar u fajl trzni_centar . h"
"ukolik je kas zauzet"
"kupac čeka"
"nakon što završi kupovin"
"unos brojev"
"Pronalaženje maksimaln element"
"dodavanj nov string u vektor"
"napisa progra koj omogucuj evidencij fakultetsk ucionic . za svak ucionic potrebn je evidentir naziv ucionic , kvadratur i racunar koj se nalaz u ucionic . za svak racunar evidentiraj se podac o hard disk i procesor . u okvir main funkcij , definisa jedn ucionic koj sadrz dva racunar . zat je potrebn na konzol ispisa hard disk i procesor svak racunar u ucionic ."
"map - kljuc je englesk rec , a vrednost srpsk"
"uciravanj"
"unet 5 cel brojev sa standardn ulaz . koriscenj stl algoritm sortir brojev u opadajuc redosled"
"komparator za sort funkcij"
"unos 5 brojev"
"dodavanj u vektor"
"napravi funkcij : vector <int> min ( const vector <int> & a , const vector <int> & b ) ; ov funkcij vrc vektor koj sadrz minimum korespodentn element vetor a i b. npr : r [ 0 ] = min ( a [ 0 ] , b [ 0 ] ) , r [ 1 ] = . podrazumev se : a. siz ( ) == b. siz ( )"
"Učitavanje"
"Učitavanje vektor a"
"napravi funkcij : vector <int> min_n ( const vector <int> & v , int n ) ; ov funkcij vrc vektor koj sadrz n najmanj element iz vektor v. podrazumev se : v. siz ( ) > = n"
"Pomoćni vektor"
"sortiranj pomoćnog vektor"
"Učitavanje dužine"
"kreiranj vektor"
"Učitavanje vektor"
"Učitavanje broj minimum"
"poziv funkcij"
"napravi konkurentn progra koj stvar nit iz koj : pit korisnik za visin u centimetr i ispisuj : “ vas visin je <uneta_visina> cm. ” testir progra tak sto ce se nit prevest iz stanj joinabl prv operacij join a nakon tog detach ."
"join - čeka da se nit završi"
"t. detach ( ) ;"
"napravi konkurentn progra koj pokrec vis nit u petlj . svak nit prosledi njen redn br prilik kreiranj i svak nit treba da ispis dat br u okvir tel nit ."
"inicijalizacij svh nit"
"Čekanje da se sve nit izvrše"
"napravi progra koj kreir jedn nit i u okvir nit ispisuj proizvoljn recenic"
"Čekanje da se nit završi"
"definisa funkcij : void increment ( int & a ) ; koj povećava ( za jedan ) vrednost argument . napravi progra koj : a ) poziv funkcij increment ( ) b ) stvar nit od funkcij increment ( )"
"funkcij koj inkrementir prosleđeni parametar"
"Obično pozivanj funkcij"
"pozivanj funkcij iz nit ref ( ) - operator referenc , obavezan ak rezulta treba da se sačuva"
"napravi konkurentn progra koj izračunava sum svih element vektor , koristeći funkcij f ( ) : typedef vector <double> :: const_iterator ci ; void f ( ci pocetk , ci kraj , doubl & zbir ) ; funkcij f nalaz se u fajl suma_vektora . cpp . potrebn je implementir i funkcij sumiraj ( fajl vise_niti . cpp ) koj treba da pokren dve nit i da svak nit prosled polovin element ulazn vektor . ob nit treba da korist funkcij f kak bi izračunale sum svog del vektor . napomen : ovakv optimizacij sumiranj je značajna kad se rad na dvojezgarn procesor za vektor velik dužine ."
"promenljiv za čuvanje rezultat"
"iterator"
"pozivanj nit"
"Čekanje da se nit završe"
"v - vektor cij element treba sumir povratn vrednost - sum svih element vektor , izracunat pokretanj 2 nit ( svak treba da obrad jedn polovin element )"
"napravi konkurentn progra koj izračunava sum svih element vektor , koristeći funkcij f ( ) : typedef vector <double> :: const_iterator ci ; void f ( ci pocetk , ci kraj , doubl & zbir ) ; funkcij f nalaz se u fajl suma_vektora . cpp . pr tom , """" ci """" je definicij tip koj služi tom da se kraće zapisuj tip vector <double> :: const_iterator . funkcij nem povratn vrednost jer se rezulta prosleđuje kroz parametar """" zbir """" . potrebn je implementir i funkcij sumiraj ( fajl vise_niti . cpp ) koj treba da pokren više nit i da svak nit prosled jedan de element ulazn vektor . sve nit treba da korist funkcij f kak bi izračunale sum svog del vektor . podeli računanje sum na n delov tak da svak nit dobij relativn jednak br element . taj br element treba da bud jednak : broj_elemenata_ulaza / N. poslednj nit može dobi i nešto veći br element na obrad u slučaju da ov dva broj nis deljiv . na primer : 1. 12 element ulaz i 4 nit 12 / 4 = 3 -> 3 element ulaz se prosleđuju svak nit 2. 12 element ulaz i 5 nit 12 / 5 = 2 ( celobrojn deljenj brojev odbacuj de broj iz decimaln zarez ) 2 element se prosleđuju nit 0 , 1 , 2 i 3. nit br 4 dobij preosta 4 element ."
"v - vektor cij element treba sumir n - kolik nit treba pokren povratn vrednost - sum svih element vektor , izracunat pokretanj n nit ( svak nit treba da obrad jedan de element )"
"napravi konkurentn progra ( koristeći funkcij f ()) koj sabir korespondentn element kontejner a i b , a rezulta smešta u vektor zbir . typedef vector <double> :: const_iterator ci ; void f ( ci a_begin , ci a_end , ci b_begin , vector <double> :: iterator sum_begin ) ; funkcij f implementir u fajl suma_vektora . cpp . rezulta se upisuj korišćenjem iterator sum_begin . zat je neophodn da vektor nad koji je kreiran taj iterator bud kreiran pr poziv funkcij f. taj vektor mora da sadrži dovoljn mest za upis svih element . funkcij sumiraj implementir u fajl vise_niti . cpp . ov funkcij treba da pokren dve nit koj će , koristeći funkcij f , da izračunaju korespondentn sum vektor . i to tak da svak nit obrad svoj polovin element ( prv nit prv polovin , drug nit drug polovin ) . progra optimizova za procesor sa 2 jezgr . napomen : podrazumev se da su kontejner a i b ist dužine . sabiranj korespodentn element je sabiranj matric ( vektor ) ."
"funkcij nit . funkcij preuz sledec parametr : 1 ) ci a_begin -> iterator na pocetk del vektor a 2 ) ci a_end -> iterator na kraj del vektor a ( dovoljn je sam jedan kraj ) 3 ) ci b_begin -> iterator na pocetk del vektor b 4 ) vector <double> :: iterator sum_begin -> iterator na pocetk del vektor sum"
"vektor parcijaln sum"
"kreiranj iterator"
"maksimaln vrem cekanj"
"maksimaln br ljud u red"
"funkcij koj simulir cekanj u red sa n kupac"
"uzimanj vremen pr početka izvršavanja"
"simuliranj čekanja"
"uzimanj vremen nakon završetka izvršavanja"
"ukupn čekanje"
"simulacij čekanja"
"Pronalaženje red u koj se najduže čekalo"
"Pronalaženje maksimum"
"napravi konkurentn progra koj pronalaz element najbliz 0 iz zadat vektor brojev . posa podeli u 3 nit . vektor treba da sadrz 90 element . element su pseudoslucajn brojev dobijen poziv funkcij rand ( ) . za svak nit , evidentir trenutk kad je izvrsavanj pocel i kad je zavrsi . na kraj program , ispisa kolik je traja izvrsavanj svak nit u milisekund ."
"br element niz"
"br nit"
"funkcij koj traži minimum"
"Traženje minimum"
"ukupn trajanj je razlik vremen kraj i početka"
"popunjavanj vektor slučajnim brojev"
"potrebn nit"
"Traženje minimum dobijen minimum"
"ispis vremen trajanj"
"prosiri zadatk najbilzi_nuli_vreme . cpp ispis u sekund i minut ."
"dat je klas brojc . u main funkcij napravi objekt klas brojc . ispis vrednost brojc rad posebn nit . napravi nit koj vrs ispis i prosledi joj brojc ."
"propusnic pripad klas i obezbedjuj sprecavanj stetn preplitanj pr vrsenj operacij nad objekt klas vrednost brojc"
"inicijaln je brojc nul"
"operacij povecav brojc , al pr tog zakljucav propusnic i na taj nacin sprecav stetn preplitanj pr izmen brojc"
"operacij smanjuj brojc , al pr tog zakljucav propusnic i na taj nacin sprecav stetn preplitanj pr izmen brojc"
"preklopljen operator za ispis objekt klas brojc . ispisuj se atribut """" br """" iz objekt"
"pr pristup broj , zakljucav se propusnic da bi se spreci stetn preplitanj"
"pozivanj nov nit"
"funkcij koj inkrementir brojač iteracij put"
"pozivanj funkcij iz različitih nit"
"dobijen rezulta nij nul zbog štetnog preplitanj koj se desi između"
"izmeni progra data_race . cpp i realizova zaštitu pristup brojaču uz pomoć klas mutex i njen operacij lock ( ) i unlock ( ) . primeti kolik sad traj izvršavanje program ."
"mutex za zaštitu brojača"
"dobijen rezulta jeste nul , al se vrem izvšavanja drastično povećalo"
"2 mutex"
"funck koj prebacuj iznos sa izvorn na ciljn račun"
"Zaključavanje resurs klas unique_lock"
"star vrednost se čuva"
"Povećanje računa za dat vrednost"
"sumiranj svih računa"
"inicijalizacij računa"
"ispisuj početno stanj bank"
"nit koj će vršiti transfer"
"ispisuj krajnj stanj bank"
"napravi konkurentn progra koj u funkcij visin pit korisnik kolik je visok . nakon tog korisnik unos svoj visin . na kraj u funkcij se ispisuj unet visin . kreir 2 nit od dat funkcij . ispratit ispis ."
"funkcij ko učitava visin , a zat je ispisuj"
"Onemogućava višestruki pristup resurs"
"ukolik je m već zaključan izvršavanje se neće nastavi sve dok se m ponov ne otključa"
"Omogućava drug nit koj su pozva m. lock ( ) da zaključcaju m i nastav sa izvršavanjem"
"konstant koj govor kolik nit se cek na zavrsetk pr neg sto se aktivir poslednj ."
"metod koj na svom kraj zov nit ( a i b ) koj ne ceka ( izvrsava se odma ) ."
"Obaveštava drug nit da se stanj promeni"
"napravi konkurentn progra sa tr nit . nit a ispisuj : ja sam nit a. nit b ispisuj : ja sam nit b. nit c ispisuj : ja sam nit c. obezbedi da se nit a i b , uvek izvrs pr nit c. implementir oznacen metod u klas koordinator u fajl koordinator . h"
"Obaveštava drug nit da se završio"
"blokirajuc funkcij koj se poziv na pocetk drug nit kak bi nit ceka dok se prv nit ne zavrs ."
"Čeka dok se a ne izrši"
"napravi konkurentn progra sa dve nit . nit a ispisuj : ja sam nit a. nit b ispisuj : ja sam nit b. obezbedi da se uvek izvrs prv nit a. implementir oznacen metod u klas koordinator u fajl koordinator . h"
"globaln objekt koordinator ( kak bi mu pristupa ob nit ) ."
"tel nit a."
"metod koj poziv nit koj simulir klijent bank , kad klijent zatraz kredi od bank . ukolik bank nem odgovarajuc sredstv kak bi omoguci kredi , metod ce blokir dok se ta sredstv ne oslobod . rbr - redn br klijent svot - novcan iznos koj je potreban klijent valut - valut u koj je novcan iznos"
"metod koj poziv nit koj simulir klijent bank , kad klijent vra kredi koj je prethodn uze od bank . rbr - redn br klijent svot - novcan iznos koj je potreban klijent valut - valut u koj je novcan iznos"
"Vraćanje sredstav"
"rbr - redn br klijent svot - novcan iznos koj je potreban klijent sald - ukupn raspoloziv sredstv u banc za trazen valut ( nakon odobrenj kredit ) valut - valut u koj je novcan iznos"
"rbr - redn br klijent svot - novcan iznos koj je potreban klijent sald - ukupn raspoloziv sredstv u banc za trazen valut ( nakon sto je iznos kredit vracen ) valut - valut u koj je novcan iznos"
"klijent korist pozajmljen novc"
"tipov valut"
"definisa klas parking koj modeluj parking prostor kapacitet jedn mest . ov klas im operacij : void parking :: udj ( ) ; void parking :: izadj ( ) ; automobi koj dolaz na parking su predstavljen nit . za ulazak na parking , automobi poziv metod udj ( ) . za izlazak sa parking , automobi poziv metod izadj ( ) . automobi se na parking zadrzav 3 sekund . pr ulask , ukolik je parking zauzet , automobi mora da sacek da se parking oslobod ."
"void parking :: udj ( ) ; void parking :: izadj ( ) ;"
"metod koj poziv nit koj simulir kretanj automobi kak bi automobi pokusa da se parkir . ak je parking zauzet , izvrsenj ov metod ce traja dok se parking ne oslobod i aut se parkir . rbr - redn br automobi"
"ukolik nem prazn mest"
"Čeka dok se mest ne oslobod"
"kad se oslobod"
"Obaveštava drug nit da se parking oslobodion"
"definisa klas parking koj modeluj parking prostor kapacitet n mest . kapacitet parking prosledi ka argument konstruktor , pr instanciranj deljen promenljiv . ov klas im operacij : void parking :: udj ( ) ; void parking :: izadj ( ) ; automobi koj dolaz na parking su predstavljen nit . za ulazak na parking , automobi poziv metod udj ( ) . za izlazak sa parking , automobi poziv metod izadj ( ) . automobi se na parking zadrzav od 1 do 3 sekund . pr ulask , ukolik je parking zauzet , automobi mora da sacek da se nek parking mest oslobod ."
"id - id proces br_naredbi - br naredb koj proces treba da izvrs"
"metod koj se tic obradjivc u / i prekid"
"funkcij nit koj simulir izvrsenj proces"
"funkcij nit koj simulir ulazn / izlazn podsist"
"pokretanj nit koj simulir ulazn / izlazn podsist :"
"pokretanj nit koj simuliraj proces :"
"Pomoćna metod koj vraća referenc na objekt dijagnostik asociran sa ov objekt"
"ukolik je procesor već zauzet i ne mogu se izvršavati naredb proces , potrebn je pozva metod dijagnostik . proces_ceka a nakon tog proces treba da pređe u stanj čekanja . kad proces usp da zauzm procesor , pr izvršenja naredb treba da se pozov dijagnostik . proces_izvrsava . nakon što je proces izvršio naredb , potrebn je pozva dijagnostik . proces_zavrsio ."
"ukolik je procesor zauzet"
"Šalje se na čekanje"
"Početak izvršavanja"
"Izvršavanje"
"kraj izvršavanja"
"cooldown perion"
"ukolik je procesor već zauzet i ne može se obavi obrađivanje prekid , potrebn je pozva metod dijagnostik . obradjivac_ceka a nakon tog obrađivač treba da pređe u stanj čekanja , dok se procesor ne oslobod . kad obrađivač usp da zauzm procesor , pr obrad prekid treba da se pozov dijagnostik . obradjivac_izvrsava . nakon što je obrađivač završio obrad , potrebn je pozva dijagnostik . obradjivac_zavrsio ."
"id - id proces adres - adres na koj je pokušan upis"
"napisa konkurentn progra koj modeluj pristupanj više proces deljen memorij . deljen memorij je predstavljen klas memorij . prilik instanciranj se zadaj veličina memorij ( ukupan br lokacij koj postoj u memorij ) . upis vrednost u memorij se obavlj poziv operacij memorij . pis , a čitanje poziv operacij memorij . cita . i čitanje i upis svak vrednost traj po 1 sekund . ov dve metod ka parametar prihvata memorijsk lokacij ( on je izražena u bajt / karakter ) . intern , sve lokacij koj čine memorij mogu se predstavi karakter ( tip char ) . iak metod memorij . pis i memorij . cita memorij adresiraj po lokacij , intern pristup pojedinačnoj lokacij u klas memorij pogađa cel memorijsk reč koj lokacij pripad . Veličina memorijsk reči je 4 bajt , tak da npr ak je zahtevan pristup lokacij 0 i 3 , to je pristup prv memorijsk reči koj ob ov lokacij pripada . tok upis u memorijsk lokacij ekskluzivn se zaključava cel memorijsk reč koj ta lokacij ( bajt ) pripad . dakl , operacij upis ne dozvoljav da paraleln sa njom teče bilo koj drug operacij ( čitanje il nek drug upis u ist memorijsk reč ) . tok čitanja memorijsk lokacij reč koj ta lokacij ( bajt ) pripad se može istovremen čitati iz drug nit . treba omogućiti istovremen pristupanj memorijsk lokacij koj ne pripada ist reči . ak istovremen postoj i proces koj žele da čitaju i proces koj žele da pišu u ist memorijsk reč , prv treba proces koj čitaju da dobij pristup . implementir označene metod , konstruktor i doda privatn članove u klas memorij ( fajl memorij . h ) ."
"Četiri nit upisuj vrednost W. z u adres koj pripada različitim memorijsk rečima . prem uslov zadatk , ov upis treba da se obav istovremen :"
"tip pristup memorij"
"adres koj se pristup"
"vrednost koj se upisuj ( sam ak je tip pristup upis u memorij )"
"funkcij koj korist nit koj simuliraj proces koj pristupa memorij :"
"Četiri nit upisuj vrednost A. d u četiri adres prv memorijsk reči . prem uslov zadatk , ov upis treba da se obav jedan za drug ( iak su nit pokrenut istovremen ) :"
"Četiri upis , jedan za drug , trajaće nešto više od 4 sekund ."
"nakon 3.5 s istovremen se pokreće 8 nit . namern se pokreću dok prethodn grup nit nij skroz završila , kak bi sve nit pokušale pristup memorij dok je memorij još zauzet prethodn operacij . prv 4 nit pokušavaju da vrše upis u prv četiri lokacij . drug 4 nit pokušavaju da vrše čitanje iz tih lokacij . prem uslov zadatk , treba bi da važi sledeće : 1. prednost će imat nit koj vrše čitanje , tak da će se očitati vrednost A. D. 2. nit koj vrše čitanje će istovremen izvršiti sva čitanja . 3. nakon njih startuj nit koj vrše upis i on moraju da se izvršavaju jedn po jedn ."
"pisanj"
"ukolik im čitača na čekanju"
"pristup * , a ne pristup zat sto condition_variable ne može da se kopir"
"br reči ( 4 bajt = jedn reč )"
"ubacivanj reči u vektor"
"metod koj poziv nit koj simulir proces koj pristup memorij kak bi obavi čitanje iz nje rbp - redn br proces adres - lokacij sa koj se čita vrednost prethodn upisan u memorij"
"potrebn je pozva dijagnostik . proces_ceka_citanje kad je memorijsk reč zaključana i proces mora da čeka . potrebn je pozva dijagnostik . proces_procitao ond kad je ostvaren pristup memorij i kad je vrednost učitana iz nje ."
"ukolik je upis u tok"
"kad dođe na red br čitača se smanjuj"
"Čitanje"
"kraj čitanja"
"metod koj poziv nit koj simulir proces koj pristup memorij kak bi obavi upis u nju rbp - redn br proces adres - lokacij u koj se upisuj nov vrednost vrednost - vrednost koj se upisuj u memorij"
"metod koj se odnos na simulacij proces"
"id - id proces"
"metod koj se odnos na simulacij u / i podsistem :"
"id_procesa - id proces čiji se zahtev obrađuje"
"id_procesa - id proces čiji je zahtev obrađen"
"napisa konkurentn progra koj modeluj izvršavanje proces u multiprogramiran jednoprocesorsk okruženju . proces su predstavljen nit . svak proces im skup instrukcij koj treba da izvrši , pr čemu postoj dva tip instrukcij : standard ( instrukcij zahtev određeno izračunavanje od procesor ) i ui ( zahtev za operacij ulazn / izlazn uređaja ) . u ov zadatk , smer komunikacij sa ui uređajem je takav da proces inicir ui operacij i prit ostaj blokiran dok se ta operacij ne završi . procesor je incijaln slobodan i zauz ga prv proces koj do njeg dođe i pokuša da izvrši instrukcij . sled opis obrad standard i ui instrukcij . opis obrad standard instrukcij : u sistem je definisan maksimaln br od 3 standard instrukcij koj proces koj je zauze procesor može uzastopn da izvrši . nakon što izvrši 3 standard instrukcij , proces prelaz u stanj spreman a drug proces iz list spremn dobij procesor . na ova način na procesor se vrši preključivanje između različitih proces i omogućava se ravnomern raspodel procesorsk vremen . pr preključivanju nakon 3 standard instrukcij treba vodi računa da se obezbed mehanizm da proces koj oslobađa procesor ( a koj im još preostali instrukcij za izvršavanje ) ne pokuša da zauzm procesor odma nakon puštanja . ov se postiže uvođenjem cooldown period od 100 ms . iz list spremn proces , naredn proces za izvršavanje se bir bez određenog pravi . bilo koj od spremn proces prelaz u izvršavanje . ukolik nek proces nem više instrukcij , on završava svoj rad i prepušta procesor nek od proces iz list spremn proces . Izvršavanje standard instrukcij traj slučajan vremensk period između 10 i 50 ms čime se npr. simulir aritmetičko-logička operacij na procesor . opis obrad ui instrukcij : ui instrukcij predstavlja zahtev za operacij ulazn izlazn uređaja i njih obrađuje ui podsist ( prek nit ui_podsistem ) . ui podsist red opslužuje pristigl zahtev ukolik takv zahtev postoj . ak proces izvršava ui instrukcij on šalje zahtev ui podsistem i odlaz u stanj čekanja rad završetka obrad ui zahtev . u čekanju proces otpušta procesor ( tok čekanja na ui obrad nem smisl da se drži procesor ak drug proces mogu da ga korist ) i tad bilo koj drug proces iz list spremn proces dobij procesor . ui instrukcij takođe prekid niz standard instrukcij što znac da se br prethodn izvršenih standard instrukcij za dat proces prilik nailask na ui instrukcij resetuj na 0. kad ui podsist obrad zahtev , proces koj je čekao obrad zahtev može da odma postan aktivn ( ukolik je procesor slobodan ) il se uvezuj u list spremn proces ( ukolik procesor korist nek drug proces ) . operacij ui uređaja traj slučajan period između 100 i 300 ms . implementir označene metod , konstruktor i doda privatn članove u klas os ( fajl os . h ) ."
"9:1 šanse da će biti standard instrukcij"
"kreiranj nit koj simulir u / i podsist :"
"kreiranj nit koj simuliraj proces :"
"metod koj poziv nit koj simulir obrađivač u / i zahtev kak bi se obradi trenutn pohranjen u / i zahtev ."
"potrebn je pozva dijagnostik . ui_ceka kad ne postoj trenutn pohranjen u / i zahtev i obrađivač čeka na prv . potrebn je pozva dijagnostik . ui_zapocinje kad obrađivač kren u obrad u / i zahtev . kad obrađivač završi taj zahtev , potrebn je pozva dijagnostik . ui_zavrsio ."
"ak nem zahtev id na čekanje"
"obrad"
"kraj obrad"
"red zahtev ( mora zahtev * , a ne zahtev zat što condition_variable ne može da se kopir )"
"metod koj poziv nit koj simulir proces kak bi se izvršile sve instrukcij proces . p - struktur koj sadrži opis proces ( id proces i instrukcij koj treba izvršiti )"
"ukolik proces ne može da se izvrši ( procesor je zauzet ) , proces mora da se uveže u red spremn i treba pozva metod dijagnostik . proces_ceka . ukolik dođe do tog da izvršenje proces presta ( dostign je maksimaln dozvoljen br uzastopn standard instrukcij il su sve instrukcij proces izvršene ) , potrebn je pozva dijagnostik . proces_oslobadja_procesor . kad se izvrši standard instrukcij nek proces , potrebn je pozva dijagnostik . proces_izvrsio_standardnu . kad se izvršava ui instrukcij , potrebn je pozva par metod : dijagnostik . proces_ceka_na_UI kad se pokren u / i operacij ( nakon čega sled čekanje na u / i podsist ) i dijagnostik . proces_zavrsio_UI kad se završi u / i operacij ."
"br izvršenih instrukcij"
"id na čekanje"
"zauzimanj procesor"
"ukolik je izvršeno maksimaln dozvoljen naredb il nem više instrukcij"
"Oslobađa se procesor"
"Obaveštava se sledeći proces"
"cooldown period"
"Čekanje da se zahtev obrad"
"proces id na čekanje i sledeći spreman se obaveštava"
"tip instrukcij :"
"id_procesa - id proces koj je učitan i kreće u izvršenje"
"ukupan br okvir u radn memorij"
"ukupan br proces koj se izvršavaju"
"dijagnostik - referenc na instanc klas dijagnostik ukupno_okvira - ukupan br okvir u memorij"
"metod koj poziv nit koj simulir izvršenje proces kak bi pokušala da učita proces u radn memorij broj_stranica - ukupan br stranic koj proces sadrži id_procesa - identifikator proces"
"kad im radn memorij"
"zauz slobon lokacij dok ih ne zauzm dovoljn"
"id_procesa - id proces koj čeka"
"id_procesa - id proces koj se pokreće br_lokacija - br memorijsk lokacij neophodn proces za rad"
"id_procesa - id proces koj je zauze okvir pocetk - prv okvir memorij koj je zauzet kraj - poslednj okvir memorij koj je zauzet"
"funkcij nit koj simulir servis operativn sistem koj se bav sažimanjem memorijsk lokacij :"
"scenari je napravljen tak da proces 5 ne bi mog da se ubac u memorij da ne postoj sažimanje memorijsk lokacij :"
"Traži prv de memorij koj nij ničiji"
"id dok ne nalet na prv zauzet okvir il kraj"
"Obaveštava da je završio sa sažimanjem"
"ukolik trenutn nem na raspolaganj dovoljn slobodn memorij ( moraju se zauzet uzastopn okvir u memorij ! ) , potrebn je pozva metod dijagnostik . proces_ceka a nakon tog proces treba da čeka dok se memorij ne oslobod . kad proces usp da dođe do potrebn radn memorij , treba da se pozov dijagnostik . proces_zauzeo_okvire . kad se proces završi , potrebn je pozva metod dijagnostik . proces_zavrsio . metod dijagnostik . ispisi_memoriju potrebn je pozva u sledećim moment : nakon što proces zauzm memorij i nakon što proces oslobod memorij ."
"ukolik nem dovoljn okvir proces čeka"
"potrag za prv slobodn mest i zauzimanj"
"kraj zauzimanj"
"Oslobađanje"
"ukolik je već sažeta"
"proces sažimanja"
"n - naredb koj je potrebn ispisa u string Vraća string koj sadrži opis naredb"
"n - naredb koj je izvršena slobodno_ram - kolik ram memorij je osta slobodn nakon izvršenja naredb zauzeto_vm - kolik vm je zauzet do sad ( ukupn , ne sam ov naredb )"
"funkcij koj korist nit koj simulir servis operativn sistem za zauzimanj ( alokacij ) virtueln memorij :"
"im 100 mb ram memorij"
"struktur koj modeluj 2 tip naredb - il malloc il repeat"
"struktur koj vraća progra nakon pokušaja zauzimanj memorij"
"ak im dovoljn memorij"
"zauz ram"
"pozov se zauzimanj virtueln"
"lock i unlock ne smej da postoj"
"prover tip naredb"
"Vraćanje vrednos"
"Završavanje i obaveštavanje drug nit"
"ubacivanj nov par ključ-vrednost u map ( ključ je privezak , vrednost je cv_data )"
"kad se ispuni uslov , briše se cv_data iz memorij ka i pair struktur iz map ."
"prolaz se kroz map i traži se ključ ( privezak ) kad se nađe privezak , polj fulfilled cv_data struktur ( vrednost ) se postavlj na tru . Obaveštava se nit koj čeka na dat cv_data ."
"notifikacij svih na cv sa privesc , prolaz se kroz map svih i obaveštavaju se jedan po jedan :"
"destruktor map , brišu se sve vrednost jer su dinamički genreisan ( vid metod wait ) :"
"klas cv_tag simulir condition varijabl sa privesc gde je moguće obaveštavati nit po izabran privesk"
"stvaraj se zasebn cv za svak nov čekanje . ov cv se nalaz u cv_data struktur ."
"map prethodn opisan struktur kak bi se mogl stavlja i brisa iz map sa proizvoljn mest"
"id_procesa - id proces koj mora da čeka kak bi se procesor oslobodi"
"id_procesa - id proces koj je izvršio naredb naredb - indeks naredb koj je uprav zavrsen sledeci_proces - id proces koj će se sledeći izvršavati"
"napisa konkurentn progra koj simulir lutrijsk raspoređivač u jednoprocesorsk sistem . proces su predstavljen nit . da bi se izvršili poziva metod """" izvrs """" deljen promenljiv tip rasporedjivc . svak proces sadrži određeni br naredb . naredb se izvršavaju jedn po jedn . za svak naredb , proces mora da sačeka da procesor bud slobodan . Izvršavanje jedn naredb traj 300 ms . nakon izvršavanja naredb , proces odlaz u stanj spreman , a drug spreman proces dobij procesor . lutrijsk raspoređivač se zasniv na tom da je svak proces inicijaln dodeljen određeni br tiket . pr izbor sledećeg proces za izvršavanje , na slučajan način se bir jedan tiket . proces koj je dodeljen taj tiket postaj aktivn . dodel različitog broj tiket proces se implicitn uspostavlja priroritet među njim , obzir da proces sa većim broj tiket im veće šanse da bud izabran ."
"na slučajan način se dodeljuj određeni br tiket proces :"
"bilo koj slobodan tiket"
"ova tiket je dodeljen pa se izbacuj ( ne sme biti dupliran tiket )"
"ukolik je procesor već zauzet i ne mogu se izvršavati naredb proces , potrebn je pozva metod dijagnostik . proces_ceka a nakon tog proces treba da pređe u stanj čekanja . nakon što je proces izvršio naredb , potrebn je pozva dijagnostik . izvrsio_naredbu ."
"mapiranj svih tiket na dat proces"
"ukolik procesor pripad drug proces"
"Izvrši se"
"izbacuj se svi njegov tiket iz map"
"biranj sledećeg proces na osnov izvlačenja tiket"
"Buđenje proces čiji je tiket izabran"
"ukolik nem tiket"
"funkcij koj izvršavaju nit koj simuliraj izvršenje proces :"
"funkcij nit koj izvršava nit koj simulir raspoređivač operativn sistem :"
"metod koj poziv nit koj simulir raspoređivač operativn sistem , kak bi se izabra sledeći proces za izvršenje ."
"ukolik još uvek ne postoj potreb da se raspoređivač aktivir , potrebn je pozva metod dijagnostik . rasporedjivac_ceka a nakon tog nit treba da pređe u stanj čekanja . nakon što se raspoređivač aktivir i izabra sledeći proces , potrebn je pozva dijagnostik . rasporedjivac_izvrsio ."
"ukolik im proces"
"pokretanj proces"
"skidanj struktur sa vrh red ( fif ) , i brisanj struktur iz memorij"
"metod ogranicen cekanj na cv_hrono funkcionis veom slicn ka metod wait , sa tim sto ak se des timeout prekid se cekanj"
"funkcionis veom slicn ka metod wait , sa tim sto ak se des timeout prekid se cekanj"
"stvar se nov struktur cv_pair kad se ulaz u wait ov struktur se stavlj na kraj red ccv ( fif ) na ov struktur se cek dok se bool fulfilled ne postav na tru i tek tad se izlaz iz cekanj"
"metod notifikacij na cv_hrono"
"ukolik nem nik u cekanj vrc se fals"
"ukolik im nek , uz se prv iz red cekanj ( fif ) i obavestav se"
"klas cv_hrono simulir hronolosk condition_variablu tj. fif cv da bi se ov omoguci stvaraj se zasebn cv za svak nov cekanj ov cv se nalaz u cv_pair struktur"
"doubl ended queu dequ prethodn opisan struktur kak bi se mogl stavlja na kraj i brisa sa pocetk ( fif )"
"id_procesa - id proces koj je uprav kreiran broj_naredbi - br naredb koj proces treba da izvrši"
"napisa konkurentn progra koj simulir raspoređivanje po algoritm povratn spreg u jednoprocesorsk sistem . proces su predstavljen nit . da bi se izvršili poziva metod """" izvrs """" deljen promenljiv tip rasporedjivc . svak proces sadrži određeni br naredb . naredb se izvršavaju jedn po jedn . za svak naredb , proces mora da sačeka da procesor bud slobodan . Izvršavanje jedn naredb traj 300 ms . nakon izvršavanja naredb , proces odlaz u stanj spreman , a drug spreman proces dobij procesor . proces su klasifikovan prem prioritet . 0 je najviši prioritet dok je n najmanj ! za svak prioritet , postoj odvojen red čekanja na procesor . prednost u korišćenju procesor im proces sa višim prioritet . Među proces ist prioritet , sledeći proces se bir po fif princip . prioritet proces se određuje dinamički u tok izvršavanja proces . na početku rad , proces im najviši prioritet . kad izvrši naredb , prelaz na jedan niv prioritet ispod . nakon svak naredb , proces se smanjuj prioritet za jedan niv , dok ne dođe do najnižeg prioritet . ak je došao do najnižeg prioritet , na tom prioritet ostaj do kraj izvršavanja ."
"funkcij koj korist nit koj simuliraj izvršenje proces :"
"metod koj poziv nit koj simulir izvršenje proces , kak bi se proces izvršio id_procesa - id proces broj_naredbi - ukupan br naredb koj proces treba da izvrši"
"na početku im najviši prioritet"
"smanjuj se prioritet ak je to moguće"
"Traži najprioritetn spreman proces"
"ukolik je našao red"
"ukolik nem više proces"
"specijaln klas koj služi za modelovanj jedn red čekanja , u jedn nivo prioritet"
"konstruktor stvar nov cv dinamički"
"notifikacij će na hronološkoj cv probudi prv koj je ušao u čekanje"
"skidanj ID-a proces koj je izašao iz čekanja"
"brisanj ID-a iz red spremn"
"id_procesa - id proces koj je uprav kreiran prioritet - prioritet proces ( 0 - najviši prioritet ) broj_naredbi - br naredb koj proces treba da izvrši"
"id_procesa - id proces koj je izvršio naredb naredb - indeks naredb koj je uprav zavrsen"
"napisa konkurentn progra koj simulir prioritetn raspoređivač u jednoprocesorsk sistem . proces su predstavljen nit . da bi se izvršili poziva metod """" izvrs """" deljen promenljiv tip rasporedjivc . svak proces sadrži određeni br naredb . naredb se izvršavaju jedn po jedn . za svak naredb , proces mora da sačeka da procesor bud slobodan . Izvršavanje jedn naredb traj 300 ms . nakon izvršavanja naredb , proces odlaz u stanj spreman , a drug spreman proces dobij procesor . proces su klasifikovan prem prioritet . 0 je najviši prioritet dok je n najmanj ! za svak prioritet , postoj odvojen red čekanja na procesor . prednost u korišćenju procesor im proces sa višim prioritet . Među proces ist prioritet , raspoređivanje se obavlj po fif princip ( tj. ciklično će se smenjiva različite naredb proces ist prioritet na procesor ) . prioritet proces je određen statički u trenutk kreiranj proces . za uspostavljanj red čekanja po fif princip koristit dat klas """" cv_hrono """" ."
"metod koj poziv nit koj simulir izvršenje proces , kak bi se proces izvršio id_procesa - id proces broj_naredbi - ukupan br naredb koj proces treba da izvrši prioritet - prioritet proces"
"id_procesa - id proces čiji je zahtev prosleđen u / i uređaju broj_staze - br staz koj je potrebn obradi ( u sklop ov zahtev )"
"id_procesa - id proces koj čeka kak bi njegov zahtev ka u / i uređaju bio obrađen broj_staze - br staz koj je potrebn obradi ( u sklop ov zahtev )"
"broj_staze - br staz koj je uprav obrađen"
"napisa konkurentn progra koj simulir raspoređivanje disk po fif ( first in first out ) princip . kod ov načina raspoređivanja disk , ui zahtev se obrađuju prem redosled dolask . klas os predstavlj de operativn sistem koj je zadužen za raspoređivanje zahtev . metod uputi_UI_zahtev poziva nit koj predstavlja proces . u ov metod prosleđuje se zahtev ui uređaju da izvrši ui operacij na određenoj staz disk . proces mora da sačeka da zahtev bud izvršen , pr neg nastav dalj izvršavanje . metod obradi_zahtev poziv nit koj predstavlj disk . metod je zadužena da obrad jedan zahtev iz skup zahtev . zahtev za obrad se iz skup zahtev bir po fif princip . obrad zahtev traj 300 ms . rezulta metod je br staz koj je disk pristupi pr obrad zahtev ."
"funkcij nit koj korist nit koj simuliraj izvršenje proces :"
"funkcij nit koj korist nit koj simulir de operativn sistem koj upravlj disk :"
"Čekanje da pristign svi zahtev"
"Kašnjenje pr slanj zahtev kak ne bi svi zahtev istovremen pristigl"
"struktur zahtev koj sadrži sve potrebn informacij za kreiranj ist"
"red za zahtev"
"metod koj poziv nit koj simulir izvršenje proces , kak bi se uputi zahtev ka u / i uređaju id_procesa - id proces koj upućuje zahtev broj_staze - br staz disk koj nit želi da pristup"
"metod treba da formir nov zahtev i uput ga u / i uređaju na obrad . proces će biti blokiran dok god se ova zahtev ne izvrši . pr neg što stup u blokad , potrebn je pozva dijagnostik . proces_ceka ."
"Obaveštava obrađivač da im zahtev"
"metod koj poziv nit koj simulir de operativn sistem koj upravlj disk , kak bi se obradi jedan pristigl zahtev prem uslov zadatk , metod treba da obrad zahtev koj je najranij pristiga . povratn vrednost metod treba da bud br staz koj je obrađen ."
"Izvršava zahtev"
"Traži najbliži blok trenutn"
"id_procesora - id procesor koj je učitao vrednost iz memorij adres - adres sa koj je očitana vrednost vrednost - vrednost koj je pročitana iz memorij"
"id_procesora - id procesor koj je zatražio dma transfer"
"odakl - adres u memorij odakl počinje dma transfer kolik - kolik karakter se kopir iz memorij kom - destinacion adres - na nju se upisuj očitani karakter"
"stanj sabirnic - slobodn , čitanje iz memorij , pisanj u memorij , dma transfer ."
"primeti sličnost sa stanj iz zadatk """" multiprocesor """" :"
"Čekanje za zauzimanj propusnic"
"ukolik nem zahtev čeka"
"kad se pojav"
"funkcij nit koj izvršavaju nit koj simuliraj procesor :"
"funkcij nit koj simulir dma kontroler :"
"upis"
"? - pošto se ne zna šta je u memorij na početku"
"vrem čekanja"
"Vraća bajt sa dat adres"
"Piše bajt na dat adres"
"ispisuj korisnik menü"
"ispis grad za unesen državu"
"hvatalic grešaka"
"* @author vedran vidakovic"
"prilik login ak zeli da odustan i vratim se na početak"
"klik na dugm admin na pocetk program"
"klik na dugm ok prilik login admin"
"dugm za pregled racun prilik lookup gost tab2 admin window"
"pregled racun na prozor gost"
"ucitavanj podat za prikaz racun"
"odjav gost iz hotel"
"brisanj notifikacij za check out"
"provjerav baz da li im vec usernam i pass od prij za korisnik sa dat idnumber"
"editovanj podatk o gost tab2 admin windows guest lookup and chang podatk"
"hali"
"panel za prikaz informacij"
"uzet iz baz"
"clos app button"
"polj za unos password"
"* @author vedran vidakovic & sefer kuduzovic *"
"poziva metod za tabl i brod"
"string u koj se nalaz riječi za pogađanje"
"uz nek rand rijec iz našeg niz"
"ak jeste , brisem zvjezdic na pozicij pogodjen slov i stavlja slov"
"* author : sefer kuduzovic"
"unos mjesec i godin :"
"Početni dan u mjesec je stavljen za 1 , mad se može napravi i da se mijenj , tj da korisnik unes dan ."
"print prazan prostor dok ne dođe tačan dan koj se poklap sa prv u mjesec"
"metod koj igr igr """" craps """" po utvrđenim pravi ak korisnik izvuc br 7 il 11 , vrc da je pobijedi ak izvuc 2 , 3 il 12 , vrc da je izgubi inače bac ponov te provjerav da li je izvuak ist br ak je izvuka ist br , pobijedi je , ak je izvuka 7 , izgubi , ak ni jedn od tog dvog bac se ponov"
"unos kreditn kartic"
"postavlj token trenutn igrača u to polj"
"promjen turn - tj. ko je na red"
"te ispisuj ko je na red u status label"
"nakon petlj , dodajem tu sve u grid te njeg dodajem u naš """" box """""
"obavija čitav kod sa try / catch , za hvatanj grešaka"
"i printa rezulta"
"koj se zat parsir metod tobinarystring koj vraća binarn br našeg """" broj """" te se zat doda nul sa stran , čime se efektivn ispisuj tačno 16 bit"
"korisnik unos br"
"pozivanj metod , te print rezultat"
"provjer da li je širina veća od broj"
"u list ubacuj brojev koj se ponavlja , a niz koristim da vidi koj su to brojev"
"i sve se to fin ispisuj"
"niz nam sluz ka brojc , ak dobi rand br npr 2 ; ond će se povećati niz [ 2 ] za 1 .."
"petlj se vrt 100 put"
"ak prođe petlj , vraća br"
"prv generišemo nek rand br"
"te se on salj metod , i provjerav se šta nam je vrati ak je tru , ispisuj poruk da im 4 uzastopn , els , ispisuj da nem"
"ak slucajn unes vec kolon neg sto je zadat , prekid se progra ."
"prav se matric velicin brojradnik x brojdan"
"te mu se printaj dan da se lakše snađe za unos"
"te se dodaj u list , i resetuj , da moz za sljedećeg radnik da sabir"
"metod koj mnoz dvij matric"
"formul za mnozenj 3 x3 matric"
"preskac se prv red jer nem potreb da se provjerav sam sa sob"
"vrtim loop dokl god im red"
"ak nem više red , povećavamo kolon"
"te poslij sortiranj"
"te metod koj vraća tu kamat"
"poziva metod te printa rezulta"
"pita korisnik za velicin matric , nakon ceg on unos element u ist"
"šaljemo matric metod , koj vraća """" boolean """" tip , nakon čega provjerava dat """" return """" te shodn tim ispisuj poruk :"
"te šaljemo brojev metod na sortiranj"
"standardn petlj za sortiranj prolazim kroz brojev , te shodn tom gleda da li je br """" j """" veći od sljedećeg ak jeste , mijenja mjest ( values ) i idem dalj"
"pravi niz """" brojev """" u kojeg ubacuj generisan brojev"
"podizanj i polaganj novc // test //"
"kojeg vraćamo .."
"metod koj postavlj radius provjerav da li je veći od 1 , tj ne može biti manj od 1 .."
"y koordinat"
"konstruktor sa parametr"
"metod za računaje diskriminant"
"informacij"
"vraća rješenje za x"
"vraća rješenje za y"
"ak se jednačina može riješiti , ispisuj rezulta"
"metod za provjer da li su brojev jednak"
"prosljeđivanje karakter u cifr vi integer . parseint ( ) ;"
"input metod za provjer da li je br """" prim """""
"ak nem djeljiv brojev , ond je br prost"
"prim = djeljiv sam sa sob i sa 1"
"pozivanj klas vraća trenutn vrijem !"
"ak želimo sam postavi trenutn vrijem , poziva ov metod :"
"/ < -- testiranj dalj -- > \"
"pozivanj metod za računanje distanc i njen rezulta"
"petlj za print list"
"list za brojev"
"ispisuj ga"
"furk kod biginteger je da se može pozva metod koj provjerav da li je prim so , we do tha"
"ak je prim , ispisuj ga , that's it ."
"metod pretvar karakter u velik slov"
"vraća char od - do unesen interva"
"provjer dužine broj"
"ak su ist dužine , upoređuju se , slov po slov"
"od mali slov postaj velik"
"od tog kakv je boolean """" b """" , shodn tom vraća rezulta"
"korisnički def . string"
"za vraćanje string"
"prv pretvaram regex u niz karakter , jer će nam tak biti lakše prepozna ga u našem string"
"nakon što završe petlj , smještamo iz arraylist u niz , te vraćamo rezulta"
"unos generisan vrijednost u matric i stampanj matric"
"petlj prolaz kroz list i sabir brojev , te ih return vraća"
"pomoću petlj provjerava da li im ist brojev u list"
"provjerav da li je list null / prazn"
"pozivanj list"
"brojak samoglasnik i suglasnik"
"petlj provjerav najvec djelilac izmedj ta dva broj , te zamjenjuj max vrijednost sa trenutn najvec sa koj se ob broj mogu dijeli"
"to je ta fens metod"
"generišemo 100 rand brojev :"
"dva niz - jedan za 100 rand brojev drug za brojanj kolik se put taj br ponovi"
"glav program .. ovdj se magij odvij :"
"petlj prolaz s pozad ka početku"
"izdvaj se karakter"
"list za smijestanj lin tekst iz fajl bez unijet rijec"
"nakon unos od korisnik , prosljedjuj fajl metod"
"petlj koj prolaz kroz sve godin , te ak je godin prestupn , dodaj je u list"
"glavn di program koj generiše pitanj"
"metod pr br bacanj , te na osnov tog vrs racunanj"
"metod koj provjerav da li je br prost"
"printanj rezultat"
"slanj nizov metod :"
"korisnik unos niz :"
"pravi nov matric , koj ce se sortir"
"saljem matric u metod"
"kad metod urad svoj , printa sortiran matric"
"metod koj sortir uzet matric"
"whi petlj vrt dokl god se moz br dijeli"
"metod ih strp u niz"
"koj sortir"
"i ispiše ."
"ak unesen br nij 0 , unos se u list te se povecav brojc i sabir se sa prosli unos"
"ak nij unesen brojev , ispisuj da se ne moz dijeli sa nul i prekid progra"
"sve se to na kraj fin ispis"
"korisnik unos kolik želi da štedi mjesečno"
"te zat unos kolik mjesec zel da sted"
"ovdj se racun mjesecn stop"
"te se smanjuj br simulacij za 1"
"pravi niz u koj ce se unosi brojev"
"zat provjerav da li im """" spejsing """""
"godisnj interesn stop se dijel sa 100 da se dobij procena"
"buduc vrijednost investicij se računa po dat formul"
"pomjeranj zarez za jedn mjest u lijev kod unesen broj"
"dodavanj odvojen cifr nov broj"
"ak je br jednak svom naopak ispis on je palindr"
"odvajanj slov iz rečenice"
"te njihov zbir"
"dok korisnik ne unes tacan rezulta , vrt se loop"
"postavljanj pitanj"
"upisivanj svih djelitelj za trenutn br u list"
"sadrza list se bris"
"prolazak kroz password slov po slov ( br po br :O )"
"provjeravanj da li password im dovoljn ukupn karakter i dovoljn brojev , i stampanj odgovarajuceg rezultat"
"kalkulacij za racunanj dan :"
"radius zemlj"
"te prelaz u nov red ak je ispisan 10 lin"
"da li je br djeljiv i sa 5 i sa 6"
"uzimanj broj milisekund"
"petlj sabir trenutn br sa prethodn , te se zamjenjuj mjest"
"metod za računanje te sum brojev po zadat princip ."
"rekurzivn metod za računanje"
"unos se pocetn i krajnj godin"
"provjer list za twin prim brojev"
"pravljenj kombinacij pomoću dvij petlj"
"prolazak kroz citav string"
"provjer da li je drug string substring prv string"
"pita korisnik kolik zel unijet grad :"
"te se on sortiraj :"
"ak je br prost , on se stamp te se povecav brojc"
"racunanj ostatk , br dan koj ne čine jedn cijel godin"
"br se dodaj na sum"
"ak je br pozitivn , povecav se brojc za pozitivn brojev"
"racunanj prosjek unesen brojev"
"generisanj cetr broj"
"povecavanj brojc prost brojev"
"da bi br bio prost mora biti vec od jedan"
"sortiranj list"
"list za smijestanj brojev"
"ak je sve ok , br se salj metod"
"metod za ispis broj :"
"odvajanj zadnjeg broj od unos"
"petlj se vrt dok ne dobi 100 emirp brojeva :)"
"petlj se vrt dok ne dobi 100 palindrom emirp brojeva :)"
"provjerav je li br palindr i da li je prost"
"informacij o drug pakovanj"
"mjesec smjesten u niz iz kojeg se print"
"ak petlj dodj do kraj , prelaz se u nov red"
"unos se n ( n x n ) od matric"
"korisnik unos svoj string , rečenicu , šta god hoće"
"preuzet sa stranic stackoverflow.com http://stackoverflow.com/questions/4087468/ssn-regex-for-123-45-6789-or-x-xx-x"
"provjer štapmanja system . out . println ( ) ; pa ond desn stran , tj 1 2 3 4 5."
"inače se štampa mal manj , zbog veličine dvocifren brojev"
"prelaz se u nov red"
"* funkcij popunjav horizontalBox-ove sa adektvatn slik i * informacij o autor program ."
"* funkcij definis reakcij prozor na esc dugm na tastatur il pak * pritisak na dugm """" clos """" . prozor se sakriv ."
"moz sam graph da bud"
"* Piše po stream sve podgrafov nek graf * * @param out * @param graph"
"* ispisuj sve grafov sa svim svoji podac * * @param out"
"uklanjanj sa selektovan graf propertij"
"* Vrši registracij svih default komand u cor . ukolik bac * exgcommandalreadyexistexception znači da je komand već registrova nek * konzol ."
"* osg context u okvir kog se pokrec consoleservic"
"* Određuje da li se caret nalaz pr kraj prompt * * @return da li se nalaz pr kraj prompt"
"* realizuj cutovanj tekst sa konzol ( docopy + delet )"
"* Vrši ispis u textpan * * @param text * koj želimo da ispišemo ."
"* uklanj sve listener konkretn konzol po zatvaranj tab"
"ak je obrisan bas taj nod koj je u konzol aktivn"
"* Obrađuje događaje koj su u vez sa tabov ( promen imen , zatvaranj ) . ov * događaje ispaljuj tabmanager , za razlik od ActiveTabChangedListener-a čije * događaje ispaljuj komand ! *"
"pokusava da izvrsi komand"
"ak je sam jedn komand nju izvrsava"
"prv moramo da kreiram cor , jer od njeg zavis servis koj rad sa ostali komponent"
"vadi set i vrednost"
"* vrc vrednost dat parametr u oblik string . ukolik pod zadat * ključem nem vrednost vraćena vrednost će biti <em> null </em> . * * @param category * kategorij ( komponent ) u koj se nalaz parametar * @param key * naziv parametr * @return string koj sadrz vrednost parametr"
"* dodaj pod kategorij <em> category </em> i pod ključem <em> key </em> * vrednost <em> valu </em> . ukolik kategorij ne postoj , dodaće se nov , * koj je zadat . ukolik u zadat kategorij pod zadat ključem postoj * nek vrednost , ta vrednost će biti zamenjen nov . * * @param category * kategorij u koj se dodaj * @param key * Ključ za koj se dodaj * @param valu * vrednost koj se dodaj"
"* registr podatk koj komponent mogu da razmenjuj ."
"* kontekst u kom se komponent izvršava unutar osg Fremework-a ."
"* dodaj podmen u glavn men * * @param men * naziv glavn men u koj podmen treba da se dod . * @param submen * podmen koj se dodaj"
"* konstant za određivanje po čemu sorted metod sortir"
"* panel sa svim toolbar-ovima"
"* map svih toolbar-va koj se pojavljuj na glavn prozor"
"* registruj nov men . * * @param menucod * kod nov men * @param menunam * im nov men ."
"* implementir akcij promen naziv tab-a , konteksn men { @link tabpanel tabPanel-a } ."
"@author tim 2 *"
"pomer ak je pritisn"
"iscrtaj ivic"
"lev taster ?"
"* konstruktor , sam inicijalizuj * * @param tabpanel { @link tabpanel tabpanel } čiji se događaji miša obrađuju"
"* Vraća { @link boolean } vrednost da li se naziv tab-a može menja . * * @return { @link boolean } - <code> tru </code> može se menja , * <code> fals </code> ne ."
"* { @link map map } koj sadrži panel"
"* uklanj idikator sa kanvas"
"@author tim 2 *"
"* predstavlj panel koj sadrži { @link exggraphicalcomponent komponent }"
"ak postoj , postav njen tab ka aktivn"
"* ( non-Javadoc ) * * @seejavax . swing . transferhandler #importData ( javax . swing . transferhandler . * transfersupport )"
"* Odredišni čvor ."
"* Vraća prethodn izgenerisan ID. * @return"
"neusmeren gran"
"ne paz se -> dodajem sve ."
"* { @link tk . exgerm . cor . model . igraph graf } kroz koj se trenutn iterir"
"* im vish slucaj treba na sve obratit paznj"
"paz se na usmerenj"
"* za rad sa eventov"
"* defaultiterator nikad ne brin o usmerenj gran ."
"* defaultiterator nem mogucnost psotavljanj startn nod ."
"* kreir nov { @link tk . exgerm . cor . model . iedg gran } sa zadt izvorn i * odredišnim čvorom . * * @param fr izvorn { @link tk . exgerm . cor . model . inod čvor } * @param to Odredišni { @link tk . exgerm . cor . model . inod čvor } * * @return novokreiran gran"
"* Vraća graf kom pripad * * @return graf kom pripad"
"* dodaj nov { @link tk . exgerm . cor . model . inod čvor } u graf . * * @param nod * Čvor koj se dodaj * * @throws exgnodealreadyexsistexception * ukolik nod sa ist imen već postoj u graf ."
"* uklanj gran iz graf . * * @param edg * gran koj se uklanj"
"* Označava događaj da je izbačena gran iz graf . * * parametr : * <ol> * <li> graph : igraph - graf iz kog je gran izbačena </li> * <li> edg : iedg - gran koj je izbačena </li> * </ol>"
"* Vraća atribut tip object sa zadat imen . odgovornost klijent je da * ga cast-uje u odgovarajuću klas . * * @param attr * naziv atribut * @return vrednost atribut"
"* predstavlj čvoor u { @link igraph graf } ."
"@author tim 2"
"* Vraća sve atribut , ka { @link jav . uti . map map } parov * { @link jav . lang . string string } -> { @link jav . lang . object object } * * @return map atribut"
"* dodaj nov { @link iedg gran } na čvor . gran mora da im <em> to </em> * il <em> fr </em> na ova nod il će biti bačen * exgnodenotconnectedexception izuzetk . * * @param edg * gran koj se kači na čvor ."
"* diretn povezuj dva { @link inod čvora } . ova čvor će biti izvorn , a * <em> nod </em> će biti odredišni . * * @param nod * Čvor na koj ova čvor treba da se zakači . * * @throws exgnodedoesnotexsistexception * ukolik zada čvor nij de graf . * * @return Novo-kreiranu vez ."
"* Vraća list svih gran koj su na ova čvor zakačene * * @return list gran"
"* ispituj da li je prosleđeni graf roditelj čvora , beskonačne dubin * * @param graph * za koj sumnja da je roditelj ov čvora * @return tru ak jeste roditelj"
"* <p> * konstant koj određuju pozicij akcij u sklop aplikacij . jedn akcij * može da se pojav na više mest . * <p> * konstant su tak napravljen da sve informacij mogu da se prenes * jedn integer-om . na primer , ak akcij želi da bud u men i * toolbar-u , treba da vra integer men | toolbar ."
"* oznak da akcij treba da se ugrad u toolbar . Ugradiće se u * podrazumevan toolbar . ak komponent"
"* oznak glavn toolbar-a koj podrazumevan postoj"
"* Izvršava komand . * * @param command * komand za izvršavanje * @param params * list parametr komand * * @throws exgcommanderrorexception * ukolik postoj graška u prosleđenim parametr * @return rezulta izvršavanja komand . ov mora biti * { @link tk . exgerm . cor . model . igraph igraph } * { @link exgcommand #returnsGraph ( ) } vraća tru ."
"* Označava konstant pod koj se čuva trenutn putanj u fi sistem ."
"* Označava događaj da je promenjen aktueln fs dir u aktivn konzol * * parametr : * <ol> * <li> ps : printstre - odgovarajući stre put kojeg prepoznajem * odgovarajuću konzol </li> * <li> path : string - string trenutn aktivn path </li> * </ol>"
"* Označava događaj da je promenjen aktivn graf u konzol . * * parametr : * <ol> * <li> ps : printstre - odgovarajući stre put kojeg prepoznajem * odgovarajuću konzol </li> * <li> nod : igraph - referenc na graf koj se postavlj za aktivn ( null * za poništavanje aktivn ) </li> * </ol>"
"* Označava ključ pod koji se čuva aktivn čvor konzol u Core-u . * * tip podatk : inod"
"* Vraća ključnu reč na koj se komand odaziv . * * @return Ključna reč na koj se komand odaziv"
"* Označava događaj da je tab zatvoren . * * parametr : * <ol> * <li> component : jcomponent - komponent koj se prikazuj u tab-u </li> * </ol>"
"* treba da vra jedn od konstant : * <ul> * <li> { @link exggraphicalcomponent #CENTER } </li> * <li> { @link exggraphicalcomponent #SOUTH } </li> * <li> { @link exggraphicalcomponent #EAST } </li> * <li> { @link exggraphicalcomponent #WEST } </li> * </ul> * i predstavlj pozicij unutar { @link tk . exgerm . cor . gu . mainwindow * glavn prozor } gde će se komponent prikaza . * * @return pozicij komponent"
"* konstant koj treba da korist grafičke komponent za određivanje * pozicij unutar { @link tk . exgerm . cor . gu . mainwindow glavn prozor }"
"* Označava događaj da je graf uklonjen iz registr . * * parametr : * <ol> * <li> graph : igraph - graf koj je uklonjen </li> * </ol>"
"* uklanj graf iz registr na osnov imen <em> nam </em> . * * @param nam * im { @link tk . exgerm . cor . model . igraph graf } koj se uklanj . * @throws exggraphdoesnotexsistexception * ukolik graf sa traženim imen ne postoj ."
"* metod koj implementiraj sam nek iterator kak bi omogućili čišćenje * podatk koj su stavi u graf . * svak iterator u opis klas definiše da li je posl njeg potrebn poziva ov metod ."
"* uniforman interfac za sve načine prolask kroz * { @link tk . exgerm . cor . model . igraph graf } . konkretn implementacij treba da * vod računa o početku i kraj { @link tk . exgerm . cor . model . igraph graf } . * ukolik je { @link tk . exgerm . cor . model . igraph graf } cikličan , treba da * odred koj { @link tk . exgerm . cor . model . inod Čvor } se prv obrađuje i da * paz da se iteracij zaustav kad se dođe ponov do ist * { @link tk . exgerm . cor . model . inod čvora }"
"@author tim 2"
"* Vraća sledeći { @link tk . exgerm . cor . model . inod čvor } u iteracij . * * @return Sledeći { @link tk . exgerm . cor . model . inod čvor }"
"ov * metod ne treba poziva nakon što { @link exgiterator #hasNext ( ) } vra * <em> fals </em> * *"
"* oznak view men"
"* metod koj treba da vra string sa imen men u koj akcij treba da * se ugrad . ak takav men ne postoj biće kreiran . metod će biti pozvan * sam ak { @link exgaction #getActionPosition ( ) } označi akcij ka da treba * da bud dodat u men , u suprotn neće nikad biti pozvan . ak se akcij * dodaj u nek od standardn men treba iskoristit nek od konstant * definisan u ov interface-u . * * @return im men u koj treba da se ugrad akcij ."
"* <p> * Vraća pozicij na koj će se akcij ubaci u men . ov treba da bud * velik ce br , sa dost razmak između redn brojev akcij , da bi se * ostavi prostor drug komponent da se uglav između ov akcij i * prehodn il sledeće . * <p> * akcij sa ist redn broj će biti grupisan između dva separator . * <p> * metod neće biti pozvan ak se ov akcij ne ugrađuje u men . * * @return redn br pozicij u men ."
"* ova iterfac obuhvat zajedničke stavk koj mogu da se pojav u bilo koj * stavc u men . u ov slučaju nasleđuju ga sam { @link exgaction } i * { @link exgsubmen } . ni jedn komponent ne bi treba direktn da * implementir ova interfac , nek nek o njegov naslednik . * * @author tim 2"
"* Vraća men koj treba da se ugrad . * * @return men koj treba da se ugrad ."
"* Obaveštava osluškivača da se desi događaj i prosleđuje mu parametr koj * se događaj posla . * * @param event * Događaj koj se desi * @param parameters * parametr koj je događaj posla ."
"* <p> * Način obrad { @link tk . exgerm . cor . model . inod čvorova } ( visitorpatern ) . * * klijent koj žele da obav nek radnj nad čvorom treba da implementiraj * ova interfac i da pozov * { @link tk . exgerm . cor . model . inod #accept ( ivisitor ) accept metod čvora } il * { @link tk . exgerm . cor . model . iedg #accept ( ivisitor ) accept metod gran } * <p> * primer kod koj rad ist stvar nad svak element kroz koj prolaz * { @link tk . exgerm . cor . plugin . iterator iterator } : <code> * <pre> * iterator it ; * ivisitor v ; * whi ( it . hasnext ()) { * it . next ( ) . accept ( v ) ; * } * </pre> * </code> * * @author tim 2 *"
"* Vraća komand * * @param command * naziv komand * @return komand"
"ak postoj graf sa ist imen u registr , pretpostavk je da je nas aktueln"
"* jedan proxy može da im više servis ( na primer , jedan lokaln , jedan što * drži grafov na mreži . ) . mi ćemo imat jedan il ni jedan , al ov * ostavlj mogućnost da ih im više ."
"obavestava sve koj su zainteresovan"
"* dodaj nov help u registr * @param component koj registruj help * @param help komponent"
"* Vraća help * * @param component * naziv komponent * @return help komponent"
"* Vraća sve helpov koj su registrovan u sistem . * * @return svi registrovan helpov"
"* kontekst u kom se izvršava komponent u okvir osg framework-a ."
"* proxy za registr grafov ."
"* registr svih komand"
"* izbacuj servis iz registr * * @param nam * im servis"
"* ov metod treba da korist komponent koj hoće da doda nešto u glavn * prozor . * * @param position * <ul> * <li> exggraphicalcomponent #CENTER </li> * <li> * exggraphicalcomponent #SOUTH </li> * <li> * exggraphicalcomponent #EAST </li> * <li> exggraphicalcomponent #WEST </li> * </ul> * @param component * komponent koj se dodaj"
"* korist se za dodavanj akcij u men i toolbar glavn prozor . * * @param action * akcij koj se dodaj"
"* korist se za uklanjanj akcij iz glavn prozor . akcij će biti * uklonjen sa svih mest na koj je bila dodat metod * { @link icorecontext #addAction ( exgaction ) } . * * @param action * akcij koj se uklanj . mora biti ist instanc ka on koj * je prosleđena metod * { @link icorecontext #addAction ( exgaction ) }"
"* dodaj { @link tk . exgerm . cor . model . igraph graf } u registr * * @param graph * { @link tk . exgerm . cor . model . igraph graf } koj se dodaj . * * @throws exggraphexsistexception * ukolik graf sa ist imen već postoj u registr * @throws exgnotimplementedexception * ukolik ne postoj registrovan graph register"
"* Vraća sve registrovan komand . * * @return sve registrovan komand ."
"* <p> * na ova način komponent može da postav nek vrednost pod određenim * ključem da bi je kasn pokupi il da bi je nek drug komponent * pokupi . pored mehanizm event-ova ov je način na koj komponent mogu * da razmenjuj podatk . * @param key * pod koji ključem se čuva vrednost * @param valu * sam vrednost"
"ne treba mešati ov i eventov jer ovd treba da * se ostavlja podac koj se mogu preuzet bilo kad , a ne kad se des * nek događaj . * <p> * na primer , visualizer može da postav activ graph kad se on promen , a * svi algoritm mogu da ga preuzm da bi zna nad čime da se izvrše . <br/> * konzol može da postav aktivn graf , a sve komand da ga preuzm ."
"* registruj nov iterator . * * @param iteratorclass * klas iterator koj se registruj . ov se šalje , je nov * iterator mora da se instancir svak put kad se zatraži . * @throws exgiteratoralreadyexsistexception * ukolik iterator sa ist imen već postoj"
"* Određuje da li se { @link mainwindow glavn prozor } prikazuj . * * @return <code> tru </code> ak je prikazan , <code> fals </code> ak nij"
"* Vraća stanj u kom se { @link mainwindow glavn prozor } nalaz * * @return stanj u kom se prozor nalaz * * @see fram * @see jav . awt . fram . getextendedsta ( )"
"* Pokreće sve komand koj se doda u pipelin metod * { @link ipipelin #addCommand ( exgcommand command ) }"
"iterator pocinj od start nod"
"ispis ak nem"
"* Generiše graf u oblik mreže kvadrat * * @param h - parametar , generiše se n ^ 2 čvorova * @param graphnam - im generisan graf"
"* metod inicijalizuj imen svih tipov grafov koj će ov komponent da * ponud korisnik za generisanj"
"* metod inicijalzuj radi grup na ov prozor . za svak unet tip graf * i njegov objašnjenje generiše po jedn radi dugm i jedn label sa tekst * objašnjenja ."
"* ov konstant predstavlj im komponent i služi za lakše identifikovanj * komponent koj ispaljuj HELP_REQUESTED event ."
"sam ostavi res na null"
"* list svih registrovan komand za čišćenje ."
"* Označava događaj da je klikn na graf na graphtre komponent . * * parametr : * <ol> * <li> graph : igraph - graf na koj je klikn </li> * </ol>"
"* Označava događaj da se desi desn klik nad nod na graphtre * komponent . * * parametr : * <ol> * <li> nod : inod - nod nad koji se desi desn klik </li> * </ol>"
"* Označava događaj da je na graphtre komponent klikn na akcij za * dodavanj nov nod . * * parametr : * <ol> * <li> graph : igraph - graf u koj treba doda nov nod . </li> * </ol>"
"* metod setuj svim potrebn akcij na popup men koj graph je * trenutn selektovan i za koj graph bi treba da se izvrs pokren * akcij . * * @param graph - graph koj je trenutn selektovan na graphtre komponent"
"* metod inicijalizuj sve akcij ov komponent"
"uzima root graf i u zavisnost od broj nivo podgrafov nalaz graf u koj treba ubaci prosledjen iedg"
"* roditelj ov edge odnosn edgeseparator u kom se edg nalaz ."
"* ikonic koj je graph predstavljen u graphtre komponent ."
"* roditelj ov node odnosn nodeseparator u kom se nod nalaz ."
"* im korensk čvora odnosn on šta će biti ispisan ka im ov * element u GraphTree-ju ."
"* ikonic koj je workspac predstavljen u graphtre komponent ."
"Grafička komponent help * scrollpan koj sadrži u seb jeditorpan koj parsir html stranic"
"* kreir stringovsk reprezentacij graf . * @param graph graf koj se serijalizuj"
"* Vraća reprezentacij graf . * @return reprezentacij graf u string-u ."
"* Čuva prosleđeni graf u zada fi pomoću zadat builder . * * @param graph * graf koj se čuva * @param builder * builder koj se korist za pravljenj stringovsk * reprezentacij graf * @param f * fi u koj se snim"
"ak je prosleđen fi , njeg korisn"
"ov radi sam ak nism dosl do kraj sa vracanj ugnjezden grafov"
"* izbacuj sve sto nij validn slov"
"uklanjanj escap znak izpred navodnik u sred string"
"next token ."
"reinitialis ."
"regularexpression Id."
"lexica sta ."
"token manager ."
"* apstrakcij parser . svak parser treba da implementir ova interfac rad * uniformn pristup iz { @link persistanceservic } ."
"* parsir prosleđeni fi . fi treba da bud prosleđen drug načinom ( u * zavisnost od konkretn parser - ovak se ostavlj podrška za * parsiranj iz razn izvor ) . * * @return { @link igraph graph } dobijen parsiranj . * @throws internalparseexception * ukolik dođe do greške u tok parsiranj u zadat fajl ."
"* proverav da li je graf učitan iz fajl . * * @param graphnam * im graf za koj se vrši prover . * @return <em> tru <em> ak je graf učitan iz fajl , <em> fals <em> inače"
"* Vraća fajl iz kog je graf učitan . * * @param graphnam * graf za kog se traži fi iz kog je učitan . * @return putanj do fajl iz kog je graf učitan , il <em> null </em> ak * graf nij učitan iz fajl ."
"na početku svi grafov im dirty flag tru , jer ni jedan nij učitan iz fajl ( persistanc se tek diga pa nij ni bilo moguće učitavanje iz fajl ."
"* svi listener , za čišćenje"
"* otvar glavn prozor za rad sa pluginov . *"
"* komand za instalacij nov plugin . prepozna putanj i prosleđuje je * glavn pluginmanager klas na dalj obrad . *"
"* komand pokreće instaliran plugin . *"
"* tipov ishod update-a ."
"* jdialog kreiran sa http://w.instantiations.com/windowbuilder/"
"* Vrši prilagođavanje širina kolon spra podatk u njim . * * @param tabl * sa koj rad * @param vcolindex * index kolon * @param margin * margin"
"add margin"
"* Osvežava { @link updatestatus } određene komponent * * @param tablerow * red komponent čiji status osvežavamo * @param status * trenutn stanj { @link updatestatus }"
"* uklanj vizeln predstav čvora iz visualiser . * * @param nodenam"
"* Prilagođena za korišćenje eraser . proverav da li pogođena vizeln vez * i briše stvarn vez iz graf . * * @param point * - koordinat ( trenutn pozicij miša )"
"* proverav šta se nalaz ispod tačke point . ak je tu čvor , vraća njegov * index u list , ak nij , vraća -1. * * @param point * - koordinat ( trenutn pozicij miša ) * @return - index u list il -1"
"tod nac bolj resenj za ov ."
"* optimaln duzin oprug ( vez medj nodov )"
"drag na srednj dugm"
"skrol po x os"
"* Vraća konstant prethodn stanj sistem * * @return konstant prethodn stanj sistem"
"* dodaj osluskivac viewer komponent *"
"not : mousewheellistener definisan u apstraktn klas sta , pa ga nij * potrenbn dodava prilik promen stanj . dodaj se , mozd se kasn * jav potreb"
"* predstavlj rukovaoc stanj u koj se { @link visualiser visualiser * komponent } može naći . realizuj postavljanj aplikacij u naredn stanj , * dodaj osluškivače { @link visualiserview viewer } komponent . <br> * <br> * da bi se doda nov stanj potrebn je definisa nov konstant u * { @link states } atribut klas { @link statemanager } i u konstruktor pozva * metod { @link #addState ( states , sta ) } . on ka parametr pr konstant * koj reprezentuj stanj i konkretn instanc klas koj nasleđuje apstraktn * klas { @link sta } ."
"* @see sta * @see visualiserview *"
"* stanj u kom se sist trenutn nalaz"
"not : doda instanc stanj po potreb"
"transform . getscalex ( ) ;"
"* skalir dijagra tak da se svi element budu vidljiv"
"* singleton koj upravlj učitavanjem i upis konfiguracionig parametr * visualiser komponent ."
"* da li je dozvoljen iscrtavanj navigator"
"* Širina zo kontrol"
"* visin zo kontrol"
"* predstavlj indikator dirty-flag-a graf ."
"* vrc trenutn stanj prikaz * * @return stanj prikaz"
"* setuj pozicij na koj će navigator biti iscrtan * * @param position"
"* Vraća pocicij na koj se mov kontrol iscrtav * * @return pocicij na koj se mov kontrol iscrtav"
"* konstant koj reprezentuj stanj u koj se navigator može naći"
"* Vraća veličinu imaginarn okvir ok navigator * * @return veličinu imaginarn okvir ok navigator"
"* Vraća rastojanj od gornj ivic i navigator * * @return rastojanj od gornj ivic i navigator"
"* setuj veličinu imaginarn okvir ok navigator * * @param gap * veličina imaginarn okvir ok navigator"
"* setuj rastojanj između mov i zo kontrol * * @param gap * rastojanj između mov i zo kontrol"
"* Vraća faktor brzin skrivanj i prikazivanj navigator * * @return faktor brzin skrivanj i prikazivanj navigator"
"* Vraća visin navigator * * @return visin navigator"
"* Vraća viewer kontrol na koj se navigator iscrtav * * @return"
"* iscrtav okvir u kom se nalaz navigator *"
"* Vraća vrednost tačke u ortogonaln koordinatn sistem * * @param position * tačka čika se ortogonaln projekcij traži * * @return projekcij tačke u ortogonaln koordinatn sistem"
"* Vraća početnu pozicij zoombar kontrol * * @return početnu pozicij zoombar kontrol"
"* reaguj na pomeraj miša iznad navigaotr * * @param e događaj miša"
"* kreir ikon na osnov naziv fajl zadat relativn u odnos na ov klas * @param filenam naziv fajl slik sa relativn putanj * @return"
"* metod za inicijalizacij akcij , polj klas ."
"trazim maximaln y vrednost tj y + height"
"* akcij za redjanj element po desn ivici. *"
"trazim maximaln y vrednost tj x + width"
"* akcij za redjanj element po gornj ivici. *"
"* akcij za prikaz prozor sa osobin { @link argument argument }"
"* metod postav dijagra node-a na kom se vrs akcij da bud prikazan , * selektuj taj nod na radn povrsin i centrir radn povrsin na njeg ."
"* klas akcij za promen tekuceg radn okruzenj : { @link workspac workspac }"
"* akcij za dodavanj nov { @link decision odluk }"
"putvalu ( SMALL_ICON , loadicon ( """" images / decision . png """" )) ;"
"* klas predstavlj akcij brsanj element ."
"* klas predstavlj akcij brisanj dijagram iz projekt ."
"* slektovan projekt"
"prv brisem sve dijagram : sa tab , iz projekt , iz fs"
"* akcij za distribucij element po vertika *"
"* klas predstavlj akcij za unos nov vez zavisnost"
"* akcij za dodavanj nov { @link position pozicij }"
"* klas predstavlj akcij ponavljanj prethodn zabelez akcij u aplikacij ."
"ne treba ovak , al ovak cem za sad uradi"
"* klas predstavlj akcij prikazivanj svojstav selektovan nod ."
"* klas predstavlj akcij zumiranj prikaz dijagram ."
"* klas predstavlj akcij zumiranj tak da se svi postojec nod na dijagram vid . * tzv zumiranj na najbolj prikaz ."
"treba nam workspac , podesav se u konfiguracij"
"iteriram kroz sve fajlov"
"* prolaz kroz sve dijagram u svim projekt i traz on koj su menjan * a nis sacuvan . * * @return sve nesacuvan dijagram"
"sam na requirement zan , jer sam on moz da pozov ov zna , zna , ruzn"
"uimanager . setlookandfeel ( """" com . sun . jav . swing . plaf . nimbus . nimbuslookandfeel """" ) ;"
"* dodaj nod u model ."
"* klas za smestanj svih urađenih komad ."
"* model na koj se ova command manager odnos"
"* uklanj sve selektovan nod iz model * i stavlj ih na clipboard ."
"* Početna pozicij prelomn tačaka ."
"* krajnj pozicij prelomi tačaka ."
"* javlaj ov komand da je pomeranj završeno da bi pokupi krajnj * pozicij ."
"* sve počitne pozicij svih prelomn tačaka svih pomeren link ."
"* star i nov sca faktor ."
"* razlikovanj prv pokretanj od redo-a ."
"* Vraća veličinu nod na on pr menjanj veličine ."
"* postavlj star svojstv na nod ."
"* singleton klas za koj omogucuj ekstern podesavanj . cit podesavanj iz * xml datotek i ucitav ih u hashmap ."
"* podrazumevan konfiguracij"
"* extenzij dijagram ."
"* vrem ( u milisekund ) izmedj menjanj stanj progress bar pr * pokretanj program ( sam zbog efekt )"
"* vrednost koj odredjuj gustin grid u zavisnost od zo faktor ."
"* klas reprezentuj prozor sa informacij o program i njegov autor i * pomagac na projekt"
"* klas predstavlj prozor za izbor boj nek element"
"* funkcij vrs inicijalizacij sadrzaj combobox sa imen svih postojec projekt u trenutn workspace-u"
"* funkcij onemogucav menjanj sadrzaj combobox sa projekt ."
"* list svih prethodn upit za replac nek naziv nod . * cuva se sve dok progra rad ."
"* list svih prethodn upit za find nek naziv nod . * cuva se sve dok progra rad ."
"* klas omogucav auto-complete opcij za comb boxov za find i replac imen nod ."
"@author wiktorns - ma jok :D , kod je """" pozajmljen """" sa net . *"
"* funkcij prv vrs analiz stanj podatk vezan za pretrag , i zat u odnos na zahtev pretrag * za pocinj iteracij kroz sve nod i svak nod koj odgovar pretraz zamenjuj de tekst u * find combobox sa del tekst u replac combobox . kad se iteracij zavrs ispisuj se adekvatn poruk * sa informacij o broj nod koj me uspesn izvrsen zamen ."
"* men sa alatk za dodavanj element i vez ."
"* panel u okvir kog su smesten klizac ."
"* listener klas koj reaguj na dogadjaj koj izaziva scroll barov"
"* listener klas koj reaguj na dogadjaj mis na klizac za uvecanj ."
"* vrs inicijalizacij { @link mainwindow #tabs tabs promenljiv } ukljucuj i * listener klas za tabov ."
"* klas glavn prozor aplikacij ."
"* vrs inicijalizacij promenljiv : * <ul> * <li> { @link mainwindow #toolbarMain } * <li> { @link mainwindow #toolbarElements } * <li> { @link mainwindow #zoomSlide } * </ul>"
"undo-redo"
"cut-copy-paste-delete"
"* Čuva stanj prv label status bar u statusbarbackup"
"* Vraća prethodn sačuvano stanj prv label statusbar"
"* help men koj se nalaz u { @link mainwindow #menu } polj ."
"* predlozen vrednost pr izbor debljin nod ."
"* trenutn primarn boj za gradijent nod ."
"* trenutn sekundarn boj za gradijent nod ."
"* trenutn debljin okvir nod ."
"* list chechboxov - za svak postojec zahtev na dijagram po jedan"
"prv kolon"
"* klas predstavlj prozor za prikaz trenutn svojstav Requirement-a"
"* funkcij vrs inicijalizacij action listener za dugm koj treba da naprav nov dijagra i ubac ga * u diagrams combobox ka opcij za selektovanj . ov funkcij se izvsav svak put kad se pozov funkcij * getproperties nek zahtev ."
"* funkcij inicijalizuj imen svak od postojec radi dugmic ."
"* funkcij pun cbauthors svim postojec stakeholder na dijagram ."
"* klas predstavlj prozor za obavestenj o nesacuvan dijagram neposredn pr gasenj aplikacij ."
"* list svih nesacuvan dijagram u trenutk gasenj aplikacij ."
"* list svih dijagram chekiran za snimanj ."
"* trenutn podesen boj kanvas aplikacij"
"* klas predstavlj prozor za podesavanj svih generaln svojstav program ."
"* funkcij postavlj u konfiguracion menadzer sva nov podesavanj za * nod koj se pokup iz prethodn zatvoren prozor za podesavanj * defaultn vrednost za nod . * * @param dn * - prozor za podesavanj defaultn vrednost za nod ."
"* funkcij na osnov vrednost svih polj u prozor popunjav * konfiguracion menadzer novi vrednost podesavanj ."
"* list raspoloziv tem za aplikacij ."
"* metod služi za relociranj element il ekran ( bilo koj tačke ) pr * čemu pomeranj vrši u korac kak bi se stvori efekt animacij . * metod prilik pomeranj uvažava , tj. odrežuje veličinu pomeraj na * osnov trenutn udaljenost trenutn pozicij i odredišta ka i trenutn * zoom kanvas . * * @param currentpos * trenutn pozicij tačke koj se pomer * @param destination * odredišna pozicij tačke * @param diffpos * diferencijaln tačka nov položaja"
"* Završava pomeranj nod ( šalje ih direktn na odredišnu lokacij . Vrši * prover da li takv nod postoj . Predviđeno za upotreb u slučaju * prekid animiranj ( recim kod vezan und operacij ) ."
"animacij za skaliranj kanvas"
"* klas predstavlj prozor za prikaz trenutn svojstav Topic-a"
"* funkcij definis reakcij program na pritisak enter il """" ok """" dugmet na prozor . * pr zatvaranj prozor ce se ukolik unesen putanj za workspac ne postoj napravi nov folder sa adekvatn naziv * i unet nov podesavanj u kofiguracion menadzer . * rezulta dijalog postaj potvrdan i dijalog se sakriv ."
"otvaranj popupMenu-a na desn klik"
"uzimanj popup men"
"za akcij centernodeaction je potrebn postavi diagra i nod prikaz men"
"zbog bug-a sa center nod ak dijagra nij otvoren"
"setuj dijagra potrebn akcij"
"za pogodjen projekt"
"system . out . println ( logger . gethandlers ()) ;"
"* Događaj opisuj promen nad model . ov klas je moguće proširiti tak * da nos informacij o tom šta je tačno u model promenjen u cilj optimizacij * iscrtavanj ."
"* @author igor *"
"dodavanj ghost nod"
"* Vrši korekcij položaja selektovan breakpoint . prethodn vrši prover * da li postoj selektovan breakpoint"
"* vrs korekcij breakpoint link koj su povezan za nod koj se * pomer . korekcij pozicij se vrs sam za link čija se ob nod * pomeraj . ukolik je u tekućem korak već izvršena korekcij pozicij * breaktpointov nek link , on će biti preskočen . * * @param nod * koj je pomeren * @param offsetx * pomeraj x * @param offsety * pomeraj y *"
"* pronalaz indeks element koj se nalaz na zadat logick koordinat * * @param point * @return"
"* alteredlinks je list svih link cij lokacij je azuriran u tekuc * korak . sluz ka zastit da se ne bi nek link vis put pomeri u * tekuc korak ."
"* Podrška za jtre komponent , kod koj je bitn da element ne menja * pozicij prilik promen selekcij . * * @param i * indeks element * @return element na zadat pozicij"
"* javlja svim listener da se događaj desi"
"nakon sto smo sacuva dijagra vis nij menjan"
"* apstraktn klas koj opisuj bilo koj element dijagram ."
"ov mora da redefinis svak klas naslednic za seb"
"* @author igor *"
"* instanciranj GraphObjectPainter-a obavlja konkretn element * prilik svoj konstrukcij"
"* korist se ka pomocn metod koj ce korisi svak naslednic ov klas * da bi napisa svoj metod <code> setproperties </code> . ovd se konktern * realizuj smestanj u ova objekt atribut poznat na ov nivo . * * @param properties * hashmap sa atribut ( mora je metod naslednjic kreir )"
"* datum kreiranj element ."
"* list vez koj za pocetk il kraj im ova element ."
"* menj im projekt i menj im direktorijum u koj je projekt sacuvan * * @param newnam * nov im projekt"
"* enumeracij moguc vrednost argument . *"
"* stanj odluk * * { @link germ . model . nodes . decisionvalu }"
"* finaln odluk"
"* ponasanj koj se zahtev ."
"* izvor idej o zahtev"
"* referenc na osta zahtev"
"* kompanij u koj je stakholder zaposlen ."
"* E-Mail stakeholder ."
"* autor tem ."
"pogodjen nod"
"* menj kursor ak se nadj iznad handl nekoh selektovan nod . kad se * kursor pomer sa handl kursor se vrc na prethodn ."
"* dodaj pretpostavk na pozicij kursor ak na toj pozicij već * ne postoj nod ."
"* metod vrc tru ak je pogodjen nod validan zavrsetk link , fals * inac . * * @param link * link koj se kreir * @param nod * pogodjen nod * @return"
"* dodaj zahtev na pozicij kursor ak na toj pozicij već * ne postoj nod ."
"* Isključuje las i zumir na veličinu nacrtan las ."
"* kreir komand koj se korist za undo-redo ."
"tod ubaciavanj ghost nod"
"* javlj sta mašini da se desi događaj povlačenja miša i updateuj * { @link germview #hanleMoving } i { @link germview #lastPosition }"
"* metod vrs zumiranj tak da pravougaonik koj je prosledjen sigurn * bud vidljiv * * @param rect * koj mora biti prikazan"
"cranj las"
"crtanj ghostnod"
"crtanj link-ova"
"crtanj okvir ok selektovan nod"
"crtanj breakpointov selektovan link"
"* metod vrc round rectangl ok zadat element * * @param n * nod * @return rectangl sracuna takod a bud ok node-a"
"* metod racun pravougaonik koj predstavlj trazen handl nad zadat * nod . * * @param handl * za koj se traz rectangl * @param n * nod ok kog se nalaz handl * @return Rectangle2D koj predstavlj trazen handl ok zadat node-a"
"pravougaonik u zavisnost od kvadrant"
"iscrtavanj sam pravougaonik las"
"boj i alph"
"* za zadat tačku i element vraća hendl . * * @param nod * @param point * @return hendl ukolik je """" pogođen """" , u suprotn vraća null"
"* funkcij centrir pronadjen nod na trenutn otvoren dijagram * * @param nod * - pronadjen nod koj odgovar upit pretrag"
"vertikaln lin"
"* metod vrc tru ukolik je na zadat pozicij link . uvazav * translacij sourc i destination nod ( koj se nalez u ugl nod , a ne u * centr ) ."
"vracanj deformacij da ne bi utica na tekst"
"vracanj ispod node-a ak je nod flip-ovan"
"* privatn polj neophodn za hvatanj klik mish na element ."
"potrebn rad prover pogadjanj argument ."
"* konkretan painter je zadužen za definisanj shap objekt koj predstavlj * requirement ."
"* konkretan painter je zadužen za definisanj shap objekt koj predstavlj * stakeholder"
"uzima sve podatk iz form"
"prebaci sve u arraylist , jer nam je bitan redosled"
"i ispisuj men"
"* pokrec akcij na ID-a naredb ( uglavn dobijen od <link> men ( ) </link> * metod * * @param action * id akcij"
"* @param args * ka opcion parametr progra pr adres na koj se nalaz * server i port"
"* port na koj se klijent loguj"
"* glavn logger u klijent . svi osta logger nasledjuj ov ."
"* socket za komunikacij sa server"
"jmbg"
"* @return naziv komand ( iz protokol )"
"* implementacij metod iz interfejs comparabl zbog sortiranj stavk u * men * * stavk sa manj menuorder polj dolaz prv"
"* sam skracenic sa <code> system . out . print ( ) </code> * * @param text * tekst za stamp na ekran"
"* metod koj odradjuj komunikacij sa server za svak komand . * * @param args * pr promenljiv br argument jer svak specifična komand * traži različit br parametr . * @return ukolik je komand tip add vrc null , a ak je tip list vrc * arraylist sa svim trazen podac . * @throws clientexception * desav se ukolik server vra definisan protokol ."
"* odradjuj komunikacij sa korisnik i preuz potrebn podatk . kad * preuzm podatk pozuva execut sa odgovarajuc parametr ."
"* @author del-boy * *"
"apstraktn klas koj moraju da nasled sve klas koj zel da doda nek * funkcionalnost klijent ."
"* tekst koj se pojav u men iz kog korisnik bir opcij"
"* redn br koj odredjuj redosled pojavljivanj stavk u men"
"* sam naziv komand iz protokol"
"tod : da svak komand u execut salj ova string umest rucn napisan * string"
"* postavlj id , out i menutext na null , menuorder na 0 i poziv * <link> init ( ) </link>"
"brisem ekran ( mnog je los , al u nedostatk bolj tehnik u jav . )"
"* konstruktor sa svim parametr sem rezultat * * @param uid * jedinstven identifikator utakmic * @param starttim * vrem pocetk utakmic * @param host * im domaceg tim * @param guest * im gostujuceg tim * @param tip_1 * koeficijent da ce domac tim pobedi * @param tip_2 * koeficijent da ce gostujuc tim pobedi * @param tip_0 * koeficijent da ce biti neresen"
"* @param priz * the priz to set"
"* da li su svi mecev zavrsen il nis"
"* list prognoz"
"* @author del-boy *"
"klas koj reprezentuj tip . za razlik od klas rs.in . delic . wp . server . tip * ov klas sam zadrz podatk i sluz sam za prenos podatk ."
"* postavlj match na "" i tim na -1"
"* @author del-boy"
"klas koj reprezentuj korisnik"
"* @author del-boy"
"klas za formatiranj izlaz prilik logovanj . logrecord je kratk , u * jedn red , ispisuj niv logovanj , im klas koj je posla record , im * metod i sam poruk ."
"* @author del-boy *"
"klas koj vrs komunikacij sa klijent prilik dodavanj mec"
"* apstraktn metod koj sve komand moja da preklop ."
"* @author del-boy *"
"* apstraktn klas koj koj nasledjuj sve klas koj doda nek * funkcionalnost server ."
"* logger za upis akcij u fajl ."
"* postavlj ulazn i izlazn stre * * @param in * ulazn stre * @param out * izlazn stre"
"* klas koj vrs komunikacij sa klijent prilik listanj tiket"
"* rad komunikacij sa klijent prilik listanj svih mecev"
"rad komunikacij sa klijent prilik dodavanj rezultat mec"
"rad komunikacij sa klijent prilik registrovanj nov korisnik"
"* dodaj nov mec . * * @param m * mec koj se dodaj * @throws matchexception * javlj se ukolik mec sa ist uid vec postoj ."
"* * @param uid * mec koj je potreban * @return mec sa trazen uid * @throws matchexception * javlj se ukolik mec sa trazen uid ne postoj"
"* vrc korisnik na osnov korisnick imen . * * @param usernam * korisnick im trazen korisnik * @return korisnik koj je trazen * @throws userexception * ukolik trazen korisnik ne postoj"
"* * @return vrc sve mecev u sistem ."
"ist stvar rad metod * getallmatches ( ) . ne zna zast postoj ob ( gresk ! )"
"* proberav da li postoj ticket sa JMBG-om koj se traz * * @param jmbg * korisnik za kog se proverav * @return vrc tru ak postoj jmbg korisnik u tiket il fals ak ne * postoj"
"* metod koj serverthread obavestav kladionic da se korisnik odlogova . * ne mora nist da rad , al u nas slucaj ce da upis sve promen u * fajl ."
"* rad upisivanj svih podatk u fajl ."
"* cit sve fajlov i inicijalizuj vrednost"
"klas u koj se cuva svi podac o rad server . klas je singleton jer * treba da postoj sam jedn instac ov klas za vrem rad server ."
"* tabel svih mecev sa koj server rad"
"* generis xml element sa svim tiket * * @param dom * @return"
"* popunjav skup korisnik na osnov podatk iz xml fajl * * @param userlist"
"* tabel svih korisnik"
"* uz xml element i im tag i vrc vrednost tag"
"result ak postoj rezulta kreiram nod"
"* port na kom server slus"
"* br iznem na server pr pisanj u fajl"
"* im konfiguracijon fajl u koj su zapisan sve komand koj server * moz da prim"
"ignorisem prazn red"
"* klas kladionic"
"klas koj reprezentuj uplacen tiket ."
"* kolicin uplacen novc"
"* da li je korisnik ulogovan ?"
"ak ulaz nij setovan spolj"
"dont learn the self connections moz cak i posl svak prolaz da se primenjuj hebbianov pravi a ne sam nakon kupovin naprav vis varijant ak kupuj ond moz da se primenjj winner takes all hebbian learning"
"system . out . println ( key + """" -> """" + valu ) ;"
"return neuron ;"
"bias neuron ne racuna ulaz iz mrez jer"
"br celij ka gor"
"br celij ka dol"
"br celij u lev stran"
"br celij u desn stran"
"els if ( j < ( i + g*d-rl )) return fals ;"
"brojc celij sloj skupov ( fazifikacij )"
"brojc ulaz ( grup fuzzy"
"slučaj kad čvor im sam jedn dijet"
"f1 ( x , y ) = 10 * ( x ^ 2-y ) ^ 2 + ( 1-x ) ^ 2"
"f2 ( x , y ) = ( x-4 ) ^ 2 + 4 ( y-2 ) ^ 2"
"vratim na star"
"dekodiranj - proces pretvaranj binarn broj u realn ( u potencijaln rješenje ) , u granic dg , gg"
"max f7 ( xi ) = ( sumax ^ 2 ) ^ 0.25 * ."
"br clanov populacij"
"racun najgor ( u ov slucaj najvec ) vrijednost funkcij"
"racun index jedink koj im najmanj vrijednost funkcij"
"racun potreban br bitov na temelj preciznost i interva pretrazivanj"
"supstitucij unatrag ( u * x = y ) za i = n do 1 b [ i ] / = a [ i , i ] ; za j = 1 do i-1 b [ j ] - = a [ j , i ] * b [ i ] ;"
"traži najveći elem"
"setupnf ( ) ; reset ( ) ;"
"cltab . mtipfunkcij . mpara ostav na 0"
"ulazak u funkcij"
"ucita idn"
"ucita <deklaracija>"
"ucita <ZAREZ>"
"ucita <inicijalizator>"
"mora ce bit null"
"< deklariranj nizov >"
"taman dost da jav gresk ovdj dolj ."
"nij polj"
"nij niz znak"
"<lista_izraza_pridruzivanja>"
"ucita <izraz_pridruzivanja>"
"ucita D_ZAGRADA"
"definiraj funkcij"
"poziv funkcij"
"nemoguc pretvorb sa ` niz ( const char ) ` u ` niz ( char ) `"
"al ipak treba ucita ( plus | minus | OP_TILDA | OP_NEG )"
"kaz uput da <unarni_operator> ne treba provjerava ,"
"ucita <specifikator_tipa>"
"ucita <multiplikativni_izraz>"
"ucita ( OP_EQ | OP_NEQ )"
"ucita <bin_xili_izraz>"
"ispis u slucaj pogresk"
"for petlj ??"
"break i continu ??"
"tockazarez"
"ucita <prijevodna_jedinica>"
"kad smo nas ond :"
"odredjuj djelokrug deklaracij"
"oct , upitn dal se korist"
"idem od 1 do length ( ) - 1 jer navodnic su osiguran leksik"
"nesmij zavrsi prefiksiran"
"dosl je do pridruzivanj pa makn nul sa stog"
"mispisivc . dodajglobalnuvarijabl ( """" TEMP_ """" + Izrazi_Sem . mbrojaclabel ++ , """" dw % d 0 """" ) ;"
"vec dodan u izravn deklarator"
"makn smo dva pa je razlik sljedec :"
"makn sve stavljen argument sa stog"
"sam prv rekurzivn poziv moz na stog stavi"
"u globaln djelokrug"
"makn 2 sa stog i stav nov"
"ucita TOCKA_ZAREZ"
"mstog . remov ( mstog . siz ( ) -1 ) ;"
"makn return vrijednost sa stog"
"ne brisem"
"pretrazuj globaln djelokrug"
"jel spremljen vrijednost il adres"
"mora biti jedan od ov"
"ak nij"
"length mora biti 3"
"* @param prezim * the prezim to set"
"* @return the brzin"
"* @param brzin the brzin to set"
"* @param dodavanj the dodavanj to set"
"* * to string metod , za kompletn tim ."
"* funkcij dodajigrc koj pr proslijedjen igrc . * * @param noviigrc"
"ok dugm kad se menj profi"
"ovd"
"doda da rad sa list objekt tur"
"k. getosob ( ) . getim ( ) + """" """" + k. getosob ( ) . getprezim ( )"
"1 dvi """" """" ptdv """""
"postavi forma"
"komparator"
"postavi redosled"
"* ov klas sluz za predstavljanj jedn kalendar iz kojeg se uzima podac * za raspored ."
"@author ivan pribel"
"* ov klas sluz za cuvanj list vis kalendar iz koji se uzima podac za * raspored ."
"@author ivan pribel"
"nist , poruk o gresc je vec zapisan"
"prihvat englesk dvoslovn skracenic"
"{ } < { p } < { p , v } < { p , v , rv } < { p , rv } < { v } < { v , rv } < { rv }"
"* ov klas predstavlj vrem ka sat i min ."
"* pomocn klas koj sluz za zapisivanj poruk o grask i drug stvar ."
"zapis funkcij u vid list cij su element operand i operator"
"ka unarn operand se eventualn moz pojavi minus"
"stek koj koristim u pretvaranj infiks u postfiks"
"postfiksn oblik"
"ak nij unarn operand , sam id dalj pret = priv ;"
"pret = priv ;"
"ak posl unarn operand sled """" ( """" , za podfunkcij uzima sve sto je u zagrad"
"doda opcij da ak list im jedan element , vra tu vrednost i ne zov evalexp"
"ak je unarn , dodaj unarn"
"if ( akt ! = null ) akt . zavrs ( ) ;"
"dodaj ga ka binarn minus"
"@OneToMany ( cascad = { cascadetyp . all } , fetch = fetchtyp . lazy , mappedby = """" akcijskidogadjaj """" ) @JsonIgnore public set <KategorijaDogadjaj> kategorijadogadjaj ;"
"public kategorijaartikl nadkategorij ;"
"postav poslednj pravi za racun"
"pokren pravi"
"isprazn rezoner , kraj rad sa pravi"
"stavkaracun . setracun ( racunservic . findbyid ( stavkaracunadt . getracundt ( ) . getid ( ) ;"
"* Ćirilica *"
"* kapitalizuj slogotvorn r u zadat reči , ak postoj * <p> * * * @param word Reč koj treba obradi * * @return Reč sa kapitalizovan slogotvorn r *"
"* proverav da li reč sadrži samoglasnik / slogotvorn r * <p> ** @param word Reč koj treba obradi * * @return tru ak reč sadrži samoglasnik / slogotvorn r , fals u suprotn *"
"rules"
"stopset"
"* <p> * ov klas implementir stemer za hrvatsk """" simpl stemmer for croatian v0 . 1 """" nikol Ljubešića i ivan Pandžića . originaln implementacij u Python-u je dostupn na adres : * <br> * < a href = """" http://nlp.ffzg.hr/resources/tools/stemmer-for-croatian/ """" > http://nlp.ffzg.hr/resources/tools/stemmer-for-croatian/ </a> * </p> * <p> * stemer predstavlj poboljšanje ran algoritm opisan u rad : * <br> * retrieving information in croatian : building a simpl and efficient Rule-Based stemmer , nikol Ljubešić , damir boras , ozren kubelk , digita information and heritag , 313 – 320 ( 2007 ) . * </p> *"
"* @author vuk Batanović *"
"transformations . put ( """" nca """" , """" nca """" ) ;"
"Batanović : ponavljanj"
"list završetaka reči . * <p> *"
"* ak se naiđe na nek od stop-reči , on se preskače . u suprotn , sufiks reči se najpr transformiše a zat i uklanj . * <p> * < * @param word Reč koj treba obradi * <br> * @return stemovan reč * <br>"
"* konvertuj jedan karakter iz standardn oblik ( ćirilice il latinic ) u dual1 kodiranj . Miloševićev stemer ne implementir pun dual1 sist kodiranj - izostavlj konvertovanj ' lj ' i ' nj ' u ' ly ' i ' ny ' , pa je ov funkcij blag drugačija u odnos na on korišćenu kod stemer Kešelja i Šipke . * <p> * * @param intcharacter unicod kod karakter koj treba prevest u dual1 sist ** @param oldchar karakter koj je u tekst prethodi trenutn zadat karakter * * @return string koj sadrži dual1 reprezentacij zadat karakter *"
"* ak se rad o karakter ' j ' / ' j ' , ond je možda u pitanj de slov dj / dj * *"
"Batanović : ispravi sa ' aća ' na ' acy ' *"
"* stemuj sadržaj ulazn fajl i upisuj stemovan sadržaj u izlazn fajl * <p> * * @param fileinput im ulazn fajl * * @param fileoutput im izlazn fajl * > * @throws ioexception Označava grešku pr rad sa fajl *"
"* stemuj reč koj je napisan u standardn oblik ( ćirilicom il latinic ) * <p> * @param word Reč koj treba stemova ** @return stemovan reč *"
"* stemuj lin tekst koj je napisan u standardn oblik ( ćirilicom il latinic ) * <p> ** @param lin lin tekst koj treba obradi * <br> * @return lin tekst sa stemovan rečima *"
"* stemuj sadržaj ulazn fajl napisan u dual1 kodiranj i upisuj ga u izlazn fajl * <p> * @param fileinput im ulazn fajl * * @param fileoutput im izlazn fajl *"
"* konvertuj zada string ( reč il lin tekst ) iz standardn oblik ( ćirilice il latinic ) u dual1 kodiranj * <p> * <i> converts the given string ( a word or a lin of text ) fr the standard form ( in the cyrillic or latin script ) int the dual1 coding system </i> * @param wordorlin string napisan u standardn oblik * <br> <i> a string written in the standard form </i> * @return string napisan u dual1 kodiranj * <br> <i> a string written in the dual1 coding system </i>"
"* konvertuj sadržaj zadat ulazn fajl iz standardn oblik ( ćirilice il latinic ) u dual1 kodiranj i upisuj ga u zada izlazn fajl * <p> * @param fileinput ulazn fajl čiji je sadržaj zapisan u standardn oblik * * @param fileoutput izlazn fajl čiji sadržaj treba da bud zapisan u dual1 kodiranj *"
"klasican logistick model"
"tod pandas za ucitavanj . csv kin se izostavlj jer su podac pomeren 2 mesec unazad pa bi to utica na rezulta regresij"
"tod slajsovanj nizov"
"logistick"
"snimanj slik u fajl"
"neuspel parsiranj floatov u naucn notacij"
"crtanj rezultat"
"cuvanj rezultat u fajl"
"ovd se uzima prethodn rezulta regresij i korist se weighted mean za predikcij sutrasnjeg broj zarazen"
"tod : ovd im gresk da ne prepozna folder odakl treba da ucitav"
"prav npz i npy fajlov"
"tod : preimenuj kolon a , b , c u nek smislen imen , izdv datafram koj im kolon slik i opis"
"u ov del kod smo preimoenova kolin iz slov u img i description"
"tod : sacuva tezin"
"path = """" txt """""
"os . mkdir ( path )"
"!/ usr / bin / env python"
"coding : utf-8"
"data2 . to_csv ( ' / content / driv / my driv / colab notebooks / kv_projekat ' , index = fals )"
"x = tf . layers . conv2d_transpose ( x , kernel_size = 5 , filters = 128 , strides = 2 , padding = ' sam ' , activation = activation )"
"x = tf . imag . resize_images ( x , siz =[ 28 , 28 ] )"
"izbacen klipovanj jer ne utic pozitivn"
"clip_d = [ p. assign ( tf . clip_by_value ( p , -0.01 , 0.01 )) for p in vars_d ]"
"if g_ls * 1.5 < d_ls :"
"train_g = fals"
"train_d = fals"
"funkcij koj predstavlj diskriminator . ka ulaz uz originaln i generisan slik i pokusav da ih klasifikuj . vrc skalarn vrednost koj predstavlj 1 ak je slik prav i 0 ukolik je generisan . sastoj se od konvolucion slojev sa leakz-relu aktivacion funkcij ."
"importovanj bibliotek i baz podatk"
"obrad prirodn jezik"
"mapir functional podkomentar u sam functional"
"parametar c je 1 / lambd se automatsk podesav u niz param_c koj mora da je ist duzin"
"ka i br fold u unutrasnj unakrsn validacij"
"f1 za i-ti fold , jer se na kraj sveg racun statistik"
"tod ovd id model"
"resetovanj početnih kvaternion orijentacij"
"klas za obrad podatk sa xsens senzor . Nasleđena qthread klas komunicir sa klas koj vrši akvizicij podatk i obrađuje podatk . Obrađeni podac se zat upisuj u dokument i šalju na strimovanj u glavn gu ."
"signal koj služi za slanj podatk GUI-u"
"nasleđena metod run klas qtcor . qthread"
"računanje orijentacij u svim ravn na osnov kvaternion"
"računanje orijentisan ubrzanj na osnov orijentacij i lokaln ubrzanj senzor"
"path_acceleration =[ oriented_acc [ 0 ]]"
"detekcij pik"
"detekcij lokaln maksimum na lev noz"
"udaljenost u odbirc od prethodn marker"
"slanj podatk u gu"
"upisivanj podatk u fajl"
"čekanje 100 mikrosekund"
"metod u okvir koj se vrši akvizicij podatk poslat iz klas Reader_thread . svak tip podatk se čuva u odvojen bafer klas ."
"metod koj resetuj proces segmentacij"
"qtcor signal koj služi za komunikacij sa drug klas"
"metod koj generiše qtdesigner , služi za generisanj gu prozor . na kraj metod se poziv metod add_functionality koj uvezuj Widget-e GUI-a sa funkcij ."
"pr zatvaranj prozor pozov destruktor klas"
"pokreće proces povezivanj xsens senzor"
"dugm koj resetuj orijentacij senzor u prostor"
"prostor u okvir kog će se naći grafic"
"uključivanje / isključivanje snimanj u fajl"
"podešavanje boj pozadin regij za grafik u bel"
"dodavanj struktur za iscrtavanj , forma matric 3 * 2"
"grafik lev butin"
"grafik desn potkolenic"
"grafik lev stopa"
"grafik desn stopa"
"tod - korekcij boj i izbacivanj tr"
"popunjavanj struktur za prikaz frekvencij odabiranj , okvir i progress bar-ova"
"dodavnj struktur za iscrtavanj linj na grafik senzor koj odgovar lev potkolenic"
"dodavnj struktur za iscrtavanj linj na grafik senzor koj odgovar lev stopal"
"struktur za iscrtavanj marker"
"Nasleđena metod run klas qtcor . qthread . ponavlj se do prekid program i konstantn prikuplj podatk sa senzor . ukolik se prikup previše podatk sa jedn senzor odnosn prema sa drug podac se odbacuj . Veličina bafer do koj je dopušteno prikuplja podatk je deset paket po senzor ."
"dodavanj promenljv za potreb GUI-a"
"izbaci nepotrebn promenljiv"
"ponavlj dok im bar 6 podatk u intern bafer sistem"
"paket koj sadrži sve podatk vezan za jedan obirak sa jedn senzor"
"u okvir ov metod se poziva struktur iz bibliotek koj je razvijen u okvir mt softwar Suite-a"
"ukolik povezivanj sa senzor ne funkcioniše il prijavljuj grešku proverava funkcij iz ov metod"
"kreir se konstruktor"
"ispisivanj trenutn verzij xda struktur"
"ukolik je dužina naveden niz nul , ne postoj konektovan uređaj koj može da komunicir sa senzor"
"čuvanje početnih vrednost kvaternion orijentacij"
"ukolik je nemoguće otvori port , ispisa grešku i obustavi proces povezivanj"
"Podešavanje uređaja za komunikacij"
"podešavanje period odabiranj sistem"
"određivanje radi kanal za komunikacij odnosn frekvencijsk opseg na kom se komunikacij dešava"
"indikator završetka proces konekcij"
"funkcij koj omogućava da se update-uje prikaz konektovan senzor"
"odred potomk uređaja za komunikacij tj sam senzor"
"pokren proces akvizicij podatk"
"proveri mogućnost čuvanja podatk na senzor"
"print ( self . devic . startrecording ())"
"pravljenj i povezivanj klas za komunikacij sa senzor i obrad podatk"
"self . alternative_reader . setpriority ( 6 )"
"uvećavamo brojač"
"self . thread_read . setpriority ( 5 )"
"metod koj pr podatk od struktur za obrad podatk sa senzor u realn vremen . u okvir ov metod se u lokaln memorij GUI-a učitavaju podac iz struktur za obrad koj se kasn šalju na grafik ."
"podac o orijentisan ubrzanj"
"zasebn struktur koj obuhvat sve podatk koj će se iscrtava"
"tod izbaci koncept bilo kakv obrad iz GUI-dela"
"tod prebaci računanje dužine korak u struktur za procesiranj"
"računanje dužine korak"
"ukolik je aktivn marker na lev noz desn nog će mirova i računa se dužina korak desn nog"
"index senzor koj se nalaz na desn stopal"
"računanje brzin prost numeročkom integracij"
"uklanjanj drift iz brzin"
"računanje dužine korak desn nog"
"de za upisivanj u fajl koj treba proveri i izbaci , prebačen je u struktur za procesiranj"
"menj stanj aktivnost segmentacij"
"self . xsens_markers_left [ 0 ] = 2"
"pomoćna funkcij koj menj vrednost indikator za završetak proces povezivanj senzor"
"resetovanj orijentacij senzor . neophodn je senzor postavi na ravn površinu , orijentisan sve u ist smer . Duža ivic senzor treba da se pruža duž pravc koj predstavlj x os tj. os kretanj . smer x os se prostir od priključka za punjenj senzor ka vrh senzor . z os je orijentisan vertikaln od pod naviše . y os je orijentisan tak da koordinatn sist bud desn orijentisan ."
"funkcij koj menj stanj upisivanj u fajl"
"proveri da li si counter koirist i potencijaln ga izbaci"
"self . reccording = fals"
"pomoćna funkcij koj ispisuj dat string u prostor za text u okvir GUI-a"
"ukolik nij moguće ispiši grešku"
"funkcij koj se korist za vizualn prikaz podatk sa senzor postavljen na lev butin . prikaz podrazumev iscrtavanj orijentisan ubrzanj i uglov u odnos na os sagitaln , frontaln i transferzaln ravan ."
"prover da li se senzor namenjen lev butin nalaz u spisk povezan senzor"
"popunjavanj spisk indikator koj se čitaju sa checkbox-ova i određuju šta se iscrtav"
"određivanje vremensk interva rad estimacij frekvencij odabiranj"
"računanje procent fekvencij odabiranj u odnos na 100 hz , dakl 1 odgovar feekvencij od 100 hz dok 0 odgovar potpun prekid prenos podatk"
"smatrajući da frekvencij odabiranj uglavn ne pad ispod 90 hz računamo koeficijent za prikaz koj će ići od 0 do 1 spra 90 - 100 hz"
"podešavanje boj i veličine indikator frekvencij odabiranj spra prethodn izračunatih parametr"
"spra indikator iscrta odgovarajuće lin"
"analogn opis metod update1 sa tim što ov funkcij rad prikaz podatk vezan za desn butin"
"de je izvod signal gresk"
"svi signal im automatsk dodeljen funkcij raspodel sa gausov normaln raspodel"
"pravi za dobijanj izlazn signal za kontrolisanj"
"normalizacij referenc"
"model sistem"
"differenc = np . subtract ( referenc , output )"
"crtanj referenc , kontrolisan signal i kontroln signal"
"f-ja elips"
"brisanj iz star populacij"
"reprodukcij ukrstanj , roditelj se biraj tock rulet"
"mutacij"
"crtanj grafik"
"f-ja koj se maksimizuj al korist sharing , tak da se pretrazuj vec prostor"
"( ugao1 , ugao2 , ugao3 , fitness / sharing )"
"pm = 0.001"
"racunanj ponovn fitness funkcij ukljucujuc i sharing"
"( ugao1 , ugao2 , ugao3 , obican fitness , fitness sa sharing )"
"ispis najbolj jedink"
"zadatk gde se nalaz trouga sa najvec povrsin u elips"
"print ( ' najbolj trouga je theta1 = { } , theta2 = { } , theta3 = { } , are = { } ' . forma ( * population [ 0 ] ))"
"ispis cel populacij"
"paznj : podac verovatn nec biti stratifikovan"
"model . add ( k. layers . dens ( units = 300 , activation = ' rel ' ))"
"model . add ( k. layers . dens ( units = 200 , activation = ' softmax ' ))"
"test"
"implementacij neuraln mrez za klasifikacij tacak koj pripada krug poluprecnik 1 , obod sa njegov lev stran i obod sa njegov desn stran il prsten koj okruzuj sve 3 klas"
"print ( classes )"
"generisanj klas"
"print ( y_data )"
"funkcij koj se aproksimir"
"zadatk : isprojektova neuraln mrez sa cilj da oponas funkcij dve promenljiv f ( x , y ) = e ^ - x*sin ( y ) . izvrsi analiz kvalitet modeliranj za razlicit slozenost mrez , i na odgovarajuc nacin ilustrova dobijen rezulta ."
"f-ja sa 2 argument koj se aproksimir"
"generisanj 200 * 200 podatk"
"y_vals = [ ]"
"z_vals = [ ]"
"print ( current_x , current_y )"
"x_vals . append ( current_x )"
"model nn"
"u nastavk je de kod gde sam pokusa da iscrta funkcij da bi proveri rezulta al nisa uspe"
"h = plt . contourf ( x_vals , y_vals , model . predict ( nn_input , batch_size = 1 )) plt . show ( ) ig = plt . figur ( ) ax = plt . axes ( projection = ' 3 d ' ) # ax . plot_surface ( original_x , original_y , original_func , cmap = ' viridis ' , edgecolor = ' non ' ) # ax . plot_surface ( nn_input [ : , 0 ] , nn_input [ : , 1 ] , model . predict ( nn_input , batch_size = 1 ) , cmap = ' viridis ' , edgecolor = ' non ' ) plt . show ( )"
"f-ja koj se minimizuj"
"pm = 0.01"
"selekcij tock rulet , ne rad"
"gb_grid . best_params_"
"sad ispituj kak learning rat utic na tacnost u zavisnost od velicin ansamba , ka dodatn parametr ubaci sam min_samples_leaf i min_samples_split cij vrednost sam uzel iz grid search-a ."
"sto se tic learning rate-a vidi da su najbolj irezulta na test skup za lr = 0.1 , dok za lr = 0.5 tacnost rast na trening skup , al opad na test skupu-preobucavanje . za lr = 0.05 tacnost na trening i test skup je manj neg kad je lr = 0.1. u buduc razmatranj biram lr = 0.1. vid se da sto je lr vec , potrebn je manj staba da bi se dobi dobr tacnost"
"mesanj podatk i podel na ulaz i izlaz"
"nalazenj optimaln parametr prek GridSearch-a"
"tod : doda jos parametr u grid search za rand forest klasifikator"
"plt . plot ( n , scores_training )"
"plt . legend ( [ ' max_features = 1 ' , ' max_features = 2 ' , ' max_features = 4 ' ] )"
"plt . titl ( ' tacnost na trening skup ' )"
"najvec tacnost na trening i test skup je za max_features = 1"
"y = x [ : , 6 ]"
"x = x [ : , 0:6 ]"
"na osnov ov grafik mozem zakljucit da je najbolj dubin 5 , kak su rezulta na test skup najbolj , a osrednj su na trening skup ."
"prek ogrid search-a nalazim optimaln parametr"
"azurir tezin minimizacij funkcij gubitk parametr x : obelezj trening skup y : izlaz trening skup batch : indikator za batch"
"racun funkcij gubitk parametr : h : hipotez y : izlaz"
"vrs regresij , tj. predikcij parametr : X_test : obelezj test skup"
"treniranj model1 = logregression ( alph = 0.01 , max_n = max_n )"
"model1 . fit ( X_train1 , y_train1 . reshap ( len ( y_train ) , 1 ))"
"deli ukupan skup podatk na trening i test skup 80:20 , pot su kreiran tr trening skup gde izlaz y nem vrednost 0 , 1 i 2 , vec treniram sam da odvoji prv klas od drug dve , pot treniram da odvoji drug klas od prv i trec i na kraj treniram da odvoji trec klas od prv i drug ."
"kak su kolon predstavljen ka brojev , njih ubacuj u tabel , pot mesa skup podatk , gde prv 6 obelezj pripada X-u , a 7. kolon je y. na x dodajem kolon jedinic ."
"print ( y_pred2 )"
"testiranj na drug i trec klas"
"treniranj model2 = logregression ( alph = 0.01 , max_n = max_n , lr = 0.1 )"
"predikcij je model2 . predict ( X_test )"
"print ( lambd )"
"izdvajanj tr trening skup tj. izdvajanj po klas"
"sad gleda kolik su korelisan nas podac , racuna pirsonov koeficijent korelacij za svak featur iz X. na osnov dobijen rezultat zakljucuj da podac nis korelisan , stog ne treba da zanemaruj nijedan featur ."
"tod : promen parametr recim za krosvalidacij da bud drug br podel"
"lambd_opt = lambdas [ np . wher ( tacn == max ( tacn )) ]"
"print ( lambd_opt )"
"print ( max ( tacn ))"
"kad smo primeni L1 regularizacij za razlicit vrednost lambd . najbolj tacnost se dobij za lambd = 5.6 e-06 i iznos 0.88185."
"lambdas = np . linspac ( 0.01,0.01,10 )"
"tacn . append ( crossvalidation ( cv = 5 , lambd = lambd , reg = ' L2 ' ))"
"print ( tacn )"
"tod : kriv ne valj , tak da vid sta ne valj u kod"
"sad testiram algorita kad primen L2 regularizacij za razlicit vrednost lambd . najbolj tacnost se dobij za lambd = 5.6 e-06 i iznos 0.88185."
"racun fju gubitk parametr : x : obelezj trening skup y : izlaz trening skup"
"sad proverava da li su podac balansiran il nebalansiran . na osnov rezultat post nij znacajn razlik izmedj broj odbirak klas , zakljcuuj da su podac balansiran ."
"racun tacnost na osnov prediktovan i stvarn vrednost izlaz parametr : x : obelezj test skup y : stavrn izlaz test skup"
"print ( ' klas 0 im ' , np . sum ( y == 0 ) , ' odbirak , klas 1 im ' , np . sum ( y == 1 ) , ' odbirak , klas 2 im ' , np . sum ( y == 2 ) , ' odbirak ' )"
"model1 = softmaks ( batch = 32 )"
"y_pred1 = model1 . predict ( X_test )"
"tod : cuva rezulta u nek niz"
"poziv klas je model2 = softmaks ( batch = 64 )"
"tacnost je model2 . accuracy ( X_test , y_test )"
"ovd je upozorenj za krosvalidacij da su unet vec parametr i da se sam unes br podel"
"racun srednj vrednost parametr : x : vektor"
"racun standardn devijacij parametr : x : vektor"
"racun fi il verovatnoc pojavljivanj odredjen klas u cel skup x : element odredjen klas X_tr : ce trening skup"
"racun parametr za predikcij parametr : X_train : obelezj trening skup y_train : izlaz trening skup"
"poziv za gda je mi1 , mi2 , mi3 , sigma1 , sigma2 , sigma3 , fi1 , fi2 , fi3 = fit ( X_train , y_train )"
"predikcij za gda je y_pred = predict ( X_test , y_test )"
"ova algorita se brz izvrsav i tacnost iznos 91,42 % ."
"gausovsk naivn bajesov klasifikator"
"xn"
"xn =( np . column_stack (( np . ones ( len ( xn )) , xn )"
"sad testiram gotov funkcij na normalizovan podac i racuna tacnost i validacion kriv"
"prv radi za gam = 1 , inicijalizuj matric q na nul . pot primen belmanov jednacin za iterativn racunanj nov q u svak iteracij ."
"self . position =( self . position [ 0 ] , min ( np . siz ( self . q , 1 ) -1 , self . position [ 1 ] +1 ))"
"sta = mpo . train ( )"
"q ucenj"
"ovd ne zna verovatnoc unapred i cel map , pozna su nam nagrad za svak pozicij u q i iznos -0.04 i za tacan kraj 1 il pogresan kraj -1."
"biram sa verovatnoc epsilon da li cem akcij izabra nasumicn il gramziv pretrag ka argmax ( q ( s , a ))"
"self . q [ self . sta [ 0 ] , max ( 0 , self . sta [ 1 ] -1 ) ] , self . q [ self . sta [ 0 ] , min ( self . sta [ 1 ] +1 , np . siz ( self . q , 1 ) -1 ) ] )"
"markovljev proces odlucivanj atribut : gamm : parametar u belmanov jednacin num_iter : br iteracij metod : take_action : odredjivanj sledec akcij train : resavanj belmanov jednacin za nov stanj plot_states : iscrtavanj stanj po iteracij"
"mpo = Q_learning ( )"
"na osnov dat grafik , mozem zakljucit da ak sa vec epsilon odnosn vec verovatnoc biram gramziv strategij , to ce nam rezulta biti vis sumovit"
"mpo = Q_learning ( alph = 0.3 )"
"ak uporedi ov dva grafik , mozem videt da sto je manj learning rat , to su manj sumovit rezulta , al se sporij konvergir , stog zadrzava vrednost $ \ alph $ = 0."
"poziv q learning model mpo = Q_learning ( adaptiv = 1 )"
"optimaln putanj je gor , gor , desn , desn , desn , posl otprilik 50 serij potrebn je da se dostign optimaln putanj , odnosn da se usta kriv na grafik ."
"odlucivanj koj je sledec akcij i prelazak u nov stanj parametr : s : stanj a : akcij"
"self . next =( s [ 0 ] , min ( s [ 1 ] +1 , np . siz ( self . q , 1 ) -1 ))"
"im 4 x3 tabel sa polj i treba da naucim model da dodj optimaln putanj od start ( 1,1 ) do kraj , nagrad za pozicij ( 4,2 ) i ( 4,3 ) su -1 i 1 respektivn , dok su nagrade ostali slucaj -0.04. takodj , im zid na pozicij ( 2,2 ) . agent mozem da pomeram napred , nazad , lev i desn i ak dodj do zid ostaj u ist pozicij ."
"resavanj belmanov jednacin i na taj nacin generisanj koj je nov stanj na osnov odredjen akcij parametr : nem"
"tod : umest moj funck za racunanj polinom iskorist on iz scikit-learn-a"
"linearn bez regularizacij i sa krosvalidacij"
"linearn sa krosvalidacij i bez regularizacij"
"racunanj stohastick gradijentn spust parametr : w : tezin za lokaln ponderisan regresij tet : tezin max_n : br iteracij alph : stop ucenj reg : tip regularizacij lambd : koeficijent regualrizacij"
"predikcij lokaln pinderisan regresij parametr : X_train : obelezj trening skup X_test : obelezj test skup y_train : izlaz trening skup y_test : izlaz test skup max_n : br iteracij alph : stop ucenj reg : tip regularizacij lambd : koeficijent regularizacij"
"weight parametar"
"index = np . wher ( error == min ( error ))"
"primer predikcij za lokaln ponderisan linearn regresij y_pred = lwlr_predict ( X_train , X_test , y_train , y_test , ta , epsilon , max_n , alph , reg , lambd )"
"ta iz regularizacij"
"ova de kod koj racun polin nij tacan , tak da treba koristit ugradjen funkcij iz sklearn-a"
"kod q learning-a nis dobr uslov sto se vid po grafic , tak da ov rezulta ne treba uzima u obzir"
"pozivanj srednj kvadratn gresk error . append ( mse ( y_pred , y_test ))"
"racunanj srednj kvadratn gresk 2 parametr : y_pred : prediktovan vrednost y_test : stvarn izlaz"
"val . append ( crossvalidation ( cv , ' lwlr_predict ' , lambd , reg = reg , ta = ta )"
"print ( val )"
"polinomijaln regresij parametr : X_train : obelezj trening skup y_tr : izlaz trening skup y_t : izlaz test skup X_t : obelezj test skup dg : stepen polinom lambd : koeficijent regularizacij reg : tip regularizacij"
"print ( min ( error ) , min ( val ))"
"val [ 1 ]"
"cv = 5"
"krosvalidacij parametr : cv : br jednak delov trening skup function : vrst regresij da li je linearn , polinomijaln il lokaln ponderisan lambd : koeficijent regularizacij reg : tip regularizacij ta : parametar ta za racunanj lokaln ponderisan regresij"
"parametr : kernel : tip kernel c : koeficijent regularizacij sigm : standardn devijacij"
"racun kernel parametr : x : prv vektor y : drug vektor kernel_type : tip kerel , gausovsk il linearn"
"g = cvxopt . matrix ( np . vstack (( np . identity ( len ( x )) * -1 , np . identity ( len ( x )"
"h = cvxopt . matrix ( np . hstack (( np . zeros ( len ( x )) , np . ones ( len ( x )) * self . c )"
"racunanj matric konfuzij parametr : y_test : izlaz test skup y_pred : predikcij"
"menja sigm za fiksn c"
"pozivanj svm model clf = svm ( c = 2 , kernel = ' rbf ' , sigm = sigm )"
"clf . fit ( X_train , y_train ) treniranj model"
"mozem kad pozovem konstruktor klas da pristupi tezin ka clf . tet"
"sigmas [ idx ]"
"menja c za prethodn odredjen sigm = 1.112"
"kolon su ucitan ka nek brojev"
"precision1 , recall1 , f11 , precision2 , recall2 , f12 , acc , conf_mat1 , conf_mat2 = clf . matrix_confusion ( y_test , y_pred )"
"x = X. to_numpy ( )"
"np . rand . shuffl ( x )"
"kak se vid da su vrednost feature-ova razlicit , potrebn je normalizova podatk"
"__copyright__ = """" copyright 2007 , the cogent project """""
"sad kreiram klas svm za izvrsavanj support vector machine-a ."
"ovd sad pis detaljn"
"najbolj parametr za rand forest rf_grid . best_params"
"racunanj tacnost za rand forest je rfc . scor ( X_test , y_test )"
"percent = dat . isnull ( ) . sum ( ) . sort_values ( ascending = fals ) / len ( dat )"
"missing = pd . conca ( [ tota , percent ] , axis = 1 , keys =[ ' tota ' , ' percent ' ] )"
"dat = dat . drop ( columns =[ ' survived ' , ' passengerid ' ] )"
"scatter_matrix ( x )"
"clf_sets = [ ( linearsvc ( penalty = ' l1 ' , loss = ' squared_hinge ' , dua = fals , parameters = { ' kernel ' :( ' linear ' , ' rbf ' ) , ' c ' :[ 1 , 10 ] } )"
"X_train , y_train ) ]"
"for clf , parameters in clf_sets :"
"cv = 5 )"
"grid . fit ( X_test , y_test )"
"standardizacij i normalizacij"
"normalizacij je kad uzm x i podel sa sum aps vrednost il koren sum kvadrat rez je od 0 do"
"norm2 = normaliz ( x , norm = ' l2 ' )"
"print ( ' 2 ' , norm2 [ 0:5 , :] )"
"predstavlj ka razlik izmedj objekt , objekt koj su slicn su bliz na grafik"
"metod za vizuelizacij podatk"
"ax = sns . boxplot ( x = dat [ ' estimatedsalary ' ] )"
"paramgrid = [ { ' nestimators ' : [ 100,500,10 ] , ' learning"
"mesh grid i contourf"
"mesh grid mora da se urad pr contourf a contourf dobij parametr iz grid i granic prediktor i moz da se dod scatter da se vid gde su odbirc npr."
"np . arang ( X_train [ : , 1 ] . min ( ) -1 , X_train [ : , 1 ] . max ( ) +1 , step = 0.01 ))"
"plt . scatter ( X_test [ y_test == 1,0 ] , X_test [ y_test == 1,1 ] , color = ' red ' )"
"plt . scatter ( X_test [ y_test == 0,0 ] , X_test [ y_test == 0,1 ] , color = ' blu ' )"
"xgb . plot_importance ( xg_reg )"
"kolik filmov im po zanr"
"genre_occurences = movies [ genre_cols ] . sum ( ) . to_dict ( )"
"kreiranj dataframe za svim podac iz movielens"
"podel na trening i test skup parametr : df : datafram holdout_fraction : velicin podel"
"tod : urad nek analiz podatk i predobrad , kak ov baz su korelisan"
"movies_ratings = movies . merg ("
". agg ( { ' rating ' : [ ' count ' , ' mean ' ] } )"
"on = ' movie_id ' )"
"filmov sa najbolj rating al da je vis od 20 ljud glasa"
"movies_ratings [[ ' movie_id ' , ' rating count ' , ' rating mean ' ]] . mask ( ' rating count ' , lambd x : x > 20 ) . sort_values ( ' rating mean ' , ascending = fals ) . head ( )"
"prikaz broj glasov po zanrov filmov"
"mr = movies_ratings [[ ' movie_id ' , ' rating count ' , ' rating mean ' , ' genr ' ]] . sort_values ( ' rating count ' , ascending = fals )"
"mr1 = mr. groupby ( ' genr ' , as_index = fals ) . agg ( { ' rating count ' :[ ' sum ' ] } )"
"mr1"
"import tensorflow as tf"
"filtriranj u okvir ov fje"
"pravljenj matric faktorizacij parametr : ratings_df : velik datafram koj sadrz rejting , korisnik i filmov"
"return df [ function ( df [ key ] ) ]"
"def train ( self , num_iterations = 100 , learning_rate = 1.0 , plot_results = tru , optimizer = tf . train . gradientdescentoptimizer ) :"
"azuriranj tezin parametr : num_iterations : br iteracij learning_rate : stop ucenj plot_results : indikator da li rezulta treba da se iscrtaj optimizer : tehnik optimizacije-gradijentni spust"
"tod : proba da napravis bez tensorflow model"
"! pip install -- upgrad - q gspread"
"fr googl . colab import auth"
"mod =( model . metrics_vals [ 0 ] )"
"plt . titl ( ' gresk na trening i test skup ' )"
"plt . ylabel ( ' mse ' )"
"plt . legend ( leg )"
"fr oauth2client . client import googlecredentials"
"pretrag ID-ja film za dat podstring parametr : model : istreniran model title_substring : podstring titl measur : metrik slicnost k : kolik najslicn se ostavlj"
"za movi recommendation system koristim movielens baz , koj im movies , rating i users tabel . rating je u opseg od 0 do 5."
"metrik mod =( model2 . metrics_vals [ 0 ] )"
"ucita svak baz podatk ( korisnik , filmov , rejting ) ."
"baz sa filmov im kolon sa zanrov"
"genre_cols = ["
"ratings , regularization_coeff = 0.1 , gravity_coeff = 0.1 , embedding_dim = 35 ,"
"reg_model . train ( num_iterations = 700 , learning_rate = 20. )"
"crim , """" documentary """" , """" dram """" , """" fantasy """" , """" Film-Noir """" , """" horror """" ,"
"musica , """" mystery """" , """" romanc """" , """" Sci-Fi """" , """" thriller """" , """" war """" , """" western """""
"mne bibliotek koj može da učita forma eeg snimak"
"učitavanje fajlov i izlistavanj po direktorijum"
"potrebn promeni spra repozitorijum na svom računaru"
"izdvajanj frekvencij odabiranj"
"izdvajanj usrednjen kanal"
"korišćene vrednost parametr za welch funkcij su preporučene"
"uticaj primen različitih vrednost parametr za welch estimator može biti velik na izlazn estimacij spektr"
"traženje individualizovan frekvencij alf talas se traži pomoću otežinjene srednj vrednost"
"ispita drug metod izvlačenja iaf frekvencij"
"slik koj predstavlj skup obeležja"
"u okvir ov baz se to opravdav činjenicom da zadnj 4 kanal predstavlja ne-EEG signal , spra tip snimak bi se odbaciva više il manj kanal u drug slučajevima"
"iščitavamo podatk za dat kanal iz sirov snimk"
"welch estimator spektr"
"pogleda napomen u lin kod 47"
"Tražimo snag aktivnost različitih moždanih talas"
"potrebn je ispita na koj način promen opseg moždanih talas u frekvencijk opseg utiču"
"naveden opsez su pronađeni u literatur korišćenoj u okvir projekt"
"normiran vrednost aktivnost talas se postavlja na 3 kanal boj u okvir slik koj predstavlj obeležja"
"progra za izvlačenje obeležja iz eeg signal"
"prikaz slik"
"čuvanje slik"
"učitavanje baz podatk"
"izvlačenje slik koj predstavlja eeg obeležja"
"u dalj rad obeležja mogu biti mal vide snimc"
"prolazim kroz sve slik"
"interpoliram"
"progra za interpolacij slik koj predstavlj eeg obeležja"
"potencijaln izbaci"
"iaf predstavlj individualizovan alf frekvencij i računa se u program feature_extraction . py"
"u ov del kod se posebn izdvaj 28. dokument iz razlog što je na njem kanal koj nos podatk o status specifičan"
"učitava se sirov fajl"
"ova kod koriguj odsustv naziv kanal"
"izaber podatk sa statusn kanal"
"izdvaja indeks koj predstavlja početak snimanj"
"podešavanje period odabirnaj"
"podešavanje standard"
"učitavamo i biram min snimk"
"filtriram snimak u opseg od 2 do 40 hz"
"ova de kod se najduže izvršava"
"ic analiz razdvaj snimak na nezavisn komponent i služi za odbacivanj on komponent koj su odgovorn za eog artefakt"
"ic . plot_scores ( scores_eog )"
"bibliotek koj čita forma u kom su zapisan eeg signal"
"funkcij koj predstavlj neuraln mrežu koj vrši klasifikacij na osnov izvučenih obeležja u form slik . Mreža je realizovan ka niz konvolucion i maks pooling slojev . funkcij uz na ulaz slik ka obeležje i izbacuj klas ."
"one_hot_y [ np . arang ( y. siz ) , y ] = print ( ' acc train : ' , acc_train [ i ] , ' acc test : ' , acc_test [ i ] ) acc_train [ i ] = sum (( np . argmax ( output , axis = 1 ) == np . argmax ( one_hot_y , axis = 1 ) / len ( train_df )"
"k = k output = sess . run ( classes_output , feed_dict = { input_placeholder : get_data ( tabl , batch_size ) , output_placeholder : output_values , is_training : fals } ) acc = sum (( np . argmax ( output , axis = 1 ) == np . argmax ( output_values , axis = 1 ) / batch_size if ( k % 20 == 0 ) : #loss_value = sess . run ( loss , feed_dict = { input_placeholder : get_data ( tabl , batch_size ) , output_placeholder : output_values , is_training : fals } ) output = sess . run ( classes_output , feed_dict = { input_placeholder : get_data ( tabl , batch_size ) , output_placeholder : output_values , is_training : fals } ) acc = sum (( np . argmax ( output , axis = 1 ) == np . argmax ( output_values , axis = 1 ) / batch_size print ( ' accuracy after : ' + str ( k ) + ' iterations ' + str ( acc ) + ' ( on rand sampl ) ' ) #print ( output [ rand . randint ( 0,30 ) ] ) print ( ' accuracy after : ' + str ( acc ) + ' ( ' + str ( k ) + ' iterations needed ) ' ) #saver.save ( sess , ' ./ model . ckpt ' ) saver . sav ( sess , ' ../ input / model . ckpt ' ) y = y. astyp ( ' int ' ) one_hot_y = np . zeros (( y. siz , y. max ( ) +1 ))"
"one_hot_y [ np . arang ( y. siz ) , y ] = stored_outputs [ : , current_network_index ] = np . squeez ( sess . run ( classes_output , feed_dict = { input_placeholder : converted_x , output_placeholder : y , learned_features : learned } )) print ('#') print ( np . mean (( np . mean ( stored_outputs , axis = 1 ) > 0 ) == ( y > 0 ) print ('#') saver . sav ( sess , ' d :/ Neuralno_inzenjerstvo / projekt / trained_ensemble / model ' + str ( current_network_index +1 ) + ' . ckpt ' ) y = y. astyp ( ' int ' ) one_hot_y = np . zeros (( y. siz , y. max ( ) +1 ))"
"trenutn verzij kod predviđa slik ka ulaz a sledeće verzij će potencijaln imat nizov slik"
"input_layer = tf . reshap ( input_values , [ -1,9,9,3 ] )"
"conv2 = tf . layers . conv2d ( inputs = pooling1 , filters = 6 , strides =[ 1,1 ] , kernel_size =[ 3 , 3 ] , padding = """" sam """" , activation = tf . nn. tanh , kernel_regularizer = tf . contrib . layers . l1_regularizer ( 0.001 ) , kernel_initializer = tf . random_normal_initializer , bias_initializer = tf . random_normal_initializer )"
"pooling2 = tf . layers . max_pooling2d ( inputs = conv2 , pool_size =[ 5,5 ] , strides =[ 2,2 ] , padding = """" sam """" )"
"conv3 = tf . layers . conv2d ( inputs = conv2 , filters = 5 , strides =[ 3,3 ] , kernel_size =[ 3 , 3 ] , padding = """" sam """" , activation = tf . nn. tanh , kernel_regularizer = tf . contrib . layers . l1_regularizer ( 0.001 ))"
"print ( flat . shap )"
"combined = tf . keras . layers . concatena ( [ flat_input , flat ] )"
"drop2 = tf . keras . layers . dropout ( rat = 0.6 ) ( dense_layer1 )"
"dense_layer2 = tf . layers . dens ( inputs = dense_layer1 , units = 10 , activation = tf . nn. tanh , kernel_regularizer = tf . contrib . layers . l1_regularizer ( 0.001 ) , kernel_initializer = tf . random_normal_initializer )"
"tensorflow verzij 1.15"
"@author : tijanav"
"promeni direktorijum po potreb"
"frequency prikazuj kolik put se javlj rec word u cel baz"
"projekt iz predmet obrad prirodn jezik"
"Učitavanje baz"
"po potreb doda parametar header = non ukolik nis upisan naziv kolon u dokument"
"baz podatk u koj će se nalazit enkodovan komentar i klas komentar"
"prolazak kroz baz rad enkodovanj komentar i upisivanj u nov baz"
"pronađi indeks na koj se nalaz reči iz komentar i postav jedinic u enkoding na odgovarajuća mest"
"prover enkodovanj komentar"
"projekt iz obrad prirodn jezik"
"predprocesiranj za običan bag of words model"
"nov baz podatk"
"prover da li je komentar validan"
"ukolik komentar sadrži bar dve reči izdvaja bigram"
"prolazak kroz cel baz rad enkodovanj"
"dodavanj nov komentar u baz"
"izdvanjanj podatk iz baz u form niz za potreb dalj analiz"
"predprocesiranj komentar u form bigram"
"po potreb menja direktorijum dokument"
"tf_df = pd . datafram ( [ ] , columns =[ ' comment ' , ' label ' ] )"
"Rečnik koj sadrži unikatn vrednost iz baz"
"tf_idf je kad pomnozim tf i idf"
"tf_df = tf_df . append ( { ' comment ' : tf , ' label ' : df . loc [ i ] [ 6 ] } , ignore_index = tru )"
"tf_idf_df = tf_idf_df . append ( { ' comment ' : tf_idf , ' label ' : df . loc [ i ] [ 6 ] } , ignore_index = tru )"
"izmenja po potredb direktorijum"
"promeni naziv nov baz da se uklap sa tip predprocesiranj"
"created on thu jun 25 21:41:30 2020"
"jesam"
"glagol moći"
"tokeniz only words larger than 2 characters , apart fr moda verbs"
"prav gresk kod peva"
"bilo ik"
"mozd treba az , pokaza , pokazx"
"created on thu jun 25 22:31:59 2020"
"@autor : ivanv projekt iz obrad prirodn jezik"
"atomicn wri u vec otvoren fajl"
"nasumicn raspodel duzin posl"
"x = [ 1,1,2 ]"
"iterativn postupak"
"funkcij solvegn formir Godon-Newell-ove jednacin i resav ih tak da se normalizacij vrši prem prv resurs koj je procesor"
"funkcij koj određuje g ( n ) bjuzenov metod"
"p00 = 0 , p01 = 0.15 , p02 = 0.15 , p0 [ rang ( 3 , k +4 ) ] = 0.7 / k p10 = 0.5 , p11 = 0 , p12 = 0 , p1 [ rang ( 3 , k +4 ) ] = 0.5 / k p20 = 0.5 , p21 = 0 , p22 = 0 , p2 [ rang ( 3 , k +4 ) ] = 0.5 / k p [ rang 3 , k +4 ] 0 = 1 , p [ rang 3 , k +4 ] * = 0"
"eksponencijaln raspodel duzin posl"
"blokirajuc fif bafer u koj se cuva neopsluzen poslov"
"klasn flag koj obavestav da li je proesor zavrsi tj da li je gotov simulacij"
"cel simulacij je gotov , prolazenj kroz poslov u red"
"redefinis se u klas koj izvod resurs"
"0.7 > rand > 0"
"formatiranj za id uniform ( 0 to k ) +3"
"50 % cpu 50 % som of user discs"
"pronalazenj procesor cij je id = 0"
"100 % cpu"
"globaln prosek vremen trajanj poslov"
"ne treba da se racun u inicijaln stanj"
"racunanj prosecn trajanj opsluzivanj poslov"
"work se startuj u run ( ) metod"
"prosecan br poslov u resurs"
"sam kod procesor"
"dummy poslov postoj da bi svi poslov obisl ce krug u sistem i zavrsi kod procesor"
"procesor je zavrsi"
"dohvatanj procesorsk parametr nakon simulacij"
"id sistemsk disk"
"id drug sistemsk disk"
"ciscenj parametr resurs i rezultat simulacij za ponovn pokretanj"
"povezivanj resurs"
"ucitavanj poslov"
"inicijalizacij"
"params = { ' max_depth ' :[ 3,5,8,12 ] }"
"dtr = decisiontreeregressor ( max_depth = 8 )"
"dtr . fit ( X_train , y_train )"
"map . resiz (( 172,172 ))"
"map . resiz (( 2 , 1 ))"
"img . thumbnai ( siz )"
"map = np . array ( img )"
"window_sum = _window_sum_2d ( imag , window_shape )"
"window_sum = np . cumsum ( window_sum , axis = 2 )"
"window_sum = ( window_sum [ : , : , window_shape [ 2 ] : -1 ]"
"return window_sum"
"frames = np . intersect1d ( jointframes , bbframes )"
"xbb = bboxes [ ' frames ' ] [ i ] [ ' bounding_boxes ' ] [ j ] [ ' bounding_box ' ] [ ' x ' ]"
"print ( matches )"
"for j in rang ( i +1 , len ( occurcount )) :"
"if ( len ( occurcount [ list ( occurcount . keys ()) [ i ]] ) == len ( occurcount [ list ( occurcount . keys ()) [ j ]] ) and ( occurcount [ list ( occurcount . keys ()) [ i ]] == occurcount [ list ( occurcount . keys ()) [ j ]] ) . all ())"
"niz . append ( list ( occurcount . keys ()) [ j ] )"
"if niz :"
"sam [ i ] = niz"
"print ( ' uniquevalues , ' , matches )"
"del matches [ list ( uniquevalues . keys ()) [ j ]]"
"del uniquevalues [ list ( uniquevalues . keys ()) [ j ]]"
"if ( uniquevalues [ list ( uniquevalues . keys ()) [ i ]] > = uniquevalues [ list ( uniquevalues . keys ()) [ j ]] [ 0 ] and i ! = j )"
"uniquevalues [ list ( uniquevalues . keys ()) [ j ]] = uniquevalues [ list ( uniquevalues . keys ()) [ j ]] [ 1 :"
"matches [ sam [ list ( sam ) [ i ]] [ j ]]"
"sam [ list ( sam ) [ i ]] [ j ]"
"for j in rang ( len ( bboxes [ ' frames ' ] [ ind ] )) :"
"x =[ 1,2,5 ]"
"y =[ 1,3,5 ]"
"f = interp1d ( x , y , fill_value = """" extrapolat """" )"
"f ( 6 )"
"if ( np . shap ( joints [ ' frames ' ] [ j ] [ ' joints ' ] )) :"
"if ( joints [ ' frames ' ] [ j ] [ ' joints ' ] [ k ] [ ' identity ' ] == i ) :"
"for i in matches . keys ( ) :"
"bboxes [ ' frames ' ] [ j ] [ ' bounding_boxes ' ] [ k ]"
"for j in solo_joint . keys ( ) :"
"if ( solo_bb [ i ] == solo_joint [ j ] [ ' frames ' ] ) :"
"s + = matches [ i ]"
"s + = """" : """""
"s + = i"
"print ( s )"
"for i in index . keys ( ) :"
"niz = np . argsort ( fr1 [ sam [ 1 ] [ j ]] [ 0 : len ( sam [ 1 ] ) ] )"
"np . sort ( fr1 [ sam [ 1 ] [ j ]] [ 0 : len ( sam [ 1 ] ) ] )"
"import matplotlib . pyplot as plt"
"features [ i , j , 0 ] = np . mean ( map_img [ i +20 : i +40 , j : j +20,0 ] )"
"features [ i , j , 0 ] = np . mean ( map_img [ i : i +20 , j +20 : j +40,0 ] )"
"funkcij koj proverav da li okvir obuhvat dat tačku"
"učitavanje okvir"
"prolazak kroz frejmov"
"for i in rang ( 26 ) :"
"poziv funkcij animacij"
"kreiraj os"
"kreiraj pravougaonik"
"kreiraj tačke #"
"funkcij inicijalizacij"
"klas koj služi za animacij okvir . sastoj se od konstruktor , funkcij inicijalizacij , funkcij animacij i funkcij za poziv animacij ."
"plt . imshow ( mask_display > 2 )"
"izdvajanj fajlov"
"list dokument"
"prolaz kroz sva dokument"
"odgovor"
"izlaz"
"img_features [ 1 ] = np . mean ( img [ 0 : patch_h , patch_w // 4 : patch_w // 2 , 1 ] )"
"postoj vis metod za pretvaranj u numerick promenljiv : on hot encodding ( sa pd . get_dummies ) , cust binary encoding , find and replac ( manj vis ov je rucn ) ."
"metod koj ce se koristit u ov projekt su :"
"rand forest , autoenkoder i korelacij izmedj obelezj"
"1. rand forest"
"napravi rand forest regresor koj se istrenir na trening podac ( ulaz i izlaz ) , pot se odred pomoc ugradjen funkcij kolik su bitn obelezj i na osnov grafik koj iscrtava odredi kolik obelezj zeli da zadrzim . u ov slucaj odluci sam se da zadrz 9 obelezj ."
"rand forest regresij parametr : train2 : trening skup max_depth : najvec dubin stabl br : kolik najbolj obelezj se zadrzav"
"encoded1 = dens ( 30 , activation = ' rel ' ) ( input_dim )"
"encoded3 = dens ( 2500 , activation = ' rel ' ) ( encoded2 )"
"encoded7 = dens ( 1500 , activation = ' rel ' ) ( encoded6 )"
"encoded8 = dens ( 1250 , activation = ' rel ' ) ( encoded7 )"
"encoded10 = dens ( 750 , activation = ' rel ' ) ( encoded9 )"
"encoded11 = dens ( 500 , activation = ' rel ' ) ( encoded10 )"
"3. izbacivanj korelacij izmedj feature-a"
"selektovanj gornjeg trougl matric korelacij"
"nalazenj indeks obelezj sa korelacij vec od 0.95"
"izdvaja obelezj sa sve 3 metod redukcij dimenzij , pot deli na trening i test skup 80:20."
"nalazenj feature-a sa korelacij vec od 0.95"
"ak zeli regresij ne koristim ov kvanti"
"print ( np . sqrt ( - grid_rf . best_score_ ))"
"1. rand forest redukcij"
"2. redukcij autoenkoder"
"3. redukcij korelacij"
"koriscenj korelacij nbc_obicno . upda ( [ ( ' korelacij ' , tacn_corr ) ] )"
"4. bez redukcij"
"tod : logaritamsk skaliraj obelezj"
"plt . xticks ( rang ( len ( nbc_log )) , list ( nbc_log . keys ( )"
"plt . titl ( ' naiv bayes klasifikator i obelezj logaritamsk ' )"
"zamen ' nan ' sa ' non '"
"row_count = sum ( 1 for row in csv_reader )"
"print ( """" row_count is """" , row_count )"
"print ( """" batch_size is """" , batch_size )"
"dat . shap [ 0 ] = 20 , dat . shap [ 1 ] = 160"
"print ( """" len of lines should be """" , batch_size , """" and is """" , len ( lines ))"
"deljenj 160 odlik u 4 put po 40 , ukupn 20 uzorak se povecav na 80"
"print ( dat [ 0 ] )"
"za rucn testiranj"
"print ( dat )"
"plt . plot ( normalized . tolist ())"
"mesanj podatk"
"pisanj u csv izmesan podatk za obucavanj"
"dat = np . reshap ( dat , ( dat . shap [ 0 ] / 2 , 2 , dat . shap [ 1 ] ))"
"returns list of batch_size elements"
", validation_split = 0.01"
"model . add ( k. layers . lstm ( units = 200 , return_sequences = tru , )) model . add ( k. layers . lstm ( units = 300 , return_sequences = tru )) model . add ( k. layers . batchnormalization ()) model . add ( k. layers . activation ( ' sigmoid ' )) model . add ( k. layers . dropout ( 0.2 )) model . add ( k. layers . timedistributed ( k. layers . dens ( units = 300 ) model . add ( k. layers . timedistributed ( k. layers . dens ( units = 50 ) model . add ( k. layers . dens ( units = 30 , activation = ' sigmoid ' )) model . add ( k. layers . dens ( units = 21 , activation = ' softmax ' )) model . add ( k. layers . lstm ( units = 21 , return_sequences = fals ))"
"balansiran model , stateful je sa 4 becev po jedn podatk"
"input_shape =( 40 , 1 ) ,"
"self . distribution . load_freq_from_text ( self . ciphertext )"
"glavn funkcij koj pomoc opsian algoritm dekriptuj tekst kriptovan supstitucij"
"step"
"tod swap e sa e daj net == 0 , swap q sa q daj net ! = 0"
"inicijalizacij celog algoritm"
"parsiranj frekvencij pojavljivanj simbol u englesk jezik , fajl sadrz onegram i bigram"
"relativn frekvencij za temp_key u tekst"
"parsiranj bigram"
"dekripcij jednok kriptovan karakter k sa supstitucijsk kljuc k"
"import cryptanalysis . monoalphabetic . freq_matrix as freq_matrix"
"enkriptovanj plaintext sa kljuc key"
"def analize_plaintext ( plaintext ) : plaintext = transform ( plaintext ) expected = freq_matrix . freqmatrix ( ) expected . load_expected_bigram_file ( ) distribution = freq_matrix . freqmatrix ( )"
"funkcij koj izdvaj sam alfabetsk karakter"
"print ( key )"
"karakter iz cipher [ i ] se korist da se dobij pozicij plaintext karakter u kljuc"
"plain = """" lor ipsum is simply dummy text of the printing and typesetting industry . """" key = """" key """" c = encrypt ( plain , 1 ) print ( c ) print ( decrypt ( c , 1 ))"
"print ( """" reading lin """" )"
"glavn tip podatk u koj se cuva matric sa frekvencij pojavljivanj bigram"
"ucitavanj bigramsk frekvencij iz fajl"
"zamen red i kolon u matric"
"self . swap_indexes ( char1 , char2 )"
"ucitav tekst i racun frekvencij"
"self . matrix [ map . mapping [ k [ 0 ]] , map . mapping [ k [ 1 ] = v / len ( text )"
"diff + = abs ( self . matrix [ self . indexes . find ( decrypt_mono ( char1 , key )) , self . indexes . find ( decrypt_mono ( char2 , key )) ] - expected_matrix . matrix [ expected_matrix . indexes . find ( char1 ) , expected_matrix . indexes . find ( char2 ) ] )"
"t = freqmatrix ( ) t. load_freq_from_text ( transform ( """" etaoatotoatataotteoataetoaotoatoeoteotatet """" )) t. print_indexes ( ) t. print_matrix ( ) print ('*') t. swap_cols_rows ( ' e ' , ' t ' ) t. print_indexes ( ) t. print_matrix ( ) e = freqmatrix ( ) e. load_expected_bigram_file ( ) e. print_matrix ( ) e. print_indexes ( )"
"zamen karakter u kljuc"
"sadrz mapiranj iz karakter u redn brojev i obrn"
"alfabet"
"tod : proba i numerick resenj"
"ak se bir ka loss = categorical_crossentropy to znac da smo primeni on hot encoding , inac biram ov drug"
"kak da sacuva tensor nek rand uniformn raspodel , prav . npz fi gde cuva tensor"
"xs = np . rand . uniform ( -10,10 , ( br , 1 ))"
"inputs = np . column_stack (( xs , zs ))"
"np . savez ( ' Audio_train ' , inputs = train_inp , targets = train_tar )"
"trenir se jak spor , tak da treba promeni batch siz il smanjit trening skup"
"np . savez ( ' TF_intro ' , inputs , target )"
"pozivanj model model . compi ( loss = ' sparse_categorical_crossentropy ' , optimizer = ' ada ' , metrics =[ ' accuracy ' ] )"
"tensor moz biti konstant il niz , shap za jedan br je empty tuppl"
"x = tf . constant ( 3 )"
"target = target . reshap ( br , )"
"tf . auto_reuse kreir avrijabl ak vec ne postoj , inac je vrc"
"fig = plt . figur ( )"
"var2 = tf . get_variable ( ' var2 ' , initializer = 5 , dtype = tf . int32 )"
"var3 = tf . get_variable ( ' var3 ' , initializer = var2 . initialized_value ( ) +1 )"
"sess . run ( tf . global_variables_initializer ()) inicijalizuj globaln var"
"pprint ( tf . get_collection ( tf . graphkeys . GLOBAL_VARIABLES ))"
"six , seven = sess . run ( [ var2 , var3 ] )"
"ax = fig . add_subplot ( 1 , projection = ' 3 d ' )"
"a = tf . get_variable ( """" var_a """" , 1 )"
"print ( a. nam )"
"ax . set_xlabel ( ' xs ' )"
"grafov i sesij"
"c = tf . constant ( 4.0 )"
"assert c. graph is tf . get_default_graph ( )"
"cvorov graf su operacij a input i izlaz su ka gran"
"x = tf . get_variable ( ' x ' , shap =[ 5,2,3 ] )"
"y = tf . get_variable ( ' y ' , shap =[ 5,3,1 ] )"
"assert z. shap == ( 5,2,1 )"
"z = tf . get_collection ( ' my_coll ' ) [ 0 ]"
"input_size = 2"
") ] )"
"model . fit ( train [ ' inputs ' ] , train [ ' target ' ] , epochs = 100 , verbos = 1 )"
"model . layers [ 0 ] . get_weights ( ) prv je w drug je b"
"plt . plot ( np . squeez ( model . predict_on_batch ( train [ ' inputs ' ] )) , np . squeez ( train [ ' target ' ] ))"
"plt . xlabel ( ' predikcij ' )"
"plt . ylabel ( ' target ' )"
"skaliranj slik"
"map prav transformacij na nek skup"
"scaled = train . map ( sca )"
"test = test . map ( sca )"
"racunanj vrednost bacen kockic"
"elif get_full ( dices ) ! = 0 : print ( """" full """" ) elif get_three ( dices ) ! = 0 : print ( """" thre of a kind """" )"
"elif has_straight ( dices ) : print ( """" straight """" ) for dic in dices : print ( dic . get_val ())"
"za minimaln vrednost zdravorazumsk je izostavi kockic sa najvec vrednost"
"fajl koj pruz pomocn funkcij"
"neocekivan gresk , red u tabel im opseg od 0 do 12"
"funkcij za normalizovanj"
"funkcij koj proverav da li kockic im kent"
"funkcij dohvat vrednost triling"
"funkcij dohvat zbirn vrednost 4 ist kockic"
"dodavanj tork ( val , col , row )"
"sortiraj po ogranicenj rastuc"
"ak je ponderisan vrednost manj od maksimaln , bacaj ponov"
"ruzn konvertovanj u binarn kod zbog pritisk sa vremen"
"igranj igr i istovremen obucavanj"
"upisan"
"ulazn neuron su hard kodovan zbog prirod problem"
"odlucivanj da li kockic treba da se bac"
": return : list sa : vrednost polj , is_unlocked atribut polj , vrednost kockic"
"odozg"
"odozd"
"sredin gornj sekcij"
"sredin donj sekcij"
"kraj donj sekcij"
"setovanj maksimaln vrednost"
"ful"
"kar"
"trainer = trainer ( 200 , 2 , 2 , 50 )"
"whi random_int == i : print ( """" rand is """" , random_int , """" population siz is """" , ( len ( self . population ) random_int = randint ( 0 , ( len ( self . population )"
"rad"
"prv prolaz"
"selekcij bolj dve trecin populacij"
"klas trainer upravlj cel populacij neuraln mrez"
"reprodukcij"
"lev - tabel jamb koj igr neuraln mrez obucavan genetsk algoritm koristec selekcij , mutacij i ukrstanj gen"
"inicijalizuj se sa nul"
"ispis genetsk algoritm"
"ispis nn sa csp"
"whi tru : gu . paint_tables ( gu . csp , gu . ga ) root . upda ( )"
"lev kolon"
"kolon ( 1 to 6 , min , max , straight . )"
"desn kolon"
"red"
"zaglavlj"
"10 % mutacij"
"hidden_neurons = list neuron primer neuron_list = [ 15 , 10 5 ] znac da neuraln mrez im 3 sloj ; 15 neuron za ulaz , 10 skriven , 5 izlaz ulazn neuron ( hard coded ! ) : ulazn neuron prima vrednost koj odgovaraj 6 kolon put po 13 red , svak polj nos 2 informacij 6 vrednost za kockic 1 vrednost koj oznacav br bacanj 78 * 2 + 6 + 1 = 163 ulazn neuron"
"funkcij gam . make_decision osigurav maksimaln 3 bacanj u jedn potez"
"svakak se nastavlj sa igr"
"igr je gotov"
"neuron_list [ 0 ] = 163"
"print ( """" length of new bias and weigth is """" , len ( new . get_genes ( ) [ 0 ] [ 1 ] ) , len ( new . get_genes ( ) [ 1 ] [ 1 ] ))"
"skriven neuron : list , primer : [ 500 , 200 , 100 ]"
"kockic koj se bacaj"
"tabel je list kolon"
"tabel je pun , igr je gotov"
"decoded = [ 1 , column index , row index ]"
"glavn funkcij , upisuj vrednost u matric koj predstavlj tabel"
"gornj sekcij"
"ones * ( max-min )"
"donj sekcij"
"gornj sekcij se racun sa 6 kockic"
"kraj"
"otkljucava se polj sam koj su trenutn zakljucan , prazn i susedn"
"ak je index u gornj sekcij , otkljucaj sam gornj polj"
"analogn i za donj sekcij"
"unos podatk u tabel ispi"
"prijavljivanj na baz podatk mstud"
"unos podatk u tabel predmet"
"pravljenj baz podatk mstud"
"pravljenj tabel ISPITNI_ROK"
"unos podatk u tabel ISPITNI_ROK"
"' 1 ' - sam predmet iz 1. semestr"
"' 2 ' - sam predmet iz 2. semestr"
"' b ' - predmet iz ob semestr"
"' x ' - sam po jedan predmet , ak je poslednj nepolozen"
"pravljenj tabel kurs"
"pravljenj tabel semestar"
"pravljenj tabel smer"
"pravljenj tabel NIVO_KVALIFIKACIJE"
"pravljenj tabel USLOVNI_PREDMET"
"pravljenj tabel UPIS_GODINE"
"upda dosij set im = ' vlastimir ' wher indeks = 20061107 ;"
"br registr [ 0,99 ]"
"[ 0,499 ]"
"kontroln br"
"pravljenj jmbg brojev student"
"ulazn parametr"
"object : storedprocedur [ dbo ] . [ copytabl ] script dat : 10/09/2015 09:21:45"
"prover @@ FETCH_STATUS da bi se videl im li jos red"
"verbos mod"
"izvrsav iskaz"
"omogucav promen napredn opcij ."
"azurir trenutn konfigurisan vrednost za xp_cmdshell"
"azurir trenutn konfigurisan vrednost za napredn opcij ."
"omogucav xp_cmdshell"
"napomen : morate imat sysadmin-role za pokretanj ov skript ."
"drop tabl #DatabaseOwners ;"
"copyright ( c ) microsoft corporation . all rights reserved ."
"ov skript kreir upozorenj i poslov koj se zahteva kak bi se izvel ciscenj baz podatk ."
"napomen : poslov moraju biti kreiran pr upozorenj jer ih upozorenj referenciraj"
"select * fr sys . master_files"
"autor : mayur jh . sanap datum : 30 - 12 - 2012"
"skript dostavlj status svih sql poslov ."
"izlistav aktivn trac na lokaln server"
"naslov : skript koj cit sql trac informacij opis : ov skript analizir informacij sql trac na odredjen sql instanc"
"kompatibiln i testiran sql verzij : 2005 , 2008 , 2008 R2 , 2012 , 2014 , 2016 & 2017 upotreb : 1. otvori open sql server management studi ( ssms ) i poveza se na sql server . 2. otvori “ new query ” prozor , iskopir ce kod tam i pokren ga 3. unet vrednost parametr po potreb select @Trace_File_id = 1 , @Trace_Event = ' % ' --> filtrir odredjen trac event , @Db_Name = ' % ' --> filtrir odredjen db , @Search_Text = ' % ' --> filtrir odredjen T-SQL query , @Search_By_User = ' % ' --> filtrir odredjen korisnik"
"dohvat podatk iz xml poruk"
"loguj pocetk operacij"
"enkapsulacij u try .. catch za resavanj izuzetk u odredjen zahtev"
"izvrsav zahtev"
"loguj neuspeh u tok operacij"
"commi"
"reset xml poruk"
"uvecav brojc gresak"
"cek 5 sekund"
"reset promenljiv"
"ukljucivanj servisn broker"
"odbacivanj postojec objekt"
"kreir objekt servisn broker"
"maksimaln br konkurentn instanc"
"ov procedur popunjav queu za asinhron okidac"
"grad xml poruk"
"slanj poruk"
"koriscenj : 1. pokren ov skript na baz na koj zeli da koristit asinhron okidac 2. napravi uskladisten procedur koj pr sledec dva parametr : @inserted xml , @deleted xml ov procedur je odgovorn za parsiranj podatk koj se manipulis i izvrsavanj stvarn logik okidac na osnov tih podatk . 3. unutar stvarn okidac na tabel , koristit sledec kod : declar @inserted xml , @deleted xml ; select @inserted = ( select * fr inserted for xml path ( ' row ' ) , root ( ' inserted ' ) ) ; select @deleted = ( select * fr deleted for xml path ( ' row ' ) , root ( ' deleted ' ) ) ; execut SB_AT_Fire_Trigger ' { yourprocedurenam } ' , @inserted , @deleted ; al zamen { yourprocedurenam } imen procedur koj ste kreir u korak 2."
"postavlj da se verbos mod za statusn poruk pr i nakon svak operacij"
"dozvoljav do 10 gresak u slucaj problem sa servic broker"
"obrad jedn po jedn poruk"
"zakomentarisa sledec lin da bi se prikaza svi poslov , inac se prikazuj sam poslov od juc"
"and sjh . run_date > convert ( varchar ( 8 ) , getda ( ) -1,112 )"
"ssas moz da loguj informacij o izvrsavanj upit u relacion baz . ov Transact-SQL skript pruz prost upi koj razdvaj putanj do objekt u : - im server - databas id - cub id - id mern grup"
"select * fr qry order by starttim desc ;"
"select objpath , dataset , max ( duration ) as maxduration , avg ( duration ) as avgduration , sum ( duration ) as sumduration , count (*) as executions , max ( starttim ) as lastexection fr qry group by objpath , dataset order by maxduration desc ;"
"kolik cest upi dobij rezulta iz cache-a"
"parametr @ToCollation - destinacion collation @Tablename - im tabel za koj se menj collation podrazumevan je '' , tad ce sve tabel biti razmatran @ColumnName - im kolon za koj se menj collation podrazumevan je '' , tad ce sve kolon biti razmatran @SchemaName - im shem za koj se menj collation podrazumevan je '' , tad ce sve kolon biti razmatran @FromCollation - @GenerateScriptsOnly - generis skript za promen collation podrazumevan je 1"
"sortir po vrednost stran kljuc"
"backup pogled"
"backup sracuna kolon"
"backup statistik"
"and schemanam = @SchemaName"
"backup prover ogranicenj"
"backup ogranicenj vezan za stran kljuc"
", @SQL = ' if ' + existsscript + char ( 13 ) + dropscript + char ( 13 )"
"primen promenjen collation vrednost"
"unutranj petlj - vracanj odbacen objekt"
"and bk . [ type ] = ' d '"
"cist poruk iz red cekanj"
"cist transmision red"
"ovd se moz doda uslov po potreb"
"zavrsav konverzacij ciscenj"
"parametr @SourceDBName = im izvorn baz @DestDBName = im destinacion az sa koj se vrs poredjenj @ObjectName = za poredjenj imen objekt"
"normal """" / validn vrednost"
"maksimaln velicin csv fajl"
"ciscenj temp tabel"
"odbacuj star verzij ak postoj"
"u odredjen situacij podac su sacuvan ka csv ( comm separted values ) u jedn kolon jer isprv ne deluj tolik vazn . kasn moz da zatreb da se omoguc select tih podatk ka odvojen vrednost iz """" 1 : n """" tabel ."
"ov Transact-SQL skript del csv u odvojen vrednost i vrc ih ka tabel . za ov se korist jednostavn rekurzivn cte ( common tabl expression ) , koj traz naredn delimiter i vrc vrednost koj je pronadjen i ostatk csv string . zbog ogranicen maksimaln duzin ulan parametr @csv , limi za rekurzij nec biti premasen . skript takodj ukljucuj unit test za tvf rad validacij rezultat ."
"parametar @csv : csv ka jedan string @delimiter : karakter koj se korist ka delimiter u csv return tabl id : trenutn id valu : pojedinacn vrednost"
"vrc rezulta"
"null / empty vrednost za testiranj validacij parametr"
"wher IC2 . Object_id = object_id ( ' person . address ' )"
"zakomentarisa za sve tabel"
"and I. Object_id = object_id ( ' person . address ' )"
"and I. nam = ' IX_Address_PostalCode '"
"porast velicin baz podatk u oblik list Transact-SQL skript za analiz porast velicin baz podatk koristec backup . ov Transact-SQL skript korist backup za analiz porast velicin baz podatk za dat period . pored minimaln , maksimaln i prosecn velicin za odredjen mesec , izracuna je i porast prosecn velicin u odnos na prethodn mesec . vrednost su korisn za buduc planiranj resurs sistem za skladistenj i backup sistem . Transact-SQL skript za analiz porast velicin baz podatk koristec backup ."
"ov Transact-SQL skript korist backup istorij za analiz rast velicin baz u protekli 12 mesec i izlaz prosecn velicin u tok svak mesec u pivot tabel . vrednost su korisn za buduc planiranj potrebn resurs ."
"rad sa ms sql server 2005 i novij verzij u svim edicij . zahtev access i select dozvol za msdb sistemsk baz"
"opis : ov skript analizir sve dostupn databasepropertyex vrednost za sve baz koj su hostovan na nek sql instanc"
"pregled proces na baz"
"ov Transact-SQL skript daj kratk pregled sledeceg : - br proces - br jedinstven korisnik i hostov - podac o izvrsavanj poslednjeg batch-a - podac o koriscenj cpu , io i memorij - otvoren transakcij"
"minimaln stanj za izvestavanj"
"izvrsavanj checkdb i dodavanj rezultat u privremen tabel ."
"izbor detalj u izvesta"
"konfiguracion vrednost za izvesta ."
"when ' sql server 2008 R2 ' then"
"+ char ( 13 ) + ' 12.0.2381 ( sql server 2014 rtm qfe ) https://support.microsoft.com/en-us/kb/2977316 '"
"rezulta skript : informacij o trenutn instaliran microsoft sql server information :"
"ak je slobodan prostor u procent manj od @alertvalue , poslac poruk"
"prikazuj ocekivan izlaz"
"pomoc ov Transact-SQL skript moguc je dobi informacij o nedostajuc indeks , poput informacij o poboljasanj performans ukolik bi on postoja . pomoc ov Transact-SQL skript mozet testir upi prem postojec cached planov da biste dobi sve sql iskaz sa nedostajuc indeks ."
"rad sa sql server 2005 i novij verzij u svim edicij . zahtev view server sta dozvol ."
"za konvertovanj datum iz IST-Indian standart tim u EGT-East greenland tim"
"za konvertovanj datum iz IST-Indian standart tim u PST-Pacific standard tim ( us i kanad ) sa pomeranj sat prepostavlj da sat biv pomeren kasn za 1 sat od ' 01-Apr ' do ' 31-Aug ' godin se odredjuj na osnov currentda ."
"parametr @InputString -- string iz kog se vrs ekstrakcij vrednost @Extracttype -- n = ekstracij iskljuciv brojev c = ekstracij iskljuciv alfabet nc = ekstracij alfanumerick karakter @AdditionalChars -- dodatn posebn karakter za ekstrakcij pored naveden gor"
"select @Extracttype , @OutputStr"
"primer ekstracij sam brojev"
"primer ekstracij brojev i specijaln karakter ispod se vrs ekstrakcij """" . """" iz string ."
"primer ekstracij alfabetsk i specijaln karakter ispod se vrs ekstrakcij """" @ . """" iz string ."
"primer koriscenj sa tabe"
"primer ekstracij sam alfabetsk karakter"
"dohvat prv red od kursor"
"whi petlj dok kursor vrc nov red"
"prikazuj poruk sa imen trenutn tabel"
"ov vrs konkatenacij svih poruk"
"resetuj izlazn tabel i promenljiv"
"opis : skript pronalaz sve tabel u baz ( sam on sa primarn kljuc ) i generis . sql fajl za svak tabel koj sadrz merg iskaz koristec zapis koj su dostupn u tabel . nakon izvrsavanj generisan skript , tabel ce sadrza sam zapis koj su bili prisutn pr ."
"promen ispod su na vas odgovornost"
"inicijalizacij kursor za prolazak kroz sve tabel u baz tabel su dohvacen kroz hijerarhijsk upi rad zadrzavanj red unosenj podatk , obzir na fk ogranicenj ( parent tabel ce biti generisan pr child tabel )"
"dohvat sam tabel sa primarn kljuc"
"primer koriscenj : exec usp_Generate_Merge_For_Table ' tbl_forms ' , ' dbo '"
"ak nist nij pronadjen , odustan ( tabel nij podrzan )"
"zapocinj sa prv kolon"
"iteracij kroz sve kolon , da bi se dohvati njihov imen i tipov podatk koj sadrz"
"formatir vrednost kolon na osnov tip"
"opis : ov skript generis merg iskaz za tabel koj se prosled ka parametar , koristec zapis koj su trenutn u tabel . merg iskaz se vrc u upit ka jedan red kolon . ak nem red u tabel , jednostavn delet iskaz ce biti generisan ."
"dohvat sledec kolon po red"
"izvrsav komand i dobij @Values parametar ka izlaz"
"vazn napomen : tabel bez primarn kljuc nis podrzan !"
"dozvol / zabran upda red"
"dozvol / zabran insert red"
"dozvol / zabran debug mod"
"ukljuc timestamp kolon il net"
"ukolik se ne menj fajl u kom se cuva podac , set @MovePath = ''"
"select * fr @PKTable"
"when sty . nam in ( ' nchar ' , ' nvarchar ' ) and SC. max_length < > -1 then ' ( ' + convert ( varchar ( 4 ) , SC. max_length / 2 ) + ' ) '"
"els ''"
"za nekolik biznis aplikacij potrebn su najnov kursn stop za nekolik valut . evropsk centraln bank ( ecb ) objavljuj na internet na dnevn nivo kursn stop za prek 33 valut u oblik xml fajlov i to besplatn ."
"import kursn stop ecb"
"ucita xml fajl ka xml promenljiv ."
"izbor stop ; doda sam vrednost koj nedostaj ."
"sa ov Transact-SQL skript , xml fajlov evropsk centraln bank mogu se importova u oblik tabel ; skript creat za tu tabel je doda ka atacment ."
"autor : aasi abdulla http://connectsql.blogspot.com"
"io operacij su usk grl za sql server . da bi se dobi najbolj uciak , dobr strategij za hw je neophodn . u proces planiranj , mora se razmotri dobr gde locir koj baz . pomoc ov Transact-SQL skript , moguc je analizir io statistik sveukupn il na nivo fajl . zbog cte , jenostavn je modifikova postojec upi il kreir sopstven statistick upi ."
"detalj za svak fajl"
"pregled po tip fajl"
"select iof . filetyp , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . num_of_reads / iot . reads )) as [ reads % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . num_of_bytes_read / iot . bytesread )) as [ bytesread % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . io_stall_read_ms / iot . iostallreadms )) as [ iostallreadms % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . num_of_writes / iot . writes )) as [ writes % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . num_of_bytes_written / iot . byteswritten )) as [ byteswritten % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . io_stall_write_ms / iot . iostallwritesms )) as [ iostallwritesms % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . io_stall / iot . iostall )) as [ iostall % ] , convert ( numeric ( 5,2 ) , sum ( 100.0 * iof . size_on_disk_bytes / iot . sizeondisk )) as [ sizeondisk % ] fr iof cross apply iot group by iof . filetyp order by iof . filetyp ;"
"pregled po drive-u"
", isfulltextinstalled = convert ( bit , serverproperty ( ' isfulltextinstalled ' ))"
", filestreameffectivelevel = convert ( tinyint , serverproperty ( ' filestreameffectivelevel ' ))"
", productversion = convert ( nvarchar ( 128 ) , serverproperty ( ' productversion ' ))"
", sqlcharsetnam = convert ( nvarchar ( 128 ) , serverproperty ( ' sqlcharsetnam ' ))"
", sqlmemory = ( select VALUE_IN_USE fr sys . configurations wher nam = ' max server memory ( mb ) ' )"
", edition = convert ( nvarchar ( 128 ) , serverproperty ( ' edition ' ))"
", isclustered = convert ( bit , serverproperty ( ' isclustered ' ))"
"heap tabel je tabel koj nem klasterizovan indeks . obicn , koriscenj heap tabel nij najbolj praks , al u nek scenarij je prihvatljiv . u sql azur , heap tabel nis dozvoljen , svak tabel mora imat klasterizovan indeks ."
"izlistav sve heap tabel"
"pomoc ov jednostavn Transact-SQL skript se mogu pronac sve heap tabel ."
"rad sa sql server 2005 i novij verzij . link : - msdn sql server best practices articl : http://msdn.microsoft.com/en-us/library/cc917672.aspx - msdn heap structures http://msdn.microsoft.com/en-us/library/ms188270.aspx"
"rad sa sql server 2005 i novij verzij u svim edicij . izlistav sam pogled za koj trenutn korisnik im view metadat dozvol . link : sys . views : http://msdn.microsoft.com/en-us/library/ms190334.aspx"
"izlistav sve indeksiran pogled"
"ov Transact-SQL skript izlistav sve indeksiran pogled sa detaljn informacij o indeks i indeksiran kolon ."
"izlistav sve otvoren kursor"
"rad sa sql server 2005 i novij verzij . zahtev view server sta dozvol na server . link : sys . dm_exec_cursors : http://technet.microsoft.com/en-us/library/ms190346.aspx"
"ov Transact-SQL skript izlistav sve rol u trenutn baz sa pripadajuc clanov . dodatn se izlistav i trenutn sql login ."
"izlistav rol i clanov sa server login"
"on drm . role_principal_id = rol . principal_id"
"on drm . member_principal_id = mem . principal_id"
"on mem . [ sid ] = sp . [ sid ]"
"rad sa sql server 2005 i novij verzij u svim edicij . link : sys . database_role_members : http://msdn.microsoft.com/en-us/library/ms187328.aspx sys . database_principals : http://msdn.microsoft.com/en-us/library/ms187328.aspx"
"izlistav sve objekt i njihov zavisnost"
"ov Transact-SQL skript izlistav sve objekt stvarn baz i njihov direktn zavisnost prem drug objekt ( referenciran objekt ) . za tabel / pogled se takodj izlistava referenciran kolon ."
"rad sa sql server 2005 i novij verzij u svim edicij . od verzij sql server 2008 R2 koriscen sistemsk pogled """" sys . sql_dependencies """" je oznacen ka zastare . izlistav sam objekt za koj korisnik im dozvol ."
"rita rast log"
"velicin log fajlov bi treba da budu adekvatn odredjen da bi se izbegl cest promen tih podesavanj jer on izaziv nepotrebn io operacij i fragmentacij fajlov . log fajlov bi treba da budu dovoljn velik da prihva sve podatk izmedj 2 backup-a , a vrednost za koj se velicin fajl moz uveca takodj treba biti adekvatn postavljen . ov Transact-SQL skript izlistv sve podatk vezan za log fajlov iz wmi performanc counter statistik da bi pokaza koj su log fajlov adekvatn velicin ."
"rad sa sql server 2005 i novij verzij u svim edicij . zahtev view server sta dozvol na server . link : sys . dm_os_performance_counters : http://technet.microsoft.com/en-us/library/ms187743.aspx"
"korisnik i rol u baz"
"nedostajuc indeks sa creat iskaz"
"u tok rad sql server prikuplj informacij o nedostajuc indeks i to pruz kroz dmv sys . dm_db_missing_index_X ."
"pomoc ov Transact-SQL skript mogu se izlista nedostajuc indeks sortiran po uticaj , a dodatn se pruz i creat iskaz za dodavanj predlozen indeks ."
"br stran po objekt u bafer"
"zahtev view server sta dozvol . rad sa microsoft sql server 2005 i novij verzij u svim edicij ."
"izlistav sum stran po korisnick objekt u sql server buffer-u ."
"na osnov dmv sys . dm_os_buffer_descriptors ov skript izlistav sum broj stran po korisnick objekt u bafer . list je sortiran na osnov ukupn broj stran u bafer . ov vrednost je indikacij najcesc koriscen korisnick objekt i indeks ."
"upda ## abc"
"br indeks u baz , ukupn"
"alter tabl ## bbc"
"alter tabl ## abc"
"dohvat ukupan br objekt ukljucujuc indeks i shem za drug server"
"dohvat ukupan br objekt ukljucujuc indeks i shem"
"br sistemsk objekt u odabran baz"
"upda ## bbc"
"set discription = ' user tabl ' wher discription is null"
"putanj do fajl verzij 1 rdl"
"exec RDL_Compare ' c :\ users \ sathy \ documents \ visua studi 2010 \ projects \ Report1 \ Report1 \ Version1 . rdl ' , ' c :\ users \ sathy \ documents \ visua studi 2010 \ projects \ Report1 \ Report1 \ Version2 . rdl '"
"upotreb : 1. otvori open sql server management studi ( ssms ) i poveza se na sql server . 2. otvori “ new query ” prozor , iskopir ce kod tam i pokren ga kompatibiln i testiran sa sql verzij : 2005 , 2008 , 2008 R2 , 2012 , 2014 & 2016 parametr @DB_Backup_File = ' * . bak ' <-- im backup fajl @Backup_File_id = <-- ak odredjen backup fajl sadrz vis razlicit backup-a , moz se prek id odredi koj se obradjuj"
"tabel za skladistenj fragmentiran objekt"
"kursor za reorganizacij"
"autor : ron ratzlaff naziv : cfp cust query - systems vulnerabl to wannacrypt ransomwar malwar datum kreiranj : 5/15/2017"
"ovd doda parametr za uskladisten procedur"
"object : storedprocedur [ dbo ] . [ Check_Memory ] script dat : 09/14/2017 12:03:37"
"object : storedprocedur [ dbo ] . [ SQLServer_Wait_Statistics ] script dat : 09/14/2017 12:03:37"
"set nocount on je doda kak bi se spreci da se dodatn setov podatk mesa sa select iskaz"
"object : storedprocedur [ dbo ] . [ SQLServer_Memory_Manager ] script dat : 09/14/2017 12:03:37"
"object : storedprocedur [ dbo ] . [ Active_Process ] script dat : 09/14/2017 12:03:37"
"object : storedprocedur [ dbo ] . [ SQLMonitorFULL_QueryMonitor ] script dat : 09/14/2017 12:03:37"
"monitor activ process - nadgledanj memorij sql server"
"object : storedprocedur [ dbo ] . [ SQLMonitorFULL_Indicators ] script dat : 09/14/2017 12:03:37"
"object : view [ dbo ] . [ V_SQLMonitorQueryTOP50_EXPENSIVE ] script dat : 09/14/2017 12:03:36"
"object : tabl [ dbo ] . [ dw running query ] script dat : 09/14/2017 12:03:35"
"object : view [ dbo ] . [ V_SQLMonitorQueryTOP100_POOR ] script dat : 09/14/2017 12:03:36"
"object : view [ dbo ] . [ V_SQLMonitorQueryCPUBenchMark ] script dat : 09/14/2017 12:03:36"
"object : view [ dbo ] . [ V_SQLMonitorIndicators ] script dat : 09/14/2017 12:03:36"
"table_value je ciljn tabel privremen tabel tmp_table_value je izvorn tabel"
"commi tran ;"
"kreir privremen tabel potrebn za drzanj struktur baz podatk"
"indeks koj se ne slaz"
"kljucev koj se ne slaz"
"declar @SourceDB sysnam = ' DB1 ' , @TargetDb sysnam = ' DB2 '"
"parametar @Tablenames dostavi im jedn tabel il vis imen razdvojen zarez . ak je parametar prazan , prover se vrs nad svim tabe u baz ."
"ex : ' % tbl % , dim % ' -- ov pretrazuj tabel sa imen koj sadrz """" tbl """" i on koj pocinj sa """" dim """""
"parametar @SearchStr prosledi string za pretrag . koristit ' % ' za podesavanj pretrag ."
"ex : x % - daj podatk koj pocinj sa x % x - daj podatk koj zavrsava sa x % x % - daj podatk koj sadrz x % x % , y % - daj podatk koj sadrz x il pocinj sa y"
"parametar @GenerateSQLOnly prosledi 1 za generisanj sql iskaz bez pretrag baz . podrazumevan je 0 i bic pretrazen baz ."
"parametar @SchemaNames prosledi im jedn shem il vis shem cij su imen razdvojen zapet . ak je prazn , traz sve tabel u baz ."
"ex : ' % dbo % , sales % ' -- ovak se pretrazuj shem sa imen koj sadrz """" dbo """" il pocinj sa """" sales """""
"za trazenj podatk u tabel exec SP_SearchTables @Tablenames = ' T1 ' , @SearchStr = ' % test % ' uzorak iznad vrs pretrag u tabel T1 sa string koj sadrz test ."
"za trazenj zapet u tabe koristit dupl zapet """" ,, """" exec SP_SearchTables @Tablenames = ' % T1 % , dim % ' , @SearchStr = ' % ,, % ' , @GenerateSQLOnly = 0 exec SP_SearchTables @Tablenames = ' % T1 % , dim % ' , @SearchStr = ' % with ,, comm % ' , @GenerateSQLOnly = 0"
"za pretrag pomoc schemanam exec SP_SearchTables @Tablenames = ' % T1 % , dim % ' , @SearchStr = ' % ,, % ' , @GenerateSQLOnly = 0 , @SchemaNames = ' % dbo % , sales % '"
"za pretrag koristec collation exec SP_SearchTables @Tablenames = ' % T1 % , dim % ' , @SearchStr = ' % ,, % ' , @GenerateSQLOnly = 0 , @SchemaNames = ' % dbo % , sales % ' , @SearchCollation = ' sql_latin1_general_cp1_cs_as '"
"dodaj br obrisan red delet brojac za APPLICATION_USAGE ."
"komituj otvoren transakcij , a ond otpocinj nov ."
"copyright ( c ) microsoft corporation . all rights reserved . fi : sp_SFTcleanupusage . sql"
"podesavanj sesij"
"dodaj br obrisan red delet brojac za MESSAGE_LOG ."
"opis : cist poruk i podatk o koriscenj iz tabel MESSAGE_LOG i APPLICATION_USAGE . parametar koj se korist ka cutoff datum sluz kak bi se odredi gde ciscenj pocinj . sve pr tog datum biv ociscen . proces ce ocistit sam zatvoren sesij . nec cistit otvoren transakcij , osi ak ne moz zasigurn da odred da su te transakcij """" orphaned """" ."
"bris sve netransakcion poruk ( iz MESSAGE_LOG tabel ) koj su zabelezen pr cutoff datum ."
"napomen : sam transakcij vezan za sesij i licenc treba da ostan ."
"bris netransakcion poruk iz MESSAGE_LOG tabel"
"transakcij sesij"
"transakcij licenc"
"bris sve transakcij iz MESSAGE_LOG i APPLICATION_USAGE tabel koj su kompletiran pr cutoff datum ."
"napomen : ov su transakcij vezan za sesij i licenc koj sad brisem ."
"bris podatk o pocetk zavrsen sesij iz MESSAGE_LOG tabel"
"bris podatk o zavrsetk sesij iz MESSAGE_LOG tabel ."
"bris podatk o zavrsen transakcij iz APPLICATION_USAGE tabel ."
"izvrsav se sam ak korisnik im odredjen dozvol"
"napomen : ov je neophodn jer backup i dbcc komand moraju biti pokrenut van transakcij"
"iteracij kroz zapis ."
"umanjuj velicin fajl kolik je moguc"
"obezbedi da fajl nij read-only"
"napomen : koristit [ ] ok imen baz da bi se obezbedi kompatibilnost sa nestandardn naziv baz poput on koj sadrz crtic il br"
"petlj je zavrsen , zatvar se kursor ."
"ak se desi gresk u petlj , razresi je ."
"proglasav kursor za iteracij kroz log fajlov koj im podesavanj autogrow"
"inicijalizacij okruzenj ."
"proveri da li je cutoff dat null . ukolik jeste , preskocen je proces ciscenj , al transakcion log ostaj izbrisan ."
"autor : microsoft -- datum : 2010 - 02 - 06"
"odabir sam baz koj su onlin u slucaj da se backup odnos na sve baz ak je odabran sam jedn baz , ond se ond pokup"
"filtrir baz za koj nij trazen backup"
"postavlj trenutn datum i vrem"
"kreir im fajl za backup"
"izvrsav sql komand"
"koriscenj substring i charindex"
"koriscenj parsenam"
"privremen tabel u koj se cuva rezulta"
"promen u dbcc loginf izlaz od SQL2012 znac da moramo odredi verzij"
"pr SQL2012"
"privremen tabel za iteriranj kroz vis baz"
"ispisuj celokupn list"
"ovd se unos nalog iz domen"
"kreiranj login"
"kreiranj korisnik za login u svak baz podatk"
"execut sp_executesql @command1 ;"
"moz se promeni im baz podatk"
"autor : abdulla altint datum : 11/21/2016"
"u svak sistem tempdb baz je najcesc koriscen . pored intern funkcij sistem ka sto su verzionisanj , takodj privremen tabel koj korisnik kreir povecava velicin tempdb i kolicin io operacij . ov Transact-SQL skript izlistav stvarn postojec privremen tabel i njihov velicin ."
"rad sa sql server 205 i novij verzij u svim edicij ."
"privremen tabel i njihov velicin"
"sekcij 1 :"
"postojanj svak od indeks ne nos sam benificij , vec i trosk . kad indeks nij u upotreb , predstavlj nepotrebn trosenj resurs . ov Transact-SQL skript izlistav sve indeks koj nis bili koriscen od poslednjeg pokretanj server , sam tabel i pogled se razmatraj . u ov list nis ukljucen neodobren indeks , heap , primarn kljucev i uniqu indeks , jer su on de biznis logik i neophodn su za fk ogranicenj ."
"neiskoriscen indeks ."
"u obzir uz korisnick definisan tabel i pogled"
"ignoris heap"
"neodobren indeks se svakak ne korist"
"uniqu indeks se ne razmatraj , de biznis logik su"
"proverav da li tempdb fajlov im ist temp rast"
"proverav da li je tempdb trac flag postavljen i neophodan na osnov sql verzij"
"rad sa tipov podatk :: dem 1"
"uniqueidentifier tip podatk"
"declar @a uniqueidentifier set @a = newid ( ) print @a declar @b uniqueidentifier set @b = ' abcd ' print @b declar @c uniqueidentifier set @c = ' C50F5FB8-8D4D-4581-BEE4-46C5B24FB5C0 ' print @c"
"declar @i smallint set @i = 40 print @i declar @j smallint set @j = -40 print @j declar @k smallint set @k = 40 print @k"
"declar @i int set @i = 40 print @i declar @j int set @j = -40 print @j declar @k int set @k = 40 print @k"
"declar @i tinyint set @i = 150 print @i declar @j tinyint set @j = 260 print @j declar @k tinyint set @k = -150 print @k"
"declar @DateEx1 datetim set @DateEx1 = getda ( ) print @DateEx1 declar @DateEx2 datetim set @DateEx2 = ' 12/15/1800 ' print @DateEx2 declar @DateEx3 datetim set @DateEx3 = ' 12/15/1400 ' print @DateEx3"
"declar @a decimal ( 3,3 ) set @a = 3.10 print @a declar @b decimal ( 4,3 ) set @b = 3.10 print @b declar @c decimal ( 3,3 ) set @c = 0.310 print @c declar @d decimal ( 6,3 ) set @d = 0.36 print @d declar @e decimal ( 6,3 ) set @e = 20.36 print @e declar @f decimal ( 6,3 ) set @f = 9.36 print @f declar @g decimal ( 6,3 ) set @g = 19.3 print @g declar @h decimal ( 5,3 ) set @h = 33.16 print @h declar @i decimal ( 5,0 ) set @i = 133.1 print @i"
"us tempdb ; go creat tabl dbo . TestCharacter2 ( cidat varchar ( 10 ) collat Latin1_General_CI_AS , csdat varchar ( 10 ) collat Latin1_General_CS_AS ) ; go insert int dbo . TestCharacter2 values ( ' test dat ' , ' test dat ' ) ; go select * fr dbo . TestCharacter2 go select * fr dbo . TestCharacter2 wher cidat = ' test dat ' ; go select * fr dbo . TestCharacter2 wher csdat = ' test dat ' collat Latin1_General_CI_AS ; go select * fr dbo . TestCharacter2 wher cidat = csdat ; go select * fr dbo . TestCharacter2 wher cidat = csdat collat Latin1_General_CI_AS ;"
"varchar tip podatk"
"declar @name1 varchar ( 4 ) set @name1 = ' ab ' select @name1 , datalength ( @name1 ) declar @name2 varchar ( 4 ) set @name2 = ' abcd ' select @name2 , datalength ( @name2 ) declar @name3 varchar ( 4 ) set @name3 = ' abcd ' select @name3 , datalength ( @name3 ) -- varchar ( max ) declar @name4 varchar ( max ) set @name4 = ' ab ' select @name4 , datalength ( @name4 )"
"char tip podatk"
"unicod vs . NON-UNICODE karakter"
"konverzij podatk"
"select 1 + ' 2 ' as result ; go select 1 + ' abc ' as result ; go select cast ( 1 as varchar ( 10 )) + ' abc ' as result ; go declar @int1 int = 1 ; declar @int2 int = 2 ; declar @char char ( 1 ) = 3 ; declar @numeric numeric ( 18,2 ) = 1.0 ; select @int1 / @int2 ; select @numeric / @int2 ; select @int2 * @char ; select @char / @int2 ; go"
"us tempdb ; go creat tabl dbo . orders ( orderid int not null identity ( 1,1 ) , orderda dat not null , salespersonid int null , concurrency rowversion not null ) ; go insert dbo . orders ( orderda ) values ( sysdatetim ()) , ( sysdatetim ()) ; go select * fr dbo . orders ; go upda dbo . orders set concurrency = concurrency + 1 wher orderid = 1 ; go insert dbo . orders ( orderda , concurrency ) values ( sysdatetim ( ) , 0 x07E4 ) ; go select * fr dbo . orders wher orderid = 1 ; go upda dbo . orders set salespersonid = 35 wher orderid = 1 ; go select * fr dbo . orders wher orderid = 1 ; go"
"kreiranj baz :: dem 1"
"us [ master ] go creat databas Test2 on ( nam = N'Test2 ' , filenam = N'C :\ progra files \ microsoft sql server \ MSSQL14 . SQL2017 \ mssql \ dat \ Test2 . mdf ' , siz = 4096 kb , maxsiz = unlimited , filegrowth = 1024 kb ) log on ( nam = N'Test2_log ' , filenam = N'C :\ progra files \ microsoft sql server \ MSSQL14 . SQL2017 \ mssql \ dat \ Test2_log . ldf ' , siz = 1024 kb , maxsiz = 2048 gb , filegrowth = 10 % ) ; go"
"pregled svih postojećih baz na sql server"
"select * fr sys . databases go select database_id , nam , state_desc fr sys . databases ; go"
"pregled podatk o Test2 baz"
"2. nacin - pomoću sql kod"
"kreiranj šeme sa uključenim objekt"
"brisanj tabel"
"brisanj šeme"
"kreiranj šeme"
"kreiranj tabel :: dem 3"
"kreiranj schem petstor - vlasnik šeme je dbo"
"dodavanj kolon u owner tabel"
"3. nacin - pomoću dijagram"
"privremen tabel :: dem 4"
"pretrazivanj"
"Izračunate kolon :: dem 5"
"kreiranj tabel pet sa persisted izračunatom kolon"
"sql upitn jezik :: dem 1"
"korak 6 : pretrazivanj tabel uz upotreb wher klauzul"
"korak 7 : pretrazivanj tabel uz upotreb funkcij u wher klauzul"
"korak 9 : brisanj kreiran tabel ka ilustracij ddl komand"
"kreiranj tabel sales . customers"
"kreiranj tabel sales . shippers"
"kreiranj tabel sales . orderdetails"
"skript kreir baz tsql originaln , baz je kreir itzik Ben-Gan"
"kreiranj tabel stats . tests"
"popunjavanj tabel podac"
"ubacivanj podatk u sales . orderdetails"
"kreiranj sem"
"ubacivanj podatk u production . suppliers"
"ubacivanj podatk u production . products"
"kreiranj tabel hr . employees"
"ubacivanj podatk u sales . customers"
"kreiranj i popunjavanj tabel dbo . nums"
"ubacivanj podatk u stats . tests"
"ubacivanj podatk u stats . scores"
"ubacivanj podatk u sales . orders"
"sql upitn jezik :: zadatk 2"
"izvrsi skript klik na execut ( il pomoc F5 dugmet ) . obratit paznj na dobijen rezulta ."
"us tsql ; go"
"izvrsi skript klik na execut ( il pomoc F5 dugmet ) zast je dobijen prazan rezultujuc skup podatk ?"
"select firstnam , lastnam , city , country fr hr . employees wher country = ' us ' order by lastnam ;"
"selektujt i izvrsi sledec upi , koj vrc sve kolon i sve red tabel sales . shippers"
"selektujt i izvrsi napisan upi order by sortir red po sifr zaposlen , i u okvir sifr , po godin"
"selektujt i izvrsi sledec upi , koj vrc dupl red iz sales . orders tabel upi vrc 830 red"
"korak 3 : izbacivanj dupli red"
"selektujt i izvrsi sledec upi , koj vrc jedinstven red iz sales . orders tabel upi vrc 89 red"
"korak 4 : select disctinct"
"korak 2 : alijas za kolon"
"selektujt sledec upi , koj pokazuj koriscenj alijas za tabel"
"korak 2 : jednostavn cas izraz"
"selektujt i izvrsi slec upi za prikaz koriscenj jednostavn cas izraz"
"selektujt i izvrsi slec upi za prikaz koriscenj jednostavn cas izraz , koj za odredjen id dodeljuj im ipak , bolj resenj bi bilo da se korist join !"
"selektujt i izvrsi sledec upi , koj vrc sam kolon productid , productnam , categoryid , unitpric columns iz production . products tabel"
"selektujt i izvrsi sledec upi , koj manipulis kolon iz production . products tabel obratit paznj na poslednj kolon koj se vrc ( nem im )"
"korak 1 : promen aktivn baz na tsql"
"korak 2 : pretrazivanj tabel"
"selektujt i izvrsi napisan upi upi vrc 830 red"
"selektujt i izvrsi napisan upi upi vrc 31 red"
"korak 5 : pretrazivanj tabel pomoc neispravn napisan select upit"
"selektujt i izvrsi napisan upi * u select list zamenjen je kolon koj se nalaz il u group by izraz il su agregatn funkcij upi vrc 16 red"
"selektujt i izvrsi napisan upi having klauzul filtir grup upi vrc 9 red , bez unapred poznat redosled"
"select naredb :: zadac"
"napisa select naredb , koj vrc kolon contactnam , address , postalcod , city , country iz sales . customers tabel . kolik red se vrc ka rezulta ?"
"napisa select naredb , koj vrc kolon productnam iz production . products tabel . koristit """" p """" ka alijas za tabel , i """" product nam """" ka alijas za kolon . izvrsi upi i pogleda rezulta ."
"korak 2 : left outer join"
"selektujt i izvrsi naredn upi upi vrc 832 red"
"selektujt i izvrsi naredn upi"
"selektujt i izvrsi naredn upi , koj vrc faktur bez podatk o kupc"
"korak 2 : self join sa 2 tabel"
"selektujt i izvrsi naredn upi za prikaz zaposlen sa sifram i imen njihov menadzer"
"selektujt i izvrsi naredn upi za prikaz svih zaposlen , ka i sifr i imen njihov menadzer , ukolik ih im"
"selektujt i izvrsi naredn upi za generisanj svih kombinacij imen i prezimen iz tabel hr . employees"
"selektujt i izvrsi naredn upi , koj ilustruj ans SQL-89 sintaks za join sa 2 tabel upi ne sadrz wher klauzul , zbog ceg se kreiraj sve moguc kombinacij red za 2 tabel ( kartezijansk proizvod ) upi vrc 75530 red"
"selektujt i izvrsi naredn upi , koj ilustruj ans SQL-92 sintaks za join sa 2 tabel gresk je namern napravljen !"
"pretrazivanj vis tabel - inner join :: dem 2"
"selektujt i izvrsi naredn upi , koj demonstrir inner join sa 2 tabel upi vrc 77 red"
"selektujt i izvrsi naredn upi , koj demonstrir kompozitn inner join sa 2 tabel upi vrc 27 red ( bez koriscenj distinct )"
"korak 5 : join sa vis tabel"
"selektujt i izvrsi naredn upi , koj demonstrir inner join sa 2 tabel trec tabel je izostavljen iz upit upi vrc 830 red"
"join sales . orderdetails od"
"on o. orderid = od . orderid ;"
"korak 6 : join sa 3 tabel"
"korak 2 : join sa 2 tabel"
"pretrazivanj vis tabel - outer join :: dem 3"
"izvrsi napisan upi i obratit paznj na rezulta . zast se javi gresk ?"
"napisa upi ispravn , kak bi se izvrsi bez poruk o gresk ."
"kopira ispravn napisan upi , i doda alijas """" c """" za sales . custumers tabel i """" o """" za sales . orders tabel . izvrsi upi . promen prefiks kod kolon u select list , tak da sadrz pun im tabel i izvrsi upi . dobijen je gresk . zast ? napisi ispravn upi ."
"kopira ispravn napisan select naredb , i doda kolon iz sales . orderdetails tabel : productid , qty , unitpric . izvrsi upi i pogleda rezulta ."
"napisi select upi , koj ce vratit kolon empid , lastnam , firstnam , titl , mgrid iz hr . employees tabel . izvrsi napisan upi ."
"napisi select upi , koj ce vratit custid i contactnam kolon iz sales . customers tabel i orderid kolon iz sales . orders tabel . upi treba da vra sve red iz sales . customers tabel . izvrsi napisan upi . obratit paznj na kolon orderid . da li ov kolon sadrz null ? zast ?"
"napisa select naredb koj korist inner join , i koj treba da vra productnam kolon iz production . products tabel ( koristit alijas “ p ” ) i categorynam kolon iz production . categories tabel ( koristit alijas “ c ” ) izvrsi napisan naredb koj kolon ste koristi ka predikat u on klauzul ? zast ?"
"filtiranj pomoću top i OFFSET-FETCH :: dem 3"
"upi vraća 5 najnov faktur"
"obratit pažnju na korišćenje order by"
"korak 6 : Korišćenje offset / fetch za filtiranj rezultat"
"upi vraća sam 50 red - alternativ za select top ( 50 )"
"upi preskače prv 50 red , i vraća naredn 50 red ( 51 - 100 )"
"korak 3 : Korišćenje order by za sortiranj rezultujućeg skup podatk sortiranj po alijas"
"obratit pažnju na kolon region , koj nem uvek unešenu vrednost NULL-ovi su sortiran zajedn i na početku"
"korak 3 : upravljanj NULL-ovima upi isključuje region , koj nema vrednost il im vrednost ' sp '"
"korak 4 : upravljanj NULL-ovima upi ukjučuje sam region koj im vrednost ' sp '"
"korak 5 : upravljanj NULL-ovima"
"testiranj jednakost sa null neće vratit tačan rezulta"
"upi isključivo prikazuj region koj im vrednost"
"korak 4 : Korišćenje order by za sortiranj rezultujućeg skup podatk sortiranj po imen kolon u opadajućem redosled"
"korak 4 : Korišćenje order by za sortiranj rezultujućeg skup podatk sortiranj po različitom redosled ( opadajućem i rastućem ) za više kolon"
"korak 3 : Korišćenje wher za filtiranj rezultat wher klauzul ne može da korist alijas iz select list"
"upi se neće izvršiti , jer se javlj greška . Zašto ?"
"korak 5 : Korišćenje wher za filtiranj rezultat filtiranj po datum"
"korak 6 : Korišćenje wher za filtiranj rezultat Korišćenje logičkog operator"
"korak 8 : Korišćenje wher za filtiranj rezultat Korišćenje not sa in operator"
"korak 9 : Korišćenje wher za filtiranj rezultat - Korišćenje logičkih operator za filtriranj po opseg datum"
"napisa select naredb , koj će vratit kolon custid i contactnam iz tabel sales . customers , i kolon orderid i orderda iz tabel sales . orders . Rezultujući skup podatk treba da sadrži sam faktur kreiran posl 1. apri 2008. godin . sortira rezulta u opadajućem redosled po orderda kolon i rastućem redosled po custid kolon ."
"napisa select naredb , koj će vratit kolon orderid i orderda iz tabel sales . orders . upi treba da vra poslednj 20 faktur , na osnov njihov datum kreiranj ."
"napisa select naredb , koj će vratit ist rezulta ka prethodn napisan upi , al korišćenjem OFFSET-FETCH klauzul ."
"napisa select naredb , koj će vratit kolon custid , companynam , contactnam , address , city , country , phon iz tabel sales . customers . Rezultujući skup podatk treba da sadrži sam kupc iz brazi ."
"korak 2 : prover podatk za zaposlen 7"
"korak 3 : promen 1 podatk za zaposlen 7"
"korak 3 : ubacivanj 1 red u hr . employees tabel"
"korak 8 : prover podatk za zaposlen 13"
"korak 10 : trunca tabel dbo . northwindcustomers"
"korak 4 : prover podatk"
"korak 5 : ubacivanj više red u hr . employees tabel pomoću jedn insert naredb"
"korak 7 : kreiranj i popunjavanj tabel dbo . northwindcustomers"
"korak 8 : ubacivanj svih red iz tabel dbo . northwindcustomers u tabel sales . customers"
"korak 2 : pregled zaposlen"
"modifikovanj podatk :: zadac"
"napisa insert naredb , koj će doda nov red u tabel production . categories . koristit sledec vrednost : categorynam : mlek i jaj description : kategorij obuhvat mlek , proizvod od mlek i jaj . posl unos , prikaza sam podatk o nov kategorij ."
"napisa insert naredb , koj će doda 3 nov red u tabel production . products , koj propada prethodn unesen kategorij . koristit sledec vrednost za 1 nov red : productnam : ab jogurt 1 kg supplier : supplier swrx unitpric : 114.99 discontinued : 0 koristit sledec vrednost za 3 nov red : productnam : abc kr sir sa povrćem 100 g supplier : supplier vhqzd unitpric : 64.99 discontinued : 0 koristit sledec vrednost za 3 nov red : productnam : bell kisel pavlak organic 15 % 150 g supplier : supplier stuaz unitpric : 49.99 discontinued : 0 posl unos , prikaza sam za nov proizvod , sledec vrednost : ' sifr proizvod ' , ' naziv proizvod ' , ' naziv kategorij ' , ' naziv dobavljc ' , ' cen ' , ' aktivn proizvod ' . kolon [ discontinued ] treba da im vrednost ' da ' , ak je vrednost za [ discontinued ] = 0 , il ' ne ' , ak je vrednost za [ discontinued ] = 1"
"napisa insert naredb , koj će doda nov red u tabel hr . employees . koristit sledec vrednost : titl : sales representativ titleofcourtesy : mr firstnam : laurenc lastnam : grider hireda : 04/04/2013 birthda : 10/25/1975 address : 1234 1 st av . S. E. city : seattl country : us phon : ( 206 ) 5 - 0105"
"object : tabl [ dbo ] . [ northwindcustomers ] script dat : 10/25/2016 1:33:50 pm"
"agregatn funkcij :: dem 1"
"obratit paznj na max ( qty )"
"filtriranj grup pomoću having :: dem 3"
"korak 2 : koriscenj having klauzul"
"zbog logick redosled izvrsavanj select naredb , javlj se gresk alijas count_orders ne moz da se korist u having"
"upi prikazuj razlik izmedj filtriranj u wher i having filtriranj pomoc wher"
"izvrsi naredn upi , koj prikazuj upotreb agregatn funkcij sa karakter tipov podatk"
"upi korist having za filtriranj kupac , koj su kupi nest vis od 1 br red = 88"
"upi prikazuj proizvod i br njihov pojavljivanj u fakturam br red = 77"
"obratit paznj na kraj list"
"upi vrc sam proizvod , koj su kupovan najmanj 10 put -- br red = 71"
"izvrsi naredn upi , koj prikazuj upotreb distinct sa agregatn funkcij"
"izvrsi naredn upi , koj prikazuj uticaj null na agregatn funkcij . prv , prover postojanj null"
"drug , agregatn funkcij ignoris null , izuzev count (*)"
"korak 3 : ilustracij ponasanj null sa agregatn funkcij"
"popunjavanj tabel"
"korak 2 : upotreb ugradjen agregatn funkcij"
"pregled sadrzaj nov tabel"
"obratit paznj na null"
"izvrsi naredn upi i uporedi ponasanj funkcij avg sa aritmetick sredin ( sum / count )"
"kreiranj tabel t2 primer ilustruj zamen null pr agregacij"
"izvrsi naredn upi , koj , pored standardn kolon , korist i agregatn funkcij u select list . prilik izvrsavanj upit , javlj se gresk . obratit paznj na poruk ."
"grupisanj i agregacij :: zadatk 1"
"dopun napisan select naredb sledećim kolon za svak grup kategorij : ukupn iznos prodaj ( alijas totalsalesamount ) br faktur ( alijas nooforders ) prosečan iznos po faktur ( alijas avgsalesamountperorder )"
"napisa select naredb , koj će prikaza 10 najbolj kupac , koj su potrošili više od $ 10. prikaza kolon custid iz tabel sales . orders i izračunatu kolon sa alijas totalsalesamount , koj sadrži ukupan iznos prodaj ."
"iskopira prethodn napravljen select i modifikujt ga da u select list uključi city kolon iz sales . customers tabel . Izvršite upi . Zašto se javlj greška ? ispravi upi , tak da se može izvršiti bez greške ."
"iskopira prethodn napisan select naredb i u nju doda filter za prikaz grup , koj su ostvari proda veću od $ 10. filtrira sve red , tak da sadrže sam podatk za zaposlen sa šifrom 3."
"Napišite select naredb , koj treba da prikaže sam kupc koj su napravi više od 25 faktur . select treba da sadrži informacij o datum poslednj faktur ( alijas lastorderda ) i ukupan iznos prodaj ( alijas totalsalesamount ) ."
"napisa select koj će kreir grup na osnov categoryid i categorynam kolon iz production . categories tabel . filtira rezulta tak da uključe sam kategorij koj su naručivane 2008. godin ."
"napisa select naredb , koj će prikaza orderid i orderda kolon iz sales . orders tabel i ukupn proda po orderid . ukupn prodaj se dobij množenjem kolon qty i unizpric iz sales . orderdetails tabel . koristit alijas salesmount za izračunatu kolon . sortira rezulta u opadajućem redosled po ukupn prodaj ."
"napisa select naredb , koj će prikaza ukupan iznos prodaj za svak mesec . select treba da uključi izračunatu kolon yearmonthn u oblik ymm , a koj se dobij na osnov orderda kolon iz the sales . orders tabel . select treba da uključi i ukupan iznos prodaj po godin i mesec u okvir godin . sortir rezulta po yearmonthn izračunatoj kolon ."
"napisa select naredb , koj će prikaza za sve kupc sledeće podatk : custid i contactnam kolon ukupn iznos kupovin po kupc , alijas totalsalesamount maksimaln iznos po stavk faktur , alijas maxsalesamountperorderlin ukupn br stavk , alijas numberofrows ukupn br faktur , alijas numberoforderlines sortir rezulta po totalsalesamount ."
"napisan select naredb prikazuj ukupan br faktur ( alijas nooforders ) i ukupan br kupac ( alijas noofcustomers ) po godin ( alijas orderyear ) ."
"Izvršite upi . Zašto je br kupac ist ka i br faktur ?"
"samostaln podupi :: dem 1"
"podupi sa exists :: dem 3"
"korak 2 : upotreb exists upi vraća podatk o kupc , koj su obavi bar jedn kupovin"
"korak 3 : upotreb not exists upi vraća podatk o kupc , koj nis obavi ni jedn kupovin"
"korak 4 : Poređenje count (*) > 0 sa exists : upotreb count (*) > 0"
"upi korist podupi da bi vrati detalj o faktur , koj je poslednj kreiran"
"upotreb exists"
"izveden tabel :: dem 4"
"korak 4 : Korišćenje lokaln varijabl"
"korak 2 : cte primer"
"korak 3 : Više-vrednosni podupi"
"upi vraća sve faktur , koj su kreiran za kupc iz meksik obratit pažnju na in operator"
"korak 2 : korelativn podupi upi prikazuj podatk o poslednj kreiran faktur za svak kupc"
"korak 2 : skalarn poduput : select naredb vraća faktur sa najvećim broj ( poslednj kreiran )"
"upi vraća podatk o kupc i najvećoj količini proizvod , koj su kupi u nek mesec"
"podupi :: zadatk 1"
"napisa select naredb , koj će vratit custid i contactnam kolon iz sales . customers tabel . rezulta treba da uključi sam kupc , koj su nešto kupi posl 1. apri 2008. godin i ak je vrednost unitpric kolon veća od 100."
"napisa select naredb , koj vraća productid i productnam kolon za proizvod čija je cen veća od 100 , a na osnov izveden tabel . izveden tabel treba da iz tabel production . products uključi sledeće kolon : productid , productnam , supplierid , unitpric , discontinued , ka i kolon pricetyp , koj se dobij na sledeći način : ukolik je cen veća od 100 , tad kolon treba da sadrži vrednost high , u suprotn , kolon treba da sadži vrednost normal . izveden tabel treba da uključi sam proizvod , koj pripada kategorij 1."
"napisa select naredb , koj je vratit orderid , orderda , empid , custid kolon iz sales . orders tabel . filtrira podatk , tak da budu uključene sam faktur , kod koji je datum jednak datum poslednj kreiran faktur . POMOĆ : koristit prethodn napisan upi ka podupi ."
"napisa select naredb , koj će vtatit custid kolon i 2 izračunate kolon : totalsalesamount , koj vraća ukupan iznos prodaj po kupc avgsalesamount , koj vraća prosečnu vrednost kupovin po kupc da bi se ispravn izračunala prosečna vrednost kupovin po kupc , potrebn je prv da se izračuna ukupn prodaj po kupc i faktur . Definišite izveden tabel , koj će spoji sales . orders i sales . orderdetails tabel"
"cte :: zadatk 5"
"napisa select naredb , koj vraća ist rezulta ka task 1 u zadatk 4 , sam što treba da korist cte ."
"napisan upi prikazuj faktur kupac , čiji kontakt počinje slov I. Izvršiti upi i pogleda rezulta . modifikova upi tak da prikazuj faktur kupac , čiji kontakt počinje slov B. Izvršiti upi . Zašto se desi greška ? napravi potrebn promen , kak bi se upi izvršio bez poruk o greški ."
"upi 2 napisa upi , koj će vratiti kolon custid i contactnam iz sales . customers tabel . rezulta upit treba da uključi sam kupc , koj nis ništa kupi ( koristit podupi )"
"napisa select naredb , koj će vratit datum poslednj kreiran faktur ."
"napisan upi ubacuj nov red u the sales . orders tabel . nov red nem vrednost za custid kolon . Izvršiti upi . iskopira prethodn napisa upi ( upi 2 ) i pogleda rezulta . kolik red se pojavljuj u rezultat . Zašto ? promen iskopiran upi 2 , tak da prikazuj ist br red , ka i upi 2 ( POMOĆ : Isključite red koj im null u custid kolon ) ."
"napisa select naredb , koj će vratit custid i contactnam kolon iz sales . customers tabel . doda izračunatu kolon lastorderda , koj treba da sadrži poslednj datum faktur iz sales . orders tabel za svak kupc . ( POMOĆ : koristit korelisan podupi . )"
"100 red"
"korak 3 : Korišćenje union union vraća sve red iz ob tabel ( isključuje duplikat )"
"3 zajednička , različita red"
"promenjen redosled tabel ( vraćaju se jedin red iz sales . customers )"
"korak 3 : Korišćenje outer apply Korišćenje outer apply za uključivanje i kupac bez order"
"korak 2 : Korišćenje union all union all vraća sve red iz ob tabel ( uključuje duplikat )"
"set operator :: zadatk 1"
"iskopira prethodn napisan upi , i zamen cross apply operator sa outer apply operator . kolik im rezultujućih red ?"
"iskopira prethodn napisan upi , i modifikujt ga tak da prikazuj sam kupc bez proizvod . POMOĆ : u wher klauzul , proveri da li je productid null ."
"napisa select naredb , koj će vratit productid i productnam kolon iz production . products tabel . rezulta treba da uključe sam proizvod , čija vrednost prodaj je veća od 50.0 vrednost prodaj se dobij tak što se saber svi proizvod ( qty * unitpric ) iz tabel sales . orderdetails"
"brisanj kreiran funkcij ."
"napisa select naredb koj će kombinova rezulta iz prethodn 2 upit . koristit i union i union all operator . kolik je ukupan br red kod korišćenja union , i kolik se vraća red kod korišćenja union all operator ?"
"iskopira naredb koj sadrži except operator . doda intersect operator . posl ov operator , doda naredb iz prethodn korak ."
"napisa select naredb , koj će vratit productid i productnam kolon iz production . products tabel . za svak proizvod . prikaza 2 poslednj kreiran red ( na osnov orderid broj ) iz sales . orderdetails tabel koristit cross apply operator . sortir red po kolon productid ."
"integritet podatk :: dem 1"
"korak 4 : unos nepostojećeg kupc u customerorder"
"korak 5 : brisanj kupc , koj je obavi kupovin"
"naziv ograničenja treba da se kopir !"
"korak 2 : kreiranj dbo . opportunity tabel"
"korak 3 : dodavanj 2 red u dbo . opportunity tabel"
"korak 5 : prob da li može da se unes određena vrednost za opportunityid javlj se greška !"
"korak 8 : kreiranj 3 tabel sa identity kolon"
"korak 9 : dodavanj podatk"
"korak 10 : prikaz podatk prek jedn rezultujućeg set"
"obratit pažnju na više ist identity vrednost ( u različitim tabe )"
"korak 11 : brisanj tabel"
"korak 12 : kreiranj sekvenc , koj će koristit sve 3 tabel"
"korak 14 : unos ist podatk"
"korak 17 : kreiranj novi sekvenc će uzet u obzir prethodn kreiran vrednost !"
"korak 2 : kreiranje customer i customerorder tabel i popunjavanj tabel podac"
"Obrišite tabel student"
"kreir tabel student , koj treba da sadrži podatk o upisan student . u tabel treba da se nalaz sledeće kolon : brojindeks : obavezn kolon , primarn ključ jmbg : nij obavezn kolon , prover da li je unešeno 13 karakter , jedinstven ključ im : obavezn kolon imeroditelj : nij obavezn kolon prezim : obavezn kolon datumrodjenj : nij obavezn kolon , student u moment upis mora imat najmanj 18 godin mestorodjenj : obavezn kolon zemljarodjenj : obavezn kolon , ak se ne unes , podrazumevan ' srbij ' studij : nij obavezn kolon Definišite za kreiran tabel pk i uk , ka i default i check ograničenja ."
"indeks :: dem 1"
"korak 5.1 : obratit pažnju na kolon avg_fragmentation_in_percent i avg_page_space_used_in_percent"
"( uočite brzin koj se izvršava promen podatk )"
"korak 8 : rebuild tabel i njen indeks"
"korak 10 : brisanj tabel"
"indeks :: dem 3"
"korak 3 : Pretraživanje sys . indexes za pregled struktur tabel"
"indeks :: dem 4"
"korak 1 : tempdb je aktivn baz"
"korak 2 : kreiranj tabel"
"korak 3 : kreiranj neklasterovan indeks nad kolon publisherid i releaseda u opadajućem redosled"
"korak 4 : pregled estimated execution plan za napisan upi"
"korak 5 : Uključivanje titl kolon u indeks"
"korak 6 : ponov , pregled estimated execution plan za napisan upi"
"korak 5 : promen podatk u tabel"
"korak 6 : prover fragmentacij pomoću sys . dm_db_index_physical_stats"
"tempdb je aktivn baz"
"korak 6.1 : obratit pažnju na forwarded_record_count kolon u rezultat"
"korak 7 : rebuild tabel"
"korak 9 : brisanj tabel"
"indeks :: dem 2"
"korak 2 : kreiranj tabl sa definisanj primarn ključa"
"( obratit pažnju na im koj daj sql server daj ograničenjima i indeks )"
"korak 2 : kreiranj tabel ka heap"
"pogled :: dem 2"
"korak 2 : jednostavn pogled"
"Korišćenje prethodn kreiran pogled"
"korak 3 : ( mal ) složeniji pogled"
"tsql je aktivn baz"
"korak 4 : brisanj pogled"
"select * fr sys . views"
"pogled :: zadatk 1"
"testira kreiran pogled"
"napisa select naredb , koj će vratit kolon productid i productnam iz pogled production . productsbeverages . filtir podatk , tak da rezulta uključe sam proizvod , čiji je supplierid = 1."
"promeni definicij prethodn napisan pogled ( bez order by ) , tak da uključi nov , izračunatu kolon . nov kolon treba da vra vrednost ' high ' , ak je unitpric kolon veća od 100 , i u suprotn , vrednost ' normal ' . testira izmenjen pogled ."
"Obrišite kreiran pogled ."
"u okvir baz tsql , kreira pogled sales . faktureizposlednjegodin pogled treba da vra faktur kreiran u prethodn godin ( poslednj 12 mesec u odnos na trenutn datum ) , koj su im više od 1 stavk . pogled treba da prikaže sledeće kolon : orderid , custid , empid , orderda , requiredda ."
"napisa select naredb , koj će vratit productid , productnam , supplierid , unitpric i discontinu kolon iz production . products tabel . filtrir podatk , tak da rezulta uključuju sam proizvod koj pripada kategorij beverages ( categoryid = 1 ) . zapamtit napisan naredb ka pogled , sa imen production . productsbeverages ."
"korak 2 : kreiranj procedur sa 1 ulazn parametr ( bez output parametr )"
"korak 3 : testiranj procedur sales . getcustphon"
"korak 3 : Izvršavanje nek sistemsk procedur"
"korak 5 : Izvršavanje nek proširenih sistemsk procedur"
"korak 2 : kreiranj procedur sa 1 ulazn parametr"
"korak 3 : testiranj procedur production . productsbysuppliers sa različitim vrednost za ulazn parametar"
"korak 4 : modifikovanj procedur dodaj se još 1 parametar , koj određuje br rezultujućih red obratit pažnju na podrazumevan vrednost za @numrows , koj se korist u slučaju da se ne prosled vrednost za ova parametar"
"korak 2 : pregled sistemsk procedur object explorer - databases - system databases - master - programmability - stored procedures"
"procedur :: zadatk 1"
"kreir procedur production . Products_INSERT , koj treba da omogući unos nov proizvod u tabel production . products . proveri da li proizvod postoj , i u tom slučaju , prikaza poruk : proizvod već postoj u tabel . ukolik je proizvod uspešno unešen u tabel , vratit njegov identity ."
"kreir procedur sales . getorders , koj treba da vra kolon orderid , orderda , shippedda , custid , empid , shipperid iz tabel sales . orders procedur treba da im 4 opcion ulazn parametr : orderid , orderda , custid , empid . ukolik korisnik specificiraj vrednost za ulazn parametar , koristit vrednost parametr za filtriranj resultujućeg set . ukolik korisnik ne prosled vrednost za ulazn parametar , njegov vrednost treba da bud null , i u tom slučaju , rezultujući set ne treba da se filtrir po tom parametr . pomoc : potrazit na veb poja """" stored procedur with dynamic search filter """""
"kreir procedur"
"testir procedur"
"kreir procedur sales . gettopcustomers , koj treba da vra 10 najbolj kupac , njihov id , contactnam i vrednost kupovin . Izračunati procena kupovin za svak najboljeg kupc u odnos na ukupn vrednost kupovin . podatk sortir tak da najbolj kupac bud na vrh rezultujućeg set . testir izvršavanje procedur ."
"obrisa procedur"
"obrad grešaka :: dem 1"
"vrednost @@ error varijabl resetuj se posl izvršenja svak naredb"
"korak 8 : Pokušaj da se podign sistemsk greška"
"korak 3 : Greška koj nasta kod razrešavanja imen objekt . naredb je sintaksn ispravn ."
"korak 2 : Korišćenje try catch blok sa error funkcij Greška se dešava ak se varijabl @num dodel vrednost 0"
"declar @num varchar ( 20 ) = ' 0 ' ; begin try print 5 / cast ( @num as numeric ( 4,2 )) ; end try begin catch select ERROR_NUMBER ( ) as errnum , ERROR_MESSAGE ( ) as errmsg , ERROR_SEVERITY ( ) as errsev , ERROR_PROCEDURE ( ) as errproc , ERROR_LINE ( ) as errlin ; -- throw ; end catch ; go"
"korak 4 : Run-time greške ukolik se klikn na poruk u messag tab-u , selektuj se mest gde se desi greška"
"korak 4 : try / catch ne hvat greške koj nasta kod razrešavanja imen objekt"
"korak 5 : try / catch ne hvat greške koj su sintaksn"
"korak 6 : pregled grešaka opisan englesk jezik , čiji niv ozbiljnost je veći od 18"
"select * fr sys . messages wher language_id = 1033 and severity > = 19 order by severity , message_id ; go"
"severity ."
"sta"
"zamen za prv parametar"
"zamen za drug parametar"
"korak 5 : dodavanj nov greške pomoću sistemsk procedur sp_addmessage"
"Izvršite napisan kod . Zašto se ne podiže greška , iak se izvršava deljenj sa nul ? modifikujt napisan kod , tak što ćete doda 2 print naredb . 1. print naredb treba da prikaže br greške . 2. print naredb treba da prikaže poruk o greški . promen vrednost varijabl @num na a , i izvršite kod ponov . zat , promen vrednost varijabl @num sa a na 10 , i izvršite kod ponov ."
"Izvršiti napisan kod . obratit pažnju na pojav greške . za obrad greške , napišite try catch block ."
"korak 4 : MULTI-STATEMENT udf"
"testiranj"
"brisanj kreiran objekt"
"rezulta je 4.472135954958"
"korak 6 : test sa korišćenjem f-je ( ulaz je kolon iz tabel ) bez definisan šeme"
"korak 7 : test f-je ( ulaz je sistemsk f-ja )"
"korak 2 : primer max sistemsk skalarn funkcij"
"testiranj f-je : prikazuj se 5 poslednj porudžbina za kupc 79"
"korak 3 : inlin F-JA - 2. primer"
"prv view"
"poziv"
"kreir skalarn funkcij dbo . udf_IPtoNumber , koj će da dat ip adres konvertova u njen decimaln ekvivalent ."
"korak 2 : testiranj ip adres 95.215.220.0"
"korak 3 : testiranj sa geoipcountrywhois podac korak 3.1 : Koristeći Export-Import wizard kreir tabel geoipcountrywhois sa podac iz geoipcountrywhois . csv , koj se nalaz na materijal . korak 3.2 : proveri podatk u tabel geoipcountrywhois korak 3.3 : Pronaći koj državi propad adres 217.24.20.10"
"kreir skalarn funkcij , koj treba da vra br godin . br godin se računa ka razlik 2 datum u godin pomoću funkcij datediff . testir 3 situacij : 1. razlik između određenog datum rođenja i trenutn datum 2. razlik između 2 fiksn datum : 20101231 i 20151215 3. razlik između 2 fiksn datum : 20161231 i 20161201"
"korak 3 : Izvršavanje više naredb"
"korak 5 : brisanj tabel kreiran u 2. korak"
"korak 2 : kreiranj tabel za ilustracij transakcij prv , brisanj tabel , ukolik postoj"
"podrazumevan podešavanje"
"fk greška"
"Pošto je XACT_ABORT podešeno na on , nij dodat nijedn vrednost ( 1 i 3 su već bile u tabel )"
"korak 6 : Izvršavanje naredb sa greškom ( kak bi se testir upravljanj transakcij )"
"transakcij - read committed :: dem 4.1"
"korac u ov demonstacij se izvršavaju kombinovan sa korac u dem 4.2 ( u jedn prozor se otvor dem 4.1 , u drug prozor dem 4.2 )"
"korak 6 u konekcij 2 se , posl commi naredb u konekcij 1 , mogu videt promenjen podac"
"dobijaj se 2 red sa vrednošću 0.00 za discount kolon"
"transakcij - repeatabl read :: dem 5.1"
"korac u ov demonstacij izvršavaju se kombinovan sa korac u dem 5.2 ( u jedn prozor otvor se dem 5.1 , u drug prozor dem 5.2 )"
"korak 6 posl korak 5 , transakcij je odblokiran"
"transakcij - serializabl :: dem 6.1"
"korac u ov demonstacij izvršavaju se kombinovan sa korac u dem 6.2 ( u jedn prozor otvor se dem 6.1 , u drug prozor dem 6.2 )"
"korak 7 ( brisanj ubačenog red )"
"korak 8 Vraćanje izolacion nivo na podrazumevan vrednost"
"korak 4 Pokušaj ubacivanj red u sales . orderdetails tabel sa ist orderid vrednošću ( ka u upit u konekcij 1 ) obratit pažnju na blokad !"
"kod nižih nivo izolacij ( read uncommitted , read committed , repeatabl read ) , ov insert naredb ne bi bila blokiran"
"transakcij - snapshot :: dem 7.1"
"korac u ov demonstacij izvršavaju se kombinovan sa korac u dem 7.2 ( u jedn prozor otvor se dem 7.1 , u drug prozor dem 7.2 )"
"korak 5 : obratit pažnju da podac nis blokiran , al se dobijaj vrednost koj su postoja kad je transakcij počela ( discount = 0.00 )"
"transakcij :: zadatk 1"
"modifikova napisan kod tak da sadrži try . catch block . ukolik su ob insert naredb uspešno izvršene potvrdi transakcij . ukolik se des nek greška , poništiti transakcij . u okvir try blok napisa naredb za prikaz tekst """" commi the transaction … """" u okvir catch blok napisa naredb za prikaz tekst """" rollback the transaction … """" Izvršiti napisan kod . napisa select naredb za prikaz svih zaposlen ."
"Izvršite napisan kod , koj briše prethodn doda zaposlen ."
"Izvršite select naredb . kolik zaposlen se nalaz u rezultujućem skup ? zat , izvršite kod koj počinje sa begin tran i završava se sa commi tran . zbog greške u konverzij , podiže se greška . Izvršite ponov select naredb . obratit pažnju , bez obzir što se greška desi u okvir transakcion blok , doda je 1 red u tabel hr . employees ."
"korak 3 : kreiranj after upda okidača"
"pa tek ond kreiranj"
"korak 4 : test after upda triger"
"korak 3 : kreiranj instead of okidača"
"korak 4 : test instead of triger"
"delet fr dbo . zaposlen ; go"
"Okidači - alternativ korišćenju okidača :: dem 5"
"korak 4 : testiranj okidača"
"korak 5 : brisanj tabel i njen kreiranj sa izračunatom kolon"
"korak 6 : testiranj tabel"
"korak 3 : kreiranj ddl triger"
"korak 4 : test ddl triger"
"korak 4 : kreiranj 2 indeks , da bi se testir rad ddl triger"
"korak 5 : brisanj kreiran objekt"
"korak 5 : brisanj okidača"
"korak 6 : uklanjanj dodat red"
"korak 3 : kreiranj after delet okidača kad se briše kategorij , okidač postavlj kolon discontinued na 1 za sve proizvod koj pripada obrisan kategorij )"
"prover podatk"
"korak 5 : brisanj kreiran tabel ( ujedn se brišu i postojeći okidači )"
"triger :: zadatk 1"
"kreira triger za insert u tabel sales . customers , koj će ubaci nov red u tabel dbo . customerlogs sa odgovarajućim podac"
"testira triger za insert u tabel sales . customers proveri da li je nov kupac ubačen u tabel dbo . customelogs"
"kreira tabel dbo . customerlogs , sa sledećim kolon : custid int not null action varchar ( 20 ) not null actionda datetime2 not null ( default constaint = sysdatetim ( )"
"when last_active_at is null then 4"
"view structur for view__detalji_o_agentima"
"triggers structur for tabl articl"
"navica premium dat transfer sourc server : localhost sourc server type : mariadb sourc server version : 100129 sourc host : localhost : 3306 sourc schem : idb_2008213514 target server type : mariadb target server version : 100129 fi encoding : 65001 dat : 08/01/2020 13:03:25"
"triggers structur for tabl sale_article"
"tabl structur for articl"
"tabl structur for sal"
"tabl structur for sale_article"
"function structur for get_account_id_by_account_number"
"procedur structur for withdraw"
"navica premium dat transfer sourc server : localhost sourc server type : mariadb sourc server version : 100129 sourc host : localhost : 3306 sourc schem : ir2_banka target server type : mariadb target server version : 100129 fi encoding : 65001 dat : 12/12/2019 11:37:54"
"tabl structur for account"
"records of transaction"
"records of type"
"procedur structur for deposi"
"napravi funkcij koj vrc sald racun na osnov broj racun koj je dat ka ulazn argument funkcij . sald je decimal ( 10 , 2 ) . vodi racun o tom da sum ulazn il izlazn transakcij tog racun moz da bud null , tak da moramo da koristim ifnull funkcij da takv vrednost tretiram ka 0 pr aritmetick obrad ."
"select get_saldo_by_account_number ( ' 100 - 1244707 - 78 ' ) ;"
"tabl structur for user_login"
"view structur for view__latest_activities_by_user"
"view structur for view__latest_logins_by_user"
"records of messag"
"tabl structur for user"
"records of user"
"` year ` > = 2001 and ` year ` < = 2008"
"ov je alternativn"
"and im prioritet nad or"
"vezivanj actor i film_actor"
"vezivanj film i film_actor"
"sortir rastuc"
"grupis po id aukcij"
"bir maksimumaln cen iz skup"
"select gettotalamountbyagentbetweendates ( 1 , ' 2020 - 01 - 02 ' , ' 2020 - 01 - 08 ' ) ;"
"view structur for view__detalji_o_aukcijama"
"view structur for view__spisak_aukcija_za_stopiranje"
"event structur for e_sii2_aukcije_stopiranje_neaktivnih_aukcija"
"tabl structur for auction"
"records of auction"
"records of offer"
"napisi izraz koj ce aukcij koj odgovaraj kriterijum koj je prethodn opisan da stopiraj postavljanj is_stopped polj na vrednost 1."
"starts ' 2020 - 01 - 20 11:00:00 '"
"starts CURRENT_TIMESTAMP + 1 day"
"ends ' 2020 - 02 - 20 11:00:00 '"
"ends CURRENT_TIMESTAMP + 7 day"
"deaktiviranj"
"pravljenj nalog korisnik"
"oduzimanj prav korisnik nad tabel"
"oduzimanj svih prav nad svim element baz"
"kreiranj i dodel svih prav korisnik nad svim baz i tabe"
"dodel svih prav korisnik nad tabe u baz"
"student"
"check ko je od studneat na predmet"
"i na kraj obris grup"
"grup"
"obris sve studnet za grup koj brises"
"pr promen predmet moraju su list updateova"
"lab vezb"
"projekt / domac"
"enabl pitanj predmet"
"prover usaglasenost inicijal , indeks i username-a"
"uloguj zaposlen"
"sortiranj obavestenjapredmet"
"upda sifr"
"vratit korisnik na ekran za prijavljivanj na sist izloguj ga pr tog"
"registracij"
"upload slik"
"~ izmen student ~"
"~ izmen zaposlen ~"
"~ dodavanj predmet i izmen predmet ~"
"~ fajlov ~"
"omoguc multipl selection u html , i logik iz"
"zvanj , postoj predefinisan"
"jedinstven , kak mu definisa forma ?"
"status i br. kabinet mu dodel nek , valjd admin"
"ov stav post u moj licn niz , to je ok sto se tic frontend"
"ponov , prosledjuj se kopij niz posts iz nek sad optimizacij klinacpalc razlog"
"sled sam jedn pokazn f-ja , ne treba mi u projekt"
"hajd da proba da getuj user iak podatk na server stran im sam tr polj"
"ov transformedtemps je niz podatk koj sam izvadi iz baz i koj je vrati pip f-ja"
"ev ga i nacin da servis sam vra podatk a da komponent kasn obradjuj subscrib"
"ak nem query parameter , znac da se rad o listanj kolekcij iz objekt"
"ak postoj queryparams , dohvata sta zeli da lista"
"to do : gresk jos nek za usernam i slicn"
"promeni u posebn kolekcij ?"
"dohvat sve zaposlen"
"dohvat student po usernam"
"dohvat obavesttenj za predmet"
"dohvat informacij o predmet"
"dodaj materijal za predavanj"
"dodaj student na spisak"
"* rut za upload materiaja"
"im fajl"
"prover da li je admin"
"prover da li je student"
"nist nij prosl doda konacn poruk !"
"ak je jednocifren"
"post zahtev - da azuriram baz , dohvatim podatk"
"iz konstruktor"
"predmet koj nastavnik drz"
"sve vest od profesor"
"na koj predmet je student prijavljen"
"pomocn niz za vest"
"sve vest iz kolekcij"
"dohvat sve nastavnik na predmet iz kog je vest"
"za brisanj ( da prikaz )"
"cuva trenutn ( izabran ) predmet u kolekcij trenutnisacuvanipredmet"
"u predmet trazim sve nastavnik na tom predmet"
"dohvata zbog ispisivanj"
"komponent za upravljanj kategorij obaveštenja . admin može da dodaj i uklanj kategorij . doda kategorij postaj dostupn zaposlen pr dodavanj nov obaveštenja ."
"komponent za upravljanj predmet . admin može da dodaj i uklanj predmet ."
"trenutn selektovan podstranic u okvir stranic predmet"
"Početne vrednost za nov predmet"
"selektuj podstranic u okvir stranic predmet"
"kreir predmet"
"funkcij za dohvatanj spisk student u csv format"
"komponent sa form za ažuriranje il brisanj student od stran admin ."
"komponent za upravljanj zaposlen . admin može da dodaj i uklanj zaposlen iz sistem . admin može da dodaj zaposlen na predmet ( plan angažovanja ) ."
"Čuva je u polj slik u format string | arraybuffer"
"komponent sa form za ažuriranje il brisanj zaposlen od stran admin . Sadrži i polj za dodavanj fotografij zaposlen ."
"metod za zaposlen . Ažurira informacij o predmet ."
"Pomoćna funkcij koj dohvat jwt token iz loca Storage-a ukolik on postoj . jwt token se šalje u okvir header rad autentifikacij ulogovan korisnik ."
"dohvat sva obaveštenja ."
"metod za zaposlen . dohvat sva obaveštenja koj je postavi i obaveštenja na predmet na koj je angažovan ."
"dohvat sva obaveštenja za nek predmet ."
"metod za zaposlen i student . za zaposlen dohvat sve spisk koj je postavi i spisk za predmet na koj je angažovan . za student dohvat sve spisk koj se ondos na predmet koj pra ."
"metod za zaposlen . Prisleđuje se id spisk . otvar i zatvar spisak u zavisnost od vrednost parametr ' otvoren ' ."
"metod za admin . Vraća celokupn informacij iz baz o svim predmet ."
"komponent sa form za login ."
"dohvat sve predmet na master"
"proverav da li je korisnik ulogovan da bi link ka stranic predmet bili vidljiv"
"komponent za prikaz informacij o master studij i spisk predmet ."
"komponent za navigacij ka stranic : / nauka-istrazivanja , / nauka-projekti"
"3 mesec u milisekund = 760"
"dohvat list predmet za osta odsek"
"komponent za prikaz list predmet na ostali odsec ( on koj nis si il rt )"
"dohvat list predmet za odsek rt"
"komponent za prikaz svih informacij o nek predmet . Sadrži podstranic za : Obaveštenja , informacij , predavanj , Vežbe , ispitn pitanj , laboratorij , Domaći ."
"Osvežava podatk o predmet"
"Izvršava promen lozink da bi promen lozink bila uspešna , korisnik mora tačno da unes svoj star lozink"
"proverav da li su unet svi obavezn podac"
"redirect ak nij student"
"da li je list prijavljen student trenutn vidljiv za spisak sa određenim indeks"
"da li je form za prijav trenutn vidljiv za spisak sa određenim indeks"
"prover da li student može da se prijav na dat spisak"
"komponent za prikaz poruk o grešci u slučaju neautorizovan pristup nek stranic ."
"metod za admin . Ažurira informacij o nek student ."
"metod za admin . uklanj postojećeg student ."
"metod za admin . registruj nov zaposne na sist ."
"metod za admin . dohvat sve informacij o nek zaposlen ."
"login korisnik ( student , zaposlen il admin ) na sist . Vraća jwt token koj služi za dalj autentifikacij korisnik pr rad sa sistem ."
"servis za upravljanj korisnik . osvaruj komunikacij sa backend del sistem slanj zahtev pomoću modul httpclient ."
"menj lozink trenutn korisnik . star lozink mora da se poklap da bi se ažuriranje uspešno izvršilo ."
"dohvat ulog trenutn korisnik ( student , administrator il zaposlen )"
"dohvat korisničko im zaposlen iz prosleđenog parametr"
"komponent za prikaz detaljn informacij o nek zaposlen . Sadrži informacij o zaposlen koj su unel admin il sam zaposlen , ka i slik koj je opcion doda admin ."
"dohvat list predmet na koj je trenutn ulogovan zaposlen angažovan"
"Obrađuje fajlov doda na obaveštenje Moguće je dodavanj više od jedn fajl"
"Moguće je dodavanj više od jedn fajl"
"Izvršava kreiranj nov obaveštenja"
"komponent sa form za dodavanj nov spisk od stran zaposlen ."
"tajn šifra za enkripcij i dekripcij token"
"funkcij authoriz se izvršava pr obrad svak zahtev . jwt token koj služi za autorizacij se čita iz header-a svak pristiglog zahtev proverav se da li korisnik ulog odgovar zadat prav pristup u suprotn se vraća 401 unauthorized ulog : administrator , zaposlen il student"
"primer poziv : authoriz ( [ "" administrator "" , "" zaposlen "" ] )"
"prelazak na obrad zahtev"
"Pronalaženje svih obaveštenja za te predmet"
"Čitanje korisničkog imen trenutn ulogovan korisnik iz token"
"type : obavezan , izborn"
"predavanj , vezb , lab , projekt , ispi , obavestenj"
"uploading the imag / n uupload . singl uz iz req . body . fi i storuj"
"men za zaposlen"
"men za student"
"* * komponent koj sluz za navigacij izmedj plan angazovanj i izmen podatk"
"izbris sve odsek iz kurs ( da bi doda nov )"
"* * metod dohvat sve predmet zajedn sa nastavnik koj su angazovan na njim * povratn vrednost je gresk iz standarderrorresponses il niz tip coursedatawithstaff *"
"jedan cours objekt koj sadrz staffdat i basiccoursedat"
"za svak par course_id - user_id dohva podatk za nastavnik"
"kraj obrad jedn podatk iz baz"
"* filtriranj niz ka lik operator"
"* * metod kreir indeks grup ov tip * u svrh kreiranj imen grup koj se dodaj * @param dat"
"** * * dohvat sve predmet zajedn sa grup i nastavnik angazovan u tim grup *"
"prodj kroz svak grup koj postoj za ova kurs"
"za svak plan koj ukljucuj ov grup ( u sustin za svak zaposlen ) kreiraj podatk koj ce biti vracen klijent"
"vracanj rezultat klijent"
"* im koj se definis na osnov * tip materijal kom pripad , * file_name iz request * i id-ja pod koji je ubacen u baz * ( ex . _notice_file_name_id ) *"
"* * registracij student sa potrebn podac za baz"
"ukljuc podatk za kurs"
"* * * all inf dat"
"* * neuspesn azuriranj iz nepoznat razlog ( prosl su sve osta prover , al se upi ne izvrsav ispravn ) upda upi"
"* * gresk u parametr *"
"* * objekt notic mora biti dohvacen iz baz uz includ odgoarajuc tabel * @param notic"
"** * * azuriranj podatk koj su dozvoljen da budu azuriran od stran zaposlen * *"
"* * * brisanj obavestenj koj je postavi nastavnik * staff_id : nastavnik * notice_id : id obavestenj koj se bris * *"
"izmen naslov , opis i datum"
"consol . log ( "" req . body . files ok "" )"
"* * * dohvatanj obavestenj po id-ju * parametr : * notice_id : id obavestenj"
"* * dohvatanj svih kursev na koj nastavnik predaj , zajedn sa * obavesetenj , sekcij i linkov do materijal koj su postavljen * *"
"ko je postavi materijal"
"izbris ulaz iz baz"
"dodavanj materijal u baz"
"* * niz svih ruter koj se korist *"
"promen slik -"
"obavestenj admin -"
"doda profesor na predmet"
"prover sta id ovd"
"obavezan il ne obavezan"
"prelazak na stranic sa list predmet"
"povratk na stran sa opcij koj im admin"
"pomocn funkcij koj sluz za plan angazovanj za vezb"
"funkcij koj dodaj postojanj aktivnost lab , domaceg il projekt iz tog predmet"
"brisanj korisnik - zaposlen il student u zavisnost od tog da li je prikazan list student il ne funck prihvat jedn korisnik - student il zaposlen"
"rutiranj na stranic gde admin im svoj opcij"
"funck koj sluz za login korisnik , najpr se pokusav sa dohvatanj podatk koj je une admin , ukolik se ne usp , prelaz se na prover tabel za zaposlen , ukolik ni to ne usp , prelaz se na pretrag tabel za student i tu se zavrsav pretrag . ukolik nis pronadjen odgovarajuc podac , metod vrc gresk da su unet pogresn podac"
"pretrazuj student"
"mora da promen lozink prv"
"za cuvanj materijal na disk"
"za student i da bih prati predmet koj je prijavi - pomocn flag , ne postoj u baz"
"o - otvoren , z-zakljucan"
"naziv npr. grup 1 za predmet x"
"da li postoj limi 1-postoji , 0-ne postoj"
"ak postoj limi , max br osob na spisk"
"profesor koj je okaci spisak"
"postavljanj status spisk na zatvoren i onemogucavanj student da se i dalj prijavljuj na spisak"
"ak nema u localstorag da se dohvat iz baz prilik ucitavanj stranic"
"funkcij koj dohvat sva obavestenj koj je okaci taj zaposlen"
"izmen osnovn informacij o zaposlen"
"da omoguc dodavanj / uklananj zaposlen iz grup - ja se ne nalaz u svim grup"
"dodavanj zaposlen u nek grup za predavanj"
"- de za dodavanj materijal -"
"dodavanj nov lab vezb na server i azuriranj trenutn predmet na front"
"brisanj vezb - funkcij pr te vezb i indeks u niz vezb"
"brisanj projekt - funkcij pr taj projekt i indeks u niz projekt"
"funkcij koj je sluzi za prover prilik realizacij nek funkcionalnost"
"rutiranj na admin stran"
"dodavanj informacij o nov projekt koj ce biti dostupan na sajt"
"funkcij za logout - ciscenj celog localstorag"
"administratorov funkcij koj sluz da student odobr pracenj odredjen predmet nakon tog , student im prav da pregled predmet i skid materijal koj su dostupn kod tog predmet"
"dohvat naziv predmet na osnov id predmet"
"dohvat sve student iz baz"
"brisanj zaposlen na osnov id zaposlen"
"dodavanj nov predmet - funkcij pr objekt predmet"
"dohvatanj predmet na osnov id predmet"
"azuiriranj obavestenj , salj se ce objekt obavestenj"
"pomocn funkcij"
"nij koriscenj"
"dohvat zvanj na osnov id zvanj"
"dohvatanj svih projekt koj postoj u baz"
"dohvatanj nastavnik na osnov korisnick imen"
"dohvat obavestenj koj postoj na predmet"
"dohvatanj predmet na osnov tip studij"
"postavljanj zahtev za pracenj , pr se korim student koj salj zahtev i id predmet za koj se salj zahtev"
"funkcij za registracij nov student"
"azuriranj svih neophodn informacij o zaposlen"
"dohvat sve nastavnik"
"dodavanj nov obavestenj"
"obavestenj za predmet , sadrz naslov , sadrza , na koj predmet se odnos obavestenj ( id predmet ) , datum postavljanj obavestenj , korisnick im profesor koj je okaci to obavestenj , link i naziv fajlov koj je okaci profesor uz obavestenj"
"opst obavestenj koj su dostupn na pocetn stranic sistem sadrz naslov obavestenj , sadrza obavestenj , datum postavljanj obavestenj i kategorij obavestenj"
"predmet sem - sadrz naziv predemt , sifr predmet , tip predmet ( obavezn il izborn ) , fond casov ( 3 + 0 + 2 ) , br espb poen , smer , semstar / semestr u koj se odrzav predmet , cilj i ishod predmet , termin vezb , temin predavanj , informacij o tom da li postoj lab vezb , domac zadac , projekt i ukolik postoj , ond postoj i detalj o ov aktivnost . postoj i raspodel broj poen po aktivnost , link ka fajlov koj se tic predavanj , vezb , ispitn rok , projekt , domaci zadatk . sadrz informacij o tom da li su dostupn stranic za pregled ispitn rok , projekt , lab vezb . sem predmet sadr i informacij o tom koj nastavnic su angazovan na koj grup predavanj i koj grup vezb ( plan angazovanj ) ."
"termin sem - sadrz dan i vrem termin za odrzavanj vezb i predavanj , zamisljen je da je moguc izabra sve radn dan od ponedeljk do petk i vremen u period od 08 h - 22 h"
"zahtev sem - sadrz informacij o tom koj student je uputi zahtev ( korisnick im student ) , za koj predmet ( id predmet ) , flag - na pocetk je 0 jer zahtev nij prihvacen , a administrator kad prihva zahtev , flag postaj 1 i student dobij mogucnost da aktivn pra predmet"
"funkcij koj dodaj nov predavanj u folder podac i podfolder za taj konkretan predmet korist se multer bibliotek koj je namenjen za upload fajlov na server"
"consol . log ( "" uspesn ucita predavanj ! "" )"
"jak je bitn da se ovd stav vracanj poruk kak bi postoja sinhronizacij izmedj front i back i kak bih na front im azurn situacij da sam igurn na back uradi upda . desava se da mi , ak ne stav povratn poruk u okvir upda metod , da ne dobi azurn informacij na front"
"funkcij koj koj se korist kod student . on sluz da se posalj njegov rad prilik dodavanj seb na spisak korist se multer bibliotek koj je namenjen za upload fajlov na server"
"funkcij koj korist student kak bi se prijavi na nek otvoren spisak"
"nij prisutn za ' admin ' korisnik ."
"polj prisutn sam za ' student ' korisnik ."
"moguc vrednost : ' admin ' , ' zaposlen ' il ' student ' ."
"spisk : [ ] ;"
"prover da li kesiran predmet odgovar predmet koj je zatrazen ;"
"stranic nij dozvoljen za prijavljen korisnik ."
"stranic nij dozvoljen za zaposlen ."
"stranic nij dozvoljen za student ."
"isteka jwt - id na pocetn ."
"parsiranj datum iz string ."
"prebroj kolik filter je odabran . ak nij odabran nijedan , prikaz sva obavestenj ."
"dohva trenutn url ."
"dohva trenutn verzij predmet ."
"iteriraj kroz sve predmet koj je upi vrati ."
"prover da predmet vec nij doda za ova semestar - moz se desi ak 2 odsek im ist predmet u ist semestr ."
"korisnick im je zauzet ."
"hesiraj lozink ."
"jwt"
"tod : prover da li student pra trazen predmet ."
"dohva fajl ."
"tod : cleanup upload / download routes"
"ne rad"
"prover da li je uploadovan fajl slik"
"ak fajl nij null"
"doda dijalog"
"doda dijalog !"
"ne rad !"
"poboljsa"
"server vrc zaposlen kom se poklap kor im sa parametr"
"server kreir student sa parametr"
"vracanj svih aktivn student"
"obris predmet na osnov id-ja"
"server vrc sve predmet"
"server kreir predmet sa parametr"
"upda lozink i stav prviput = fals"
"ov sam admin poziv"
"* * resetovanj svih promenljiv"
"* * registracij zaposlen , unet parametr se prosleđuju servis * stdet koj ih šalje http zahtev gde se nov zaposlen unos u baz"
"* * dohvatanj korisnik iz baz i setovanj promenjiv"
"* * funkcij koj napušta opcij ažuriranja"
"* * potvrd azuriranj zaposlen , podac se šalju servis zaposlen i uređuje se baz"
"* * dohvaanj odsek na odabran predmet"
"* * potvrd ažuriranja predmet"
"uslov da se predmet smatr položenim je da student im prek 51 bod zbirn na svim aktivnost . da student bud lep"
"* * postavljanj broj grup koj administrator želi da postav na predmet"
"* * selektovanj student i deselektovanj sudent za dodavanj na predemt"
"* * funkcij koj se vrši izbor opcij za dodavanj nov fajl"
"* * * funkcij koj omogućava sortiranj postavljen fajlov na stanic"
"imen funcij su ist ka i http poziv"
"* * funcij koj se bir opcij postavljanj nov obavestenj"
"* * * uklanjanj odabran obaveštenja"
"* * dohvatanj predmet koj su na smer op"
"* * dohvatanj izabran fajl iz baz"
"* * funkcij koj se bir opvij postavljanj nov fajl"
"* * dohvatanj i stortiranj svih obavestenj vezan za predmet"
"* * dohvatanj materijal postavljen za ispitn pitanj"
"* * dohvatanj materijal apostavljen za projekt"
"* * dohvatanj predmet koj treba da se prikaže na stranic"
"* * odustajanj od ažuriranja predmet"
"* * * funkcij koj se obelezav predmet koj student zel da sluša"
"* * * uklanjanj konkretn vest u sistem"
"* * funkcij koj dohvat predmet iz baz"
"* * izbor opcij za dodavanj nov vest"
"* * * odabir opcij za ažuriranje postojeće vest"
"* * * funkcij u koj se menj redosled prikazivanj postavljen vežbi"
"* * * funkcij koj otvar fajl u nov tab"
"* * odustanja od opcij promen"
"* * odustajanj od promen"
"* * izbor opcij za ažuriranje"
"alert ( odabranizaposlen . im ) ;"
"* * dodavanj fajl vest"
"* * čuvanje fajl na backend del"
"* * uklanjanj fajl vezan za vest"
"predavanj"
"pokren filereader"
"sacuva podatk"
"xls i csv ucitavanj student"
"* * texteditorcomponent je doda u aplikacij posebn instalacij * * @kolkov / angular-editor * * predstavlj uniformn prikaz namensk komponent za uredjivanj tekst * poseduj vis opcij i pogodan je da se korist kad se objavljuj nek informacij * koj pored informativn karakter , trebaju da im i zadatk da privuk korisnik , * a i da istakn nek detalj i da doda nek , koj bi bilo mnog komplikovan * doda koriscenj obicno textview komponent"
"ciscenj alert"
"* * @private * u zavisnost od promen stanj ov subject , menj se stanj i * text observabl objekt koj svim svoji subscriber javlj da se desi * promen , i tim vrednost koj se unos u cust komponent su uvek dosledn * i spremn da se posalj u baz"
"kad se promen rut , vraca se na prv stran predmet uvek se na pocetk prikazuj informacij sa obavestenj"
"inicijalizuj se korisnik i vrs se autorizacij"
"dodavanj nov tip"
"inicijalizacij korisnik i autorizacij"
"dodavanj nov student"
"odbijanj studentsk prijav za predmet"
"dodavanj nov zaposlen"
"inicijalizacij svih student"
"inicijalizacij korisnik"
"inicijalizacij svih notifikacij"
"dodavanj profesor za vezb u plan angazman"
"inicijalizacij predmet za prikazivanj"
"sortiranj obavestenj na predmet"
"promen lozink"
"cuvanj zaposlen koj ce se prikaza na nov stranic"
"dodavanj nov lab"
"brisanj ispit"
"promen projekt il laboratorij"
"dodavanj nov ispit"
"dodavanj nov projekt"
"- servis za rad sa korisnik -"
"korisnik sa korisnick imen vec postoj u sistem"
"obavestenj"
"obavestenjepredmet"
"planpredmet"
"dodat za nov spisak zaposlen"
"nist on nij registrovan , ne moz da vid detalj o predmet"
"formir sve potrebn nizov i sve za ubacivanj jedn plan angazovanj"
"na koj grup se odnos"
"imeiprezim"
"tip"
"za slucaj da se nek buda nij odjavi"
"postavljanj korisnik u localstorag"
"korisnick im nij ispravn"
"ne dohvata predmet iz baz vec iz localStorage-a"
"predmet im vis obavestenj"
"dodatk u tok dizajn"
"funkcij koj prijavljuj student na spisak tak sto ga dodaj tam u spisk i niz student i omogucav mu da uploaduj zip il 7 z fajl"
"da se azurir prikaz na stranic"
"domacipopredmet"
"dodat hardkodovan"
"id vest u koj se dodaj"
"fajl imeiprezim tip datum velicin"
"kopiran funkcij za upload za dodavanj slik zaposlen od stran admin"
"ovd im im fajl"
"opst podac za sve"
"tod regex sifr predmet"
"tod select za smer"
"* OBAVEŠTENJA *"
"AŽURIRANJE OBAVEŠTENjA"
"registracij korisnik"
"kategorij ( tip ) OBAVEŠTENJA"
"* ANGAŽOVANJE na predmet ( zaposlen ) *"
"tod naprav zasebn stranic za svak obavestenj"
"zajednick parametr"
"tod captch za registracij korisnik"
"/ predmet /"
"dodavanj predmet"
"/ azuriranj predmet /"
"/ dodavanj predavc /"
"izmen korisnik za 2 way"
"dohvatanj fajlov u nizov sa materijal"
"neregistrovan korisnik"
"u zavisnost od parametr niz doda u odgovarajuc niz sa materijal i azuriraj predmet"
"e sad nis svi za dat smer"
"id obavestenj i moz da se korist za sortiranj"
"alert ( "" prav "" ) ;"
"dohvatis sve predmet te fin i ond mozes lep radis ko covek"
"id na pocetn pa se loguj opet ;"
"to je mai polj zaprav"
"multer za formdat forma , on djubr indijsk angular-file-uploader salj ka formdat i bodyparser to ne moz handluj pa se korist multer"
"zaprav naziv je sifr"
"obavezan il izborn"
"funkcij za promen lozink"
"prover da li je star lozink ispravn unet za ulogovan korisnik"
"ov je potrebn jer u ist komponent prikazuj sva 4 tip obavestenj ( takmicenj , konferencij , praks i posa )"
"ov je potrebn jer u ist komponent prikazuj sva 4 plan nastav ( za si , rt , osta i master )"
"pomocn promenjiv koj odredjuj da li ce se prikaziva form za logovanj il usernam i dugm za logout"
"da bi smo zna sta sve treba da prikazem u zaglavlj"
"usernam od ulogovan korisnik"
"password od ulogovan korisnik"
"prover da li su ob polj popunjen"
"administrator"
"cuva tip korisnik kak bi smo zna koj funkcionalnost da mu omogucim"
"ulogovan zaposlen je neaktivn - potrebn je izvrsi promen lozink"
"azuriranj svih zaposlen iz niz ( for petlj prolaz kroz niz )"
"pomocn men - drug niv"
"dovlacenj svih angazovanj iz baz"
"cuva podatk iz form za dodavanj"
"cuva sve iz baz"
"bool koj nam kaz da li je prikaz za brisanj il azuriranj"
"prover da li su obavezn polj prazn"
"upload fajl za domac"
"event koj okid kad se ucit fajl za lab"
"dodavanj obavestenj u baz"
"dovlacenj plan angazovanj iz baz"
"pomoc ov metod simulir podmen za obavestenj"
"dovlaci sve podatk za izabran predmet iz baz"
"promen podatk o predmet u baz"
"filtrir sam obavestenj iz poslednj 3 mesec"
"dovlacenj plan nastav iz baz"
"poziva ov metod na pocetk html komponent kak bi smo zna koj tip korisnik je ulogovan , njegov usernam i odsek za koj izlistava predmet"
"kad korisnik pritisn slajd lev za slik"
"kad korisnik pritisn slajd desn za slik"
"prover da li je obavestenj mladj od 7 dan"
"ugradjuj http klijent kak bi smo mogl da saljem http zahtev"
"metod koj dohvat pracenj predmet iz baz"
"metod koj dohvat sve predemt iz baz"
"metod koj dohvat zaposlen po username-u"
"metod za registracij student"
"pakuj usernam i password u jedn promenjiv ( dat )"
"1. arg : naziv pod koji eksportuj objekt 2. arg : objekt 3. arg : im kolekcij u baz povezuj se sa baz"
"struktur objekt student u kolekcij reprezentuj jedn user"
"trazim sva obavestenj ( nem uslov u metod find ) i on nam vrc il gresk il obavestenj"
"ak nem gresk vratim niz obavestenj u json format"
"ak nem gresk vratim niz u json format"
"kreiram nas aplikacij"
"trazim sve iz zaposlen ( nem uslov u metod find ) i on nam vrc il gresk il obavestenj"
"dohvatanj student"
"ov aplikacij moz da obezbed i korist cros origin shering i da cit podatk iz tel zahtev u json format"
"dohvatanj predmet"
"obezbedjuj cors origin shering"
"ispisem poruk ak je konekcij uspesn otvoren"
"podizem jedan rest ap uz pomoc jedn ruter"
"registracij - post zahtev"
"mora prv err pa user , nikak obrn"
"promen sifr za student"
"dohvata usernam i nov lozink iz tel mog post"
"doda niz u baz"
"exportuj pod imen user ova objekt user , a iz baz gled tabel users"
"gde ce da se smesta fajlov"
"kak se naziv fajl kad se uploaduj"
"sta je br ov"
"* * brisanj odabran fajlov iz red u uploader * @param i indeks koj iznacav na koj odeljk stranic se vrs azuriranj"
"* * download fajl * @param uploadnam im fajl na server"
"* * inicijalizacij fajl loader koj se korist pr upload fajlov"
"* * prover da li je trenutn datum pr zadat datum * @param dat datum"
"rad se upload sam poslednjeg fajl"
"* * prover da li je student na spisk * @param usernames niz korisnick imen koj se nalaz na spisk"
"* * filtriranj i sortiranj predmet po semestr i naziv * @param coursesinfos niz sa informacij o predmet * @param semester semestar"
"* * brisanj zaposlen * @param usernam korisnick im"
"redirekcij ak parametar nij prav"
"* * @module * komponent za prikaz profi zaposlen"
"* * @module * komponent za prikaz list zaposlen"
"* * @module * komponent za prikaz pocetn stranic katedr"
"* * slajdovanj slik"
"* * dodavanj nov predmet"
"* * azuriranj informacij o predmet"
"rad se aploud svih fajlov"
"ak obavestenj sadrz i fajlov salj se svi"
"obicn obavestenj bez fajlov"
"* * dohvatanj svih predmet na koj je nastavnik"
"* * @module * komponent za prikaz bocn men"
"filtriranj obavestenj mladj od 3 mesec i sortiranj po datum"
"* * @module * komponent za prikaz glavn obavestenj koj upravlj admin"
"* * @module * komponent za prikaz projekt - rad i ponud za zaposlenj i praks"
"* * @module * komponent za promen lozink"
"* * dohvatanj podatk iz csv fajl * @param csvrecordsarray niz podatk o student * @param headerlength br kolon"
"* * registracij student ucitan iz csv fajl"
"* * ispis imen odabran fajl rad sto boljeg simuliranj input type fi * @param fileinput html input"
"* * @module * guard koji se omogucav pristup pojedin stranic sam admin"
"* * brisanj predmet i informacij * @param cod sifr predmet * @param coursenam im predmet"
"* * dohvatanj svih predmet za odredjen modul * @param modul modul"
"* * dohvatanj nastavnik koj su na predmet * @param coursenam im predmet"
"* * dohvatanj svih zaposlen"
"* * dohvatanj zaposlen * @param usernam korisnick im"
"* * @module * servis za zaposlen"
"* * dodavanj kategorij opsteg obavestenj * @param category kategorij"
"* * brisanj fajl sa sajt predmet * @param uploadnam im fajl na server"
"* * azuriranj redosled prikaz fajlov na sajt predmet * @param uploadnames imen fajlov na server * @param orders redosled"
"* * dodavanj obavestenj o predmet * @param notic obavestenj"
"* * dohvatanj svih obavestenj za predmet * @param cod sifr predmet"
"* * prijav na sist * @param usernam korisnick im * @param password lozink"
"* * registrovanj nov korisnik * @param user korisnik"
"* * dohvatanj predmet koj pohadj student * @param usernam korisnick im"
"* * @module * servis za student"
"* * azuriranj podatk o korisnik * @param user korisnik"
"* * @module * komponent za prikaz profi student"
"moraju svi podac biti unet"
"moraju biti ured star lozink"
"da ne bi opet ist sumbitova dok ne ucit nov fajl"
"kak bi se pocetn opet ucita rad lepseg izgled"
"prover da li je korisnik admin"
"prover da li je korisnik profesor"
"prosl prover do sad"
"prover za tip studij u korisnick imen"
"atribut za registracij profesor"
"inicijalizacij zbog prover"
"kad je udifined sam pedj na no_image . jpg"
"kraj"
"pocetn stanj form"
"opcion"
"- zaposlen -"
"- obavestenj -"
"na rti"
"- plan angazovanj -"
"poziv servisn f-je koj je vezan za bekend de"
"* * klas za dodavanj korisnik koj poziv administrator"
"* * funkcij za dohvatanj student na predmet na promen predmet"
"* * funkcij za dodavanj student na predmet"
"* * funkcij za brisanj student s sa izabran predmet * @param s"
"* * klas za azuriranj korisnik koj poziv administrator"
"* * klas za prikazivanj pocetn stranic administrator"
"* * klas za azuriranj predmet koj poziv administrator"
"* * funkcij za brisanj predmet p * @param p"
"* * klas za dodavanj predmet koj poziv administrator"
"* * funkcij za dodavanj predmet"
"* * funkcij za dohvatanj grup na promen predmet"
"* * funkcij za promen lozink"
"* * funkcij za prikaz spisk"
"* * funkcij za prikaz moji predmet kod registrovan korisnik"
"* * funkcij za prikaz predmet na rt smer"
"* * klas za prikaz heder kod admin"
"* * funkcij za klik na tab korisnik"
"* * funkcij za klik na tab plan"
"* * funkcij za klik na tab Plan-dodaj student"
"* * funkcij za klik na tab obavestenj"
"* * klas za prikaz heder kod nastavnik"
"* * funkcij za klik na tab vest"
"* * funkcij za klik na tab Vesti-dodaj vest"
"* * funkcij za klik na tab Vesti-azuriraj vet"
"* * funkcij za klik na tab predmet - projekt"
"* * funkcij za klik na tab profi"
"* * klas za login"
"* * funkcij za brisanj vest * @param v"
"* * klas za dodavanj vest koj poziv nastavnik"
"* * funkcij za promen predmet"
"* * klas za prikaz ispit koj poziv nastavnik"
"this . novafj ( ) ;"
"* * klas za lab koj poziv nastavnik ( slicn ka i za ispi )"
"* * funkcij za dohvatanj obavestenj na promen kategorij"
"mladj od 3 mesec ~ 90 dan"
"* * klas za prikaz detalj predmet"
"* * funkcij za prikaz obavestenj"
"* * funkcij za prikaz predavanj"
"* * funkcij za prikaz ispit"
"* * klas za list moji predmet"
"* * klas za ispi na predmet"
"* * funkcij za skidanj fajl * @param fajl"
"* * klas za prikaz obavestenj ( vest ) na predemt"
"* * klas za registracij korisnik"
"za student"
"* * funkcij za dohvatanj grup na osnov sifr predemt * @param sifr"
"* * funkcij za dohvatanj svih nastavnik"
"* * funkcij za cuvanj obavestenj"
"* * funkcij za brisanj obavestenj"
"* * funkcij za registrovanj korisnik k * @param k"
"* * funkcij za cuvanj grup g * @param g"
"* * funkcij za cuvanj vez Student-Predmet * @param korim * @param sifrapredmet"
"* * servisn klas za nastavnik"
"* * funkcij za prikaz profiln slik ak postoj , tj default slik u suprotn"
"= zaposlen"
"post il patch u zavisnost da li je insert il upda"
"uspel"
"this . ims . adderrormessag ( this . translation . translat ( ' error . coreerrormessag ' ) , this . translation . translat ( "" error . coreerrormessagedescription "" )) ;"
"consol . log ( this . loginform ) ;"
"consol . log ( this . loginform . get ( ' br ' ) . valu ) ;"
"ak naleti na menuit koj im url ! = null ond je to sigurn list . uzima iz niz roditelj element na pozicij nivo-1 i njem dodajem ova list osi u slucaj da je sam list na nivo 0."
"doda direktn u osnovn niv"
"ak naleti na it koj im naziv null to je separator"
"dodajem ga u submenus"
"puka prv poziv get metod , access token nevalidan"
"uspesn osvezen token"
"delet metod"
"ak je status 401 pokusava osvezavanj refresh token pr cem koristim ugnjezdjavanj zahtev tj kad pozovem post za dohvatanj nov roken , odma u flatmap call back-u poziva ponov dohvatanj resurs rekurzivn"
"nepredvidjen gresk"
"potrebn je skroz iskljucit heder !"
"put metod"
"sam ak ponov dodj status 401 nij prosa ni refresh token , u ostali slucaj puka je rekurzivn poziv"
"ak je separator ( ond se zatvaraj zagrad"
"jsonvalu [ i ] [ valuekey ] ;"
"sekect item za pretrag arhiviran"
"parametr pretrag"
"arhiviranj"
"reset selekcij"
"this . xsyspravnolicesyskorisniktransferservic . transfer . next ( -100 ) ;"
"this . unoskorisnikform . get ( ' datumvazenjanalog ' ) . setvalidators ( [ validators . required ] ) ;"
"zaposlen dodaj gost sa trajanj nalog od 2 h"
"this . selectedsyskorisnik = null ;"
"pr niz od search komponent"
"za vracanj na spisak zaposlen ak se zov od stran admin"
"za izabran predmet iz list ucitav podatk koj zaposlen moz da menj"
"read fi as dat url"
"called onc readasdataurl is completed"
"names je niz korisnick imen il sifr predmet ( zavis sta je input array )"
"prover obrasc indeks"
"generisanj korisnick imen na osnov prikupljen licn podatk"
"ak je indeks za dat tip studij jedinstven -> azuriranj inac : gresk"
"nij jedinstven indeks za tip studij"
"- insert predmet -"
"ak je sifr jedinstven -> azuriranj inac : gresk"
"prover da li korisnick im im razmak u seb"
"ak je korisnick im jedinstven -> azuriranj inac : gresk"
"- ang grup -"
"da li postoj student"
"login"
"lozink"
"svi podac o svim nastavnik"
"materijal za predavanj i vezb"
"materijal za ispi"
"ne salj ce indeks , jer ' / ' prav problem pr rutiranj"
"req"
"ak je tru znac da si klikn dugm azuriraj"
"star korisnick im da bismo zna koj da updateuj jer ak se im promijen vis nec biti ist korisnick im izracunat"
"pocetn"
"login stranic"
"ne mora il mora zbog logout ?"
"dohvat on koj mi se traz"
"ak sam ulogovan"
"sve funkcij za administrator kolekcij"
"na pocetk poruk gresk je prazn"
"prover ispravnost podatk"
"slanj zahtev ka server"
"korim"
"slanj zahtev za izmen podatk student"
"slanj zahtev za registracij zaposlen ka server"
"slanj zahtev ka server za dohvatanj korisnik po korisnick imen"
"slanj zahtev - brisanj vest"
"salnj zahtev - izmen vest"
"slanj zahtev ka server za dohvatanj svih predmet zada grup"
"slanj zahtev ka server za dohvatanj svih predmet koj drz nastavnik"
"slanj zahtev za registracij student ka server"
"slanj zahtev za uklanjanj predmet zada sifr"
"ak postoj fajl dodel ga promenljiv this . fi"
"mozd je izabran ist predmet , u tom slucaj nem potreb za dohvatanj iz baz podatk"
"na pocetk poruk gresk ne postoj"
"proverava da li je nek podatk osta nepopunjen"
"zat treba dohvatit nov sifr za angazovanj"
"podrazumevan tab"
"izabran tab od stan korisnik ( o-predmetu / predavanj / vezb / laboratorij .. )"
"dohvatim i sortiram predmet tog odsek po semestr"
"pretpostavi da predmet ne postoj"
"u suprotn treba dohvatit sve predmet koj pripada toj grup"
"postav trenutn licn podatk korisnik"
"u buducnost doda i opcij za promen i ostali licn podatk ( npr. prezimen )"
"proverava ispravnost uneti podatk"
"saljem zahtev server za promen lozink"
"uspesn akcij - po uslov zadatk saljem korisnik na pocetn stranic"
"poruk o uspesn il neuspesn zahtev za registracij"
"proverava sve sto mozem bez slanj zahtev ka server"
"br indeks je br u raspon 1 - 9"
"postavlja poruk uspeh il neuspeh"
"moram da prepis niz kak ne bih utica na roditeljsk komponent"
"ak je mapiran na drug predmet izbac ga"
"u suprotn dohva sve vest tekuceg predmet"
"mozd predmet jos uvek nem nijedn vest"
"dodatn prover da li je korisnik zaposlen"
"dohvatim podatk iz URL-a koj je zaposlen u pitanj"
"jedin sto moz da ugroz drug predmet je vec postojec sifr"
"izmen zaposlen"
"doda vest zadat predmet"
"jedin sto moz da ugroz drug korisnik je registracij sa korisnick imen nek drug korisnik"
"menjanj informacij o zadat predmet"
"ak je promenjen i sifr treba azurir kolekcij za termin nastav"
"jedin sto se smatr gresk je da je student vec prikljucen zadat predmet"
"ovd uocava tu gresk i saljem poruk o gresc"
"zali se da tr nem atribut ngfor , proradi tek kad sam isl ctr c i ponov build frontend i backend"
"bez ov se javlja gresk cannot read property obavestenj of undefined i na kraj ispis te gresk nest chang detect i ja doda ov i proradi al kad obris i dalj rad tak da ne zna sta se desav .."
"this . submitted = tru ;"
"vec si im to im , zat ne ulaz u tu fju !"
"usernam ce se promeni u zavisnost od prv slov imen prezimen , ka i tip studij ."
"za brisanj predmet"
"za azuriranj student"
"zaposlen za dodavanj"
"za azuriranj zaposlen"
"prover jedinstvenost korisnick imen"
"prover da li je korisnik u sistem"
"brisem iz angazovanj"
"brisem sa spisk student koj su bili prijavljen da ga pra"
"menja status spisk na zatvoren il otvoren"
"dohva nastavnik dodeljen predmet"
"napravi nov list nastavnik za predmet"
"dohvatisvepredmet ( ) dohvat list svih predmet na master studij"
"stranic na koj nastavnic mod kreir i azurir podatk obavestenj na predmet na koj su angazovan"
"omogucav administrator brisanj predmet"
"prikaz predmet sa rt katedr koj se nud na ostali odsec"
"komponent za reset password"
"- promen pass zaposlen -"
"stranic student za prikaz laboratorijsk vezbis na predmet"
"stranic student za prikaz materijal za vezb na predmet"
"stranic za prikaz projekt"
"stranic na koj administrator moz predlegad i azurir podatk student"
"stranic na koj administrator moz predlegad i azurir podatk zaposlen"
"to show imag preview"
"prikaz predmet na rt studij"
"prikaz detalj nastavnik"
"popunjava ih sad po nov redosled u baz"
"nada se da ih je ubaci u baz"
"ovd rad profesor"
"dohavtit objekt predmet koj cem da menja"
"kad prikazuj predmet sa drug stran"
"uzm nam nastavnik"
"sacuva objekt u localstorag"
"im naziv fajl i im student koj ga postavlj"
"otvor upload form"
"postav odgovarajuc"
"ukljuc odg"
"dodavanj u"
"promen lozinke-end"
"registracij zaposlen - end"
"svi si predmet"
"osta odsec"
"cuvanj u baz"
"prezim"
"mogu da vid sam on student koj pra taj predmet"
"doda da je tip lab"
"fajlov za stranic predmet"
"dodavanj fajl uz vest"
"registrovanj student"
"prijav student na predmet"
"dodavanj zaposlen - admin"
"bris fajl"
"obris student - admin"
"vest profesor"
"{ } nem parametr , ka find all"
"zaposlen po prezimen za stranic zaposlen"
"dodavanj tekst lab-a za predmet"
"doda tekst za projekt predmet"
"promen vidljivost"
"azuriraj studenta-admin"
